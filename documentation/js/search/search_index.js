var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AdminGuard.html",[0,2.31,1,2.31]],["body/guards/AdminGuard.html",[1,3.623,2,3.169,3,0.315,4,0.278,5,0.278,6,3.594,7,0.278,8,1.189,9,4.656,10,0.763,11,4.239,12,4.42,13,2.162,14,0.97,15,4.239,16,1.443,17,0.025,18,0.97,19,0.717,20,1.443,21,4.566,22,5.28,23,3.333,24,5.28,25,4.239,26,2.851,27,0.936,28,1.907,29,0.854,30,1.537,31,0.565,32,1.21,33,4.239,34,2.206,35,2.048,36,0.315,37,0.612,38,1.065,39,1.21,40,1.373,41,4.239,42,2.423,43,2.048,44,4.239,45,3.169,46,2.598,47,3.594,48,2.598,49,0.019,50,0.019]],["title/components/AppComponent.html",[51,0.256,52,0.809]],["body/components/AppComponent.html",[3,0.21,4,0.185,5,0.185,7,0.185,8,0.901,10,0.508,13,1.943,14,1.005,16,0.756,17,0.025,18,0.864,19,0.7,20,0.756,27,0.623,29,0.805,31,0.376,32,0.806,35,1.973,36,0.21,37,0.407,38,1.026,39,0.806,40,1.323,49,0.014,50,0.014,51,0.357,52,1.239,53,1.165,54,0.858,55,0.858,56,0.858,57,0.858,58,2.392,59,1.554,60,0.858,61,2.05,62,1.823,63,1.242,64,4.798,65,1.242,66,4.083,67,0.843,68,4.798,69,2.94,70,4.068,71,1.599,72,1.469,73,2.209,74,2.699,75,4.083,76,2.125,77,2.822,78,1.094,79,1.005,80,2.261,81,1.37,82,1.37,83,2.822,84,3.462,85,3.052,86,2.822,87,3.462,88,3.462,89,2.822,90,2.392,91,2.822,92,2.392,93,2.392,94,2.822,95,2.822,96,2.822,97,2.822,98,2.109,99,4.083,100,2.822,101,2.822,102,1.898,103,2.392,104,2.822,105,2.392,106,1.898,107,3.931,108,2.822,109,2.822,110,2.392,111,2.822,112,2.822,113,4.083,114,2.822,115,2.109,116,2.392,117,1.729,118,2.822,119,1.363,120,0.858,121,1.242,122,1.242,123,0.858,124,1.501,125,0.858,126,0.858,127,0.623,128,0.858,129,0.623,130,0.858,131,0.665,132,0.858,133,0.623,134,0.858,135,0.623,136,0.806,137,1.242,138,0.665,139,0.858,140,0.623,141,0.806,142,0.858,143,0.665,144,0.858,145,0.623,146,0.858,147,0.623,148,0.858,149,0.665,150,0.858,151,0.623,152,0.709,153,0.623,154,0.756,155,0.858,156,0.623,157,0.858,158,0.665,159,0.858,160,0.858]],["title/modules/AppModule.html",[161,2.567,162,2.31]],["body/modules/AppModule.html",[3,0.196,4,0.173,5,0.173,17,0.025,29,0.99,31,0.351,36,0.196,37,0.38,43,1.271,49,0.014,50,0.014,52,1.512,62,0.705,74,2.554,92,2.231,127,1.253,129,1.253,131,1.337,133,1.253,135,1.253,138,1.337,140,1.253,143,1.337,145,1.253,147,1.253,149,1.337,151,1.253,152,0.661,153,1.253,156,1.253,162,4.766,163,1.482,164,2.61,165,2.231,166,2.231,167,2.231,168,2.231,169,2.231,170,3.478,171,3.478,172,3.478,173,3.29,174,1.967,175,2.632,176,3.29,177,3.88,178,2.9,179,3.88,180,2.9,181,3.88,182,1.967,183,1.967,184,3.88,185,3.88,186,1.613,187,3.88,188,3.88,189,1.37,190,2.632,191,2.632,192,2.632,193,2.632,194,2.632,195,2.231,196,1.77,197,2.231,198,2.231,199,1.77,200,2.231,201,2.231,202,2.632,203,2.632,204,2.632,205,1.271,206,1.482,207,2.632,208,2.231,209,1.613,210,2.231,211,2.231,212,1.613,213,3.29,214,2.231,215,2.231,216,1.77,217,1.77,218,2.231,219,2.231,220,2.231,221,1.77,222,2.231,223,1.77,224,2.231,225,2.632,226,2.632,227,2.632,228,2.632]],["title/modules/AppRoutingModule.html",[161,2.567,170,2.105]],["body/modules/AppRoutingModule.html",[1,2.315,3,0.256,4,0.226,5,0.226,9,3.509,17,0.025,29,0.989,31,0.458,32,0.982,36,0.256,37,0.496,49,0.016,50,0.016,51,0.493,127,1.036,129,1.036,133,1.036,135,1.036,140,1.036,145,1.036,147,1.036,151,1.036,153,1.036,156,1.036,163,1.938,170,2.877,178,2.573,180,3.509,195,2.918,196,2.315,197,2.918,198,2.918,199,2.315,200,2.918,201,2.918,208,2.918,209,2.109,210,2.918,211,2.918,212,2.109,213,3.98,214,2.918,215,2.918,216,2.315,217,2.315,218,2.918,219,2.918,220,2.918,221,2.315,222,2.918,223,2.315,224,2.918,229,3.442,230,3.442,231,4.695,232,3.594,233,3.158,234,3.442,235,3.442,236,3.158,237,2.268,238,3.158,239,3.509,240,3.158,241,3.509,242,3.158,243,2.877,244,3.158,245,2.918,246,1.446,247,6.687,248,3.442,249,3.442,250,2.573,251,3.442,252,3.442,253,3.442,254,2.918]],["title/components/AuthComponent.html",[51,0.256,127,0.758]],["body/components/AuthComponent.html",[3,0.249,4,0.219,5,0.219,7,0.219,8,1.016,10,0.948,14,0.829,17,0.025,18,0.829,27,0.738,29,0.482,31,0.445,36,0.249,37,0.482,38,1.157,49,0.016,50,0.016,51,0.392,52,0.788,53,1.314,54,1.017,55,1.017,56,1.017,57,1.017,59,1.705,60,1.017,61,2.096,62,1.847,63,1.399,65,1.399,71,1.724,78,1.233,120,1.017,121,1.399,122,1.399,123,1.017,124,1.618,125,1.017,126,1.017,127,1.252,128,1.017,129,0.738,130,1.017,131,0.788,132,1.017,133,0.738,134,1.017,135,0.738,136,0.954,137,1.399,138,0.788,139,1.017,140,0.738,141,0.954,142,1.017,143,0.788,144,1.017,145,0.738,146,1.017,147,0.738,148,1.017,149,0.788,150,1.017,151,0.738,152,0.84,153,0.738,154,0.896,155,1.017,156,0.738,157,1.017,158,0.788,159,1.017,160,1.017,255,2.834,256,5.041,257,5.263,258,4.602,259,3.343,260,3.343,261,4.602,262,4.807,263,3.902,264,3.902,265,4.602,266,2.382,267,4.602,268,3.934,269,3.475,270,2.834,271,2.049,272,2.049,273,2.049,274,3.096,275,2.82,276,2.834,277,3.902,278,3.343]],["title/guards/AuthGuard.html",[0,2.31,233,2.31]],["body/guards/AuthGuard.html",[2,2.302,3,0.229,4,0.202,5,0.202,7,0.202,8,0.959,9,4.09,10,0.554,13,1.994,14,0.907,16,1.349,17,0.025,18,0.907,19,0.671,20,1.349,21,3.684,22,4.638,23,2.836,24,4.638,26,2.071,27,0.959,28,1.386,29,0.907,30,1.24,31,0.41,32,0.879,34,1.602,35,1.488,36,0.229,37,0.444,38,0.774,39,0.879,40,1.94,42,2.462,43,2.1,45,2.302,46,1.887,47,2.611,48,2.663,49,0.015,50,0.015,72,1.602,73,2.299,76,2.262,79,0.985,80,2.014,93,2.611,124,0.879,186,1.887,233,2.923,237,1.488,246,2.516,279,2.611,280,5.988,281,4.346,282,3.765,283,4.09,284,3.765,285,3.08,286,3.079,287,3.079,288,3.079,289,4.346,290,3.079,291,2.847,292,4.346,293,1.602,294,1.887,295,2.302,296,1.294,297,2.663,298,2.071,299,3.249,300,1.734,301,2.611,302,2.611,303,2.611,304,2.302,305,2.071,306,6.154,307,4.346,308,3.079,309,3.079,310,1.887,311,3.079,312,4.346,313,2.611,314,2.611,315,2.611,316,2.611,317,3.353,318,3.079,319,3.079,320,3.079,321,2.611,322,3.079,323,3.079,324,4.346,325,3.079,326,4.346,327,3.079,328,2.611,329,2.611,330,3.079]],["title/interfaces/AuthResponseDto.html",[300,1.934,331,1.044]],["body/interfaces/AuthResponseDto.html",[3,0.358,4,0.316,5,0.316,7,0.316,17,0.024,19,0.834,28,2.93,36,0.433,49,0.02,50,0.02,67,1.203,79,1.235,291,3.388,300,3.279,317,3.99,331,1.771,332,2.323,333,3.594,334,5.52,335,2.946,336,4.076,337,3.234]],["title/injectables/AuthenticationService.html",[30,0.98,73,1.443]],["body/injectables/AuthenticationService.html",[3,0.193,4,0.171,5,0.171,7,0.171,10,0.468,14,1.153,16,0.697,17,0.025,18,0.468,19,0.346,20,0.697,29,0.9,30,1.098,31,0.346,34,1.353,35,1.256,36,0.193,37,0.375,39,0.742,40,1.945,42,2.631,49,0.013,50,0.013,67,0.794,73,1.616,79,1.053,81,1.805,82,1.805,186,1.594,246,1.093,282,2.875,283,3.781,284,3.421,285,2.848,291,2.002,293,1.353,294,1.594,296,1.093,297,2.357,298,1.749,299,1.944,300,1.464,301,2.205,303,2.205,304,1.944,305,1.749,335,1.594,338,1.464,339,2.205,340,2.716,341,4.577,342,4.577,343,4.577,344,4.577,345,3.88,346,3.88,347,3.88,348,4.577,349,4.577,350,4.577,351,4.577,352,2.205,353,3.88,354,4.288,355,2.601,356,3.846,357,2.601,358,2.002,359,4.577,360,2.601,361,2.601,362,2.601,363,2.601,364,2.601,365,2.601,366,2.601,367,2.601,368,2.601,369,2.601,370,2.002,371,2.002,372,2.002,373,1.749,374,2.357,375,1.749,376,1.944,377,1.749,378,1.749,379,1.749,380,4.254,381,6.236,382,5.398,383,2.601,384,2.601,385,2.601,386,2.601,387,2.601,388,2.601,389,2.601,390,2.601]],["title/injectables/AuthorizationService.html",[12,2.31,30,0.98]],["body/injectables/AuthorizationService.html",[3,0.297,4,0.262,5,0.262,7,0.262,10,0.718,12,3.484,14,0.933,16,1.069,17,0.025,18,0.718,19,0.531,20,1.069,29,0.933,30,1.478,31,0.531,34,2.076,35,1.927,36,0.297,37,0.575,39,1.139,40,1.678,42,1.795,49,0.018,50,0.018,67,1.07,80,1.469,81,1.139,82,1.139,186,2.444,246,2.416,282,3.872,283,4.551,284,4.299,285,3.428,291,2.695,293,2.076,296,1.676,304,2.982,305,2.683,338,2.246,340,2.26,352,3.382,353,4.876,354,5.161,378,2.683,379,2.683,391,3.382,392,5.751,393,3.989,394,3.989,395,2.982,396,2.982,397,3.382,398,2.683,399,3.989,400,3.989,401,2.076,402,4.391,403,3.989,404,3.989,405,3.989]],["title/components/DashboardComponent.html",[51,0.256,129,0.758]],["body/components/DashboardComponent.html",[3,0.277,4,0.245,5,0.245,7,0.245,8,1.093,10,1.002,14,0.892,17,0.024,18,0.892,27,0.823,29,0.538,31,0.496,36,0.277,37,0.538,38,1.245,49,0.017,50,0.017,51,0.414,52,0.878,53,1.414,54,1.133,55,1.133,56,1.133,57,1.133,59,1.802,60,1.133,61,2.122,62,1.87,63,1.506,65,1.506,71,1.803,78,1.327,120,1.133,121,1.506,122,1.506,123,1.133,124,1.692,125,1.133,126,1.133,127,0.823,128,1.133,129,1.309,130,1.133,131,0.878,132,1.133,133,0.823,134,1.133,135,0.823,136,1.064,137,1.506,138,0.878,139,1.133,140,0.823,141,1.064,142,1.133,143,0.878,144,1.133,145,0.823,146,1.133,147,0.823,148,1.133,149,0.878,150,1.133,151,0.823,152,0.937,153,0.823,154,0.998,155,1.133,156,0.823,157,1.133,158,0.878,159,1.133,160,1.133,406,3.159,407,5.928,408,5.563,409,4.953,410,3.726,411,3.726,412,3.702]],["title/injectables/EnvironmentUrlService.html",[30,0.98,285,1.934]],["body/injectables/EnvironmentUrlService.html",[3,0.352,4,0.31,5,0.31,7,0.31,10,1.12,14,1.038,17,0.025,19,0.63,29,0.832,30,1.646,31,0.63,34,2.462,35,2.285,36,0.352,37,0.682,49,0.02,50,0.02,67,1.191,79,1.038,81,1.35,82,1.35,285,3.247,338,2.663,340,2.445,398,3.182,413,5.273,414,4.01,415,4.65,416,5.766,417,5.766,418,4.73]],["title/interceptors/ErrorInterceptor.html",[172,2.105,419,2.912]],["body/interceptors/ErrorInterceptor.html",[3,0.266,4,0.235,5,0.235,7,0.235,8,1.063,10,0.644,13,2.031,14,0.867,16,1.29,17,0.025,18,0.867,19,0.642,20,1.29,23,2.013,26,3.664,27,0.789,29,0.924,30,1.375,31,0.476,32,1.02,36,0.266,37,0.516,38,0.898,39,1.02,40,1.158,42,2.167,49,0.017,50,0.017,79,0.644,81,1.02,90,3.031,172,2.952,186,2.191,236,2.404,244,2.404,246,1.502,250,2.672,296,1.502,337,2.404,377,2.404,420,3.575,421,3.031,422,4.817,423,2.191,424,4.31,425,3.575,426,4.817,427,5.83,428,5.83,429,3.575,430,3.031,431,4.619,432,3.575,433,4.817,434,3.575,435,3.575,436,5.83,437,3.575,438,3.575,439,3.575,440,2.507,441,3.575,442,3.031,443,6.408,444,3.575,445,3.575,446,3.575,447,3.575,448,3.575,449,4.817,450,6.515,451,3.575,452,5.83,453,3.031,454,3.575,455,3.575,456,3.575,457,3.575,458,3.575,459,3.575,460,3.575,461,3.031,462,3.575,463,3.575,464,3.031,465,3.575]],["title/components/FooterComponent.html",[51,0.256,131,0.809]],["body/components/FooterComponent.html",[3,0.265,4,0.234,5,0.234,7,0.234,8,1.062,10,0.98,14,0.866,17,0.025,18,0.866,27,0.788,29,0.515,31,0.475,36,0.265,37,0.515,38,1.209,49,0.017,50,0.017,51,0.405,52,0.841,53,1.373,54,1.085,55,1.085,56,1.085,57,1.085,59,1.763,60,1.085,61,2.112,62,1.867,63,1.463,65,1.463,71,1.771,78,1.289,102,3.236,107,2.667,117,3.335,119,2.324,120,1.085,121,1.463,122,1.463,123,1.085,124,1.663,125,1.085,126,1.085,127,0.788,128,1.085,129,0.788,130,1.085,131,1.373,132,1.085,133,0.788,134,1.085,135,0.788,136,1.018,137,1.463,138,0.841,139,1.085,140,0.788,141,1.018,142,1.085,143,0.841,144,1.085,145,0.788,146,1.085,147,0.788,148,1.085,149,0.841,150,1.085,151,0.788,152,0.897,153,0.788,154,0.956,155,1.085,156,0.788,157,1.085,158,0.841,159,1.085,160,1.085,272,2.948,466,3.024,467,5.442,468,4.81,469,3.567,470,3.567,471,3.596,472,2.4,473,3.024,474,3.024,475,3.024,476,3.567,477,3.567,478,3.567]],["title/components/ForbiddenComponent.html",[51,0.256,133,0.758]],["body/components/ForbiddenComponent.html",[3,0.234,4,0.206,5,0.206,7,0.206,8,0.974,10,0.566,13,1.953,14,0.994,16,0.843,17,0.025,18,0.917,19,0.588,20,0.843,27,0.694,29,0.636,31,0.419,32,0.898,36,0.234,37,0.454,38,1.109,39,0.898,40,1.789,45,2.351,46,3.384,49,0.015,50,0.015,51,0.379,52,0.741,53,1.259,54,0.956,55,0.956,56,0.956,57,0.956,59,1.65,60,0.956,61,2.08,62,1.833,63,1.341,65,1.341,67,0.911,71,1.679,78,1.182,79,0.794,81,0.898,82,0.898,120,0.956,121,1.341,122,1.341,123,0.956,124,1.576,125,0.956,126,0.956,127,0.694,128,0.956,129,0.694,130,0.956,131,0.741,132,0.956,133,1.219,134,0.956,135,0.694,136,0.898,137,1.341,138,0.741,139,0.956,140,0.694,141,0.898,142,0.956,143,0.741,144,0.956,145,0.694,146,0.956,147,0.694,148,0.956,149,0.741,150,0.956,151,0.694,152,0.791,153,0.694,154,0.843,155,0.956,156,0.694,157,0.956,158,0.741,159,0.956,160,0.956,340,2.002,380,3.427,401,2.296,423,1.928,479,2.667,480,5.111,481,5.095,482,4.412,483,5.095,484,4.128,485,4.412,486,3.146,487,3.146,488,3.298,489,2.351,490,2.667,491,3.384,492,3.298,493,2.967,494,4.412,495,3.298,496,3.298,497,4.412]],["title/components/ForgotPasswordComponent.html",[51,0.256,135,0.758]],["body/components/ForgotPasswordComponent.html",[0,1.465,3,0.162,4,0.143,5,0.143,7,0.143,8,0.743,10,0.392,13,1.783,14,0.991,16,0.583,17,0.025,18,0.74,19,0.703,20,0.583,23,1.226,27,0.481,28,1.513,29,0.841,31,0.29,32,0.622,36,0.25,37,0.314,38,0.845,39,0.622,40,1.89,43,1.625,46,2.518,49,0.012,50,0.012,51,0.306,52,0.513,53,0.96,54,0.662,55,0.662,56,0.662,57,0.662,59,1.331,60,0.662,61,1.968,62,1.734,63,1.023,65,1.023,67,0.695,69,2.518,71,1.405,72,1.133,73,1.942,74,2.476,76,1.75,78,0.901,79,0.899,80,1.839,81,1.173,82,1.173,102,1.465,110,1.846,119,1.625,120,0.662,121,1.023,122,1.023,123,0.662,124,1.426,125,0.662,126,0.662,127,0.481,128,0.662,129,0.481,130,0.662,131,0.513,132,0.662,133,0.481,134,0.662,135,1.02,136,1.623,137,1.023,138,0.513,139,0.662,140,0.481,141,0.622,142,0.662,143,0.513,144,0.662,145,0.481,146,0.662,147,0.481,148,0.662,149,0.513,150,0.662,151,0.481,152,0.547,153,0.481,154,0.583,155,0.662,156,0.481,157,0.662,158,1.429,159,0.662,160,0.662,189,1.133,205,1.052,206,1.226,212,3.484,237,1.052,243,1.335,266,1.413,268,2.514,269,2.061,271,3.061,273,2.518,274,1.465,275,1.335,277,1.846,296,0.915,310,1.335,340,2.293,358,1.75,371,1.75,373,1.465,376,2.514,380,2.764,401,1.75,471,1.628,484,3.455,488,1.628,489,1.628,491,1.335,498,4.249,499,1.465,500,3.484,501,2.852,502,4.622,503,2.518,504,4.995,505,3.364,506,2.178,507,2.832,508,1.846,509,2.178,510,2.178,511,2.178,512,2.178,513,2.178,514,2.514,515,1.335,516,1.465,517,1.628,518,1.465,519,1.628,520,1.226,521,2.061,522,2.178,523,1.335,524,1.846,525,2.178,526,1.846,527,2.178,528,2.178,529,2.178,530,1.846,531,1.628,532,2.178,533,2.178,534,3.364,535,2.178,536,2.178,537,1.846,538,1.846,539,1.335,540,2.178,541,2.514,542,2.602,543,2.061,544,2.852,545,2.852,546,2.852,547,3.364,548,2.514,549,2.262,550,2.178,551,2.764,552,2.764,553,1.335,554,2.852,555,1.846,556,1.846,557,1.846,558,2.178,559,2.178,560,2.178,561,2.178,562,2.514,563,2.178]],["title/interfaces/JwtTokenDto.html",[297,2.105,331,1.044]],["body/interfaces/JwtTokenDto.html",[3,0.305,4,0.269,5,0.269,7,0.269,17,0.024,19,0.702,36,0.305,49,0.018,50,0.018,67,1.089,79,1.173,291,3.201,297,3.231,298,2.758,299,5.017,314,4.941,316,4.47,317,3.77,331,1.247,332,1.981,496,4.869,539,2.513,548,3.941,564,3.476,565,4.101,566,4.101,567,3.476,568,4.101,569,4.101,570,5.828,571,6.152,572,5.273,573,6.152,574,5.273,575,5.273,576,5.273,577,3.941,578,6.152,579,5.273,580,5.273,581,6.152,582,6.152,583,5.273,584,5.273,585,4.47,586,5.273]],["title/components/LoginComponent.html",[51,0.256,138,0.809]],["body/components/LoginComponent.html",[3,0.157,4,0.138,5,0.138,7,0.138,8,0.724,10,0.38,13,1.762,14,1.1,16,0.565,17,0.025,18,0.725,19,0.749,20,0.565,27,0.466,28,2.044,29,0.785,30,0.937,31,0.281,32,0.602,36,0.244,37,0.304,38,0.825,39,0.602,40,1.595,42,1.477,43,1.585,46,2.468,48,2.011,49,0.011,50,0.011,51,0.3,52,0.497,53,0.937,54,0.642,55,0.642,56,0.642,57,0.642,59,1.305,60,0.642,61,1.957,62,1.724,63,0.998,65,0.998,67,0.678,71,1.382,72,1.098,73,1.909,76,1.708,78,0.879,79,1.083,81,1.488,82,1.488,106,1.419,117,1.293,119,1.946,120,0.642,121,0.998,122,0.998,123,0.642,124,1.297,125,0.642,126,0.642,127,0.466,128,0.642,129,0.466,130,0.642,131,0.497,132,0.642,133,0.466,134,0.642,135,0.466,136,1.15,137,0.998,138,1.071,139,0.642,140,0.466,141,0.602,142,0.642,143,0.497,144,0.642,145,0.466,146,0.642,147,0.466,148,0.642,149,0.497,150,0.642,151,0.466,152,0.53,153,0.466,154,0.565,155,0.642,156,0.466,157,0.642,158,1.228,159,0.642,160,0.642,189,1.098,205,1.019,206,1.188,246,1.379,266,2.428,268,1.577,271,2.785,273,2.785,274,1.419,275,1.293,276,1.789,293,1.098,294,1.293,296,0.886,328,1.789,329,1.789,340,2.401,346,3.414,358,2.096,370,1.708,373,1.419,380,2.709,401,1.708,440,2.562,484,3.397,488,1.577,489,1.577,493,2.207,503,3.017,507,2.785,514,3.011,515,1.293,516,1.419,518,1.419,520,1.188,521,2.011,523,2.011,530,4.173,542,1.848,549,3.056,551,2.207,552,1.419,553,2.011,554,1.789,562,2.453,587,1.577,588,4.028,589,3.282,590,4.028,591,4.028,592,3.852,593,4.028,594,3.011,595,3.282,596,2.11,597,2.11,598,2.11,599,2.11,600,2.11,601,2.11,602,2.11,603,2.11,604,2.11,605,2.11,606,1.577,607,1.789,608,2.11,609,3.282,610,2.11,611,2.11,612,2.11,613,2.11,614,3.282,615,3.282,616,2.11,617,2.11,618,2.11,619,1.789,620,2.11,621,2.11,622,2.11,623,2.11,624,1.577,625,2.11,626,2.782,627,2.782,628,3.414,629,1.789,630,2.453,631,1.577,632,1.789,633,4.028]],["title/components/ManageTemplatesComponent.html",[51,0.256,140,0.758]],["body/components/ManageTemplatesComponent.html",[3,0.266,4,0.235,5,0.235,7,0.235,8,1.065,10,0.982,14,0.868,17,0.024,18,0.868,27,0.791,29,0.517,31,0.477,36,0.266,37,0.517,38,1.212,49,0.017,50,0.017,51,0.406,52,0.844,53,1.377,54,1.089,55,1.089,56,1.089,57,1.089,59,1.767,60,1.089,61,2.113,62,1.862,63,1.467,65,1.467,71,1.774,78,1.292,120,1.089,121,1.467,122,1.467,123,1.089,124,1.665,125,1.089,126,1.089,127,0.791,128,1.089,129,0.791,130,1.089,131,0.844,132,1.089,133,0.791,134,1.089,135,0.791,136,1.022,137,1.467,138,0.844,139,1.089,140,1.288,141,1.905,142,1.089,143,0.844,144,1.089,145,0.791,146,1.089,147,0.791,148,1.089,149,0.844,150,1.089,151,0.791,152,0.9,153,0.791,154,0.96,155,1.089,156,0.791,157,1.089,158,0.844,159,1.089,160,1.089,216,3.668,217,3.668,412,3.606,634,4.624,635,3.037,636,4.947,637,5.454,638,4.824,639,3.582,640,3.582]],["title/components/NavComponent.html",[51,0.256,143,0.809]],["body/components/NavComponent.html",[3,0.343,4,0.173,5,0.173,7,0.173,8,0.857,10,0.474,13,1.901,14,0.916,16,0.705,17,0.025,18,0.916,19,0.517,20,0.705,27,0.581,28,1.184,29,0.665,31,0.351,32,0.751,36,0.196,37,0.38,39,0.751,40,1.257,49,0.014,50,0.014,51,0.343,52,0.62,53,1.108,54,0.8,55,0.8,56,0.8,57,0.8,60,0.8,61,2.029,62,1.788,63,1.18,65,1.18,67,0.801,71,1.547,72,1.37,73,1.936,76,1.37,78,1.04,79,0.916,81,0.751,82,0.751,102,2.61,103,2.231,106,2.61,107,1.967,115,1.967,116,4.312,119,1.875,120,0.8,121,1.18,122,1.18,123,0.8,124,1.452,125,0.8,126,0.8,127,0.581,128,0.8,129,0.581,130,0.8,131,0.62,132,0.8,133,0.581,134,0.8,135,0.581,136,0.751,137,1.18,138,0.62,139,0.8,140,0.581,141,0.751,142,0.8,143,1.199,144,0.8,145,0.581,146,0.8,147,0.581,148,0.8,149,0.62,150,0.8,151,0.581,152,0.661,153,0.581,154,0.705,155,0.8,156,0.581,157,0.8,158,0.62,159,0.8,160,0.8,266,1.63,269,2.378,270,2.231,272,1.613,274,2.61,275,1.613,302,2.231,340,2.23,345,3.29,347,4.976,401,2.019,402,2.231,471,2.9,472,1.77,473,2.231,474,2.231,475,2.231,490,2.231,493,3.421,503,1.613,539,2.825,553,1.613,556,3.29,557,2.231,592,2.231,619,3.29,641,2.231,642,4.609,643,3.88,644,3.88,645,2.632,646,2.632,647,2.632,648,1.613,649,2.632,650,3.88,651,3.88,652,2.632,653,2.632,654,2.632,655,2.632,656,2.632,657,2.632,658,2.632,659,3.88,660,3.88,661,3.88,662,2.632,663,3.88,664,3.88,665,4.312,666,3.88,667,3.88,668,3.29,669,5.087,670,3.88,671,2.632,672,2.632,673,2.632,674,3.88,675,2.632,676,2.632,677,2.632,678,2.632,679,2.632,680,2.632]],["title/components/NotFoundComponent.html",[51,0.256,145,0.758]],["body/components/NotFoundComponent.html",[3,0.27,4,0.238,5,0.238,7,0.238,8,1.075,10,0.989,14,0.877,17,0.024,18,0.877,27,0.802,29,0.524,31,0.484,36,0.27,37,0.524,38,1.224,42,2.191,49,0.017,50,0.017,51,0.409,52,0.856,53,1.39,54,1.105,55,1.105,56,1.105,57,1.105,59,1.78,60,1.105,61,2.116,62,1.865,63,1.481,65,1.481,71,1.785,78,1.305,120,1.105,121,1.481,122,1.481,123,1.105,124,1.675,125,1.105,126,1.105,127,0.802,128,1.105,129,0.802,130,1.105,131,0.856,132,1.105,133,0.802,134,1.105,135,0.802,136,1.037,137,1.481,138,0.856,139,1.105,140,0.802,141,1.037,142,1.105,143,0.856,144,1.105,145,1.296,146,1.105,147,0.802,148,1.105,149,0.856,150,1.105,151,0.802,152,0.913,153,0.802,154,0.974,155,1.105,156,0.802,157,1.105,158,0.856,159,1.105,160,1.105,196,3.695,491,2.985,681,4.657,682,3.081,683,4.976,684,5.494,685,4.87,686,3.634,687,3.634,688,4.87]],["title/injectables/NotificationService.html",[30,0.98,424,2.31]],["body/injectables/NotificationService.html",[3,0.273,4,0.241,5,0.241,7,0.241,8,1.083,10,0.661,14,1.106,16,1.645,17,0.025,18,1.106,19,0.818,20,1.645,27,1.301,29,0.707,30,1.4,31,0.489,34,1.911,35,1.774,36,0.273,37,0.53,39,1.048,49,0.017,50,0.017,70,5.887,78,1.579,79,1.276,81,1.048,82,1.048,205,1.774,338,2.067,424,3.299,689,3.113,690,4.904,691,4.904,692,4.904,693,4.904,694,3.672,695,5.894,696,3.672,697,4.128,698,4.904,699,3.672,700,3.672,701,4.904,702,3.672,703,5.522,704,4.904,705,3.672,706,4.904,707,3.672,708,3.672,709,3.672,710,3.672,711,3.672]],["title/components/PhoneConfirmationComponent.html",[51,0.256,147,0.758]],["body/components/PhoneConfirmationComponent.html",[3,0.221,4,0.195,5,0.195,7,0.195,8,0.935,10,0.535,13,1.917,14,0.969,16,0.796,17,0.025,18,0.889,19,0.658,20,0.796,27,0.656,29,0.712,31,0.396,32,0.848,36,0.221,37,0.428,38,1.065,39,0.848,49,0.015,50,0.015,51,0.367,52,0.7,53,1.209,54,0.903,55,0.903,56,0.903,57,0.903,59,1.599,60,0.903,61,2.064,62,1.841,63,1.288,65,1.288,67,0.875,71,1.637,78,1.135,79,0.969,80,1.982,81,1.209,82,1.209,84,3.591,85,3.166,120,0.903,121,1.288,122,1.288,123,0.903,124,1.537,125,0.903,126,0.903,127,0.656,128,0.903,129,0.656,130,0.903,131,0.7,132,0.903,133,0.656,134,0.903,135,0.656,136,0.848,137,1.288,138,0.7,139,0.903,140,0.656,141,0.848,142,0.903,143,0.7,144,0.903,145,0.656,146,0.903,147,1.188,148,0.903,149,0.7,150,0.903,151,0.656,152,0.746,153,0.656,154,0.796,155,0.903,156,0.656,157,0.903,158,1.467,159,0.903,160,0.903,223,3.828,237,1.435,262,3.591,263,3.591,296,1.248,310,1.82,401,1.546,423,1.82,492,2.22,493,2.849,496,3.166,542,2.385,712,4.825,713,2.518,714,3.591,715,4.937,716,4.236,717,5.691,718,4.937,719,4.236,720,2.97,721,2.97,722,4.937,723,2.22,724,2.97,725,2.97,726,1.998,727,2.97,728,2.518,729,2.97,730,2.97,731,2.97,732,2.97]],["title/interfaces/PhoneVerificationDto.html",[331,1.044,374,2.105]],["body/interfaces/PhoneVerificationDto.html",[3,0.375,4,0.331,5,0.331,7,0.331,17,0.024,19,0.798,36,0.375,49,0.021,50,0.021,67,1.238,79,1.234,331,1.533,332,2.436,374,3.672,375,3.392,543,4.054,733,4.275,734,5.608]],["title/components/RegisterComponent.html",[51,0.256,149,0.809]],["body/components/RegisterComponent.html",[3,0.123,4,0.108,5,0.108,7,0.108,8,0.596,10,0.297,13,1.599,14,1.092,16,0.723,17,0.025,18,1.092,19,0.657,20,0.723,23,1.52,27,0.962,28,1.214,29,0.743,30,0.77,31,0.22,32,0.471,36,0.201,37,0.238,38,0.678,39,0.471,40,0.535,42,2.105,43,1.91,48,2.098,49,0.009,50,0.009,51,0.255,52,0.389,53,0.77,54,0.502,55,0.502,56,0.502,57,0.502,59,1.109,60,0.502,61,1.864,62,1.643,63,0.821,65,0.821,67,0.558,71,1.202,72,0.859,73,1.661,76,1.405,78,0.917,79,0.785,80,1.26,81,1.521,82,1.602,106,1.111,115,2.018,117,1.012,119,0.798,120,0.502,121,0.821,122,0.821,123,0.502,124,1.128,125,0.502,126,0.502,127,0.365,128,0.502,129,0.365,130,0.502,131,0.389,132,0.502,133,0.365,134,0.502,135,0.365,136,0.471,137,0.821,138,0.389,139,0.502,140,0.365,141,0.471,142,0.502,143,0.389,144,0.502,145,0.365,146,0.502,147,0.365,148,0.502,149,0.932,150,0.502,151,0.365,152,0.415,153,0.365,154,0.442,155,0.502,156,0.365,157,1.202,158,1.292,159,0.502,160,0.502,189,0.859,205,0.798,206,0.93,243,1.012,246,1.661,266,2.519,269,1.654,271,1.012,272,1.654,273,1.012,296,0.694,340,1.838,372,1.405,373,1.111,396,1.234,397,1.4,440,2.568,442,1.4,453,1.4,461,2.288,495,2.018,503,2.422,507,3.025,515,1.012,516,1.111,518,1.111,520,0.93,521,1.654,523,2.422,537,1.4,538,2.288,539,1.654,541,2.018,542,0.93,543,1.654,549,2.659,551,1.815,552,1.111,553,1.012,585,2.288,594,2.559,607,1.4,624,1.234,626,3.351,627,3.351,628,3.351,629,1.4,630,1.234,631,1.234,632,1.4,648,3.155,665,4.365,726,1.815,735,1.234,736,3.423,737,2.699,738,3.351,739,2.699,740,3.695,741,3.423,742,2.699,743,4.677,744,4.677,745,4.677,746,2.288,747,2.902,748,3.351,749,2.699,750,1.651,751,1.651,752,3.351,753,3.953,754,3.953,755,1.651,756,3.953,757,1.651,758,2.288,759,1.651,760,1.651,761,1.651,762,1.651,763,1.651,764,1.651,765,1.651,766,1.651,767,1.651,768,1.651,769,1.234,770,1.651,771,1.651,772,1.651,773,1.651,774,1.651,775,1.4,776,1.815,777,2.699,778,2.699,779,2.699,780,2.699,781,1.815,782,1.651,783,1.651,784,1.815,785,3.423,786,1.815,787,2.659,788,1.815,789,2.699,790,2.671,791,1.4,792,1.651,793,3.953,794,1.651,795,1.651,796,2.699,797,1.651,798,1.651,799,1.651,800,1.651,801,1.651,802,1.651,803,1.651,804,2.699,805,1.651,806,1.651,807,1.651,808,1.651,809,1.651,810,1.651,811,1.651,812,1.4,813,2.699,814,1.4,815,1.651,816,3.423,817,1.4,818,1.4,819,1.651,820,1.651,821,1.651,822,1.651,823,1.651,824,1.651,825,2.699,826,2.699,827,2.699,828,2.288,829,3.953,830,2.699,831,2.699,832,1.651,833,1.651,834,2.699,835,1.651,836,1.651,837,1.651,838,1.651,839,1.651]],["title/interfaces/RegistrationResponseDto.html",[331,1.044,335,2.105]],["body/interfaces/RegistrationResponseDto.html",[3,0.365,4,0.322,5,0.322,7,0.322,17,0.024,19,0.785,28,2.949,36,0.438,49,0.021,50,0.021,67,1.217,79,1.207,291,2.551,300,2.76,317,3.004,331,1.792,332,2.368,333,3.664,334,4.156,335,3.611,336,5.556,337,4.408]],["title/components/ResetPasswordComponent.html",[51,0.256,151,0.758]],["body/components/ResetPasswordComponent.html",[3,0.17,4,0.15,5,0.15,7,0.15,8,0.771,10,0.412,13,1.744,14,1.087,16,0.936,17,0.025,18,0.854,19,0.788,20,0.936,27,0.771,28,2.134,29,0.737,31,0.305,32,0.653,36,0.17,37,0.33,38,0.878,39,0.653,40,1.815,43,2.468,49,0.012,50,0.012,51,0.315,52,0.539,53,0.997,54,0.696,55,0.696,56,0.696,57,0.696,59,1.373,60,0.696,61,1.985,62,1.749,63,1.062,65,1.062,67,0.722,69,2.907,71,1.442,74,2.52,78,1.135,79,1.066,80,2.419,81,1.599,82,1.599,98,1.711,120,0.696,121,1.062,122,1.062,123,0.696,124,1.354,125,0.696,126,0.696,127,0.505,128,0.696,129,0.505,130,0.696,131,0.539,132,0.696,133,0.505,134,0.696,135,0.505,136,0.653,137,1.062,138,0.539,139,0.696,140,0.505,141,0.653,142,0.696,143,0.539,144,0.696,145,0.505,146,0.696,147,0.505,148,0.696,149,0.539,150,0.696,151,1.047,152,1.518,153,0.505,154,0.613,155,0.696,156,0.505,157,0.696,158,0.539,159,0.696,160,0.696,189,1.191,221,4.13,237,1.106,246,1.468,266,2.487,296,0.962,310,1.403,340,2.527,358,2.206,412,2.612,423,1.403,499,1.539,500,3.593,501,2.962,503,2.597,507,3.539,508,2.962,514,3.168,515,1.403,519,1.711,523,2.141,531,1.711,542,1.289,723,1.711,726,2.35,738,3.593,740,3.593,746,2.962,758,2.962,790,2.141,812,1.94,814,1.94,817,1.94,818,1.94,840,5.206,841,4.238,842,3.593,843,2.289,844,2.289,845,2.289,846,2.289,847,2.289,848,2.289,849,2.289,850,2.289,851,3.593,852,2.289,853,3.494,854,2.289,855,2.289]],["title/components/ServerErrorComponent.html",[51,0.256,153,0.758]],["body/components/ServerErrorComponent.html",[3,0.217,4,0.191,5,0.191,7,0.191,8,0.923,10,0.525,13,1.905,14,0.88,16,0.781,17,0.024,18,0.88,19,0.557,20,0.781,26,2.812,27,0.644,29,0.603,31,0.388,32,0.832,36,0.217,37,0.421,38,1.051,39,0.832,49,0.015,50,0.015,51,0.364,52,0.687,53,1.193,54,0.887,55,0.887,56,0.887,57,0.887,59,1.583,60,0.887,61,2.059,62,1.814,63,1.271,65,1.271,67,0.863,71,1.623,78,1.12,120,0.887,121,1.271,122,1.271,123,0.887,124,1.524,125,0.887,126,0.887,127,0.644,128,0.887,129,0.644,130,0.887,131,0.687,132,0.887,133,0.644,134,0.887,135,0.644,136,0.832,137,1.271,138,0.687,139,0.887,140,0.644,141,0.832,142,0.887,143,0.687,144,0.887,145,0.644,146,0.887,147,0.644,148,0.887,149,0.687,150,0.887,151,0.644,152,0.733,153,1.178,154,1.715,155,0.887,156,0.644,157,0.887,158,0.687,159,0.887,160,0.887,199,3.591,246,1.225,264,3.544,313,3.544,321,3.544,423,1.787,430,3.544,440,3.437,472,2.812,491,2.562,526,3.544,545,4.526,546,3.544,856,4.526,857,2.472,858,4.887,859,4.18,860,4.18,861,2.916,862,2.916,863,2.916,864,2.916,865,2.916,866,4.18,867,4.18,868,4.18,869,4.18,870,4.18,871,3.125,872,4.18,873,4.18,874,4.18,875,4.18,876,3.544,877,4.18,878,4.18,879,4.18,880,4.18,881,4.18,882,4.18,883,4.18,884,4.18,885,4.18,886,4.18,887,4.18,888,4.18,889,4.18,890,4.18,891,4.18,892,4.18,893,4.18]],["title/modules/SharedModule.html",[161,2.567,171,2.105]],["body/modules/SharedModule.html",[3,0.238,4,0.21,5,0.21,17,0.025,29,1.012,31,0.427,36,0.332,37,0.462,42,1.441,49,0.016,50,0.016,163,1.803,171,2.738,176,2.715,178,3.846,180,3.34,182,2.394,205,1.547,245,2.715,254,2.715,293,1.667,305,2.154,378,2.154,379,3.005,631,2.394,697,3.34,871,3.34,894,2.394,895,4.468,896,2.715,897,3.203,898,5.145,899,3.203,900,5.145,901,4.468,902,5.145,903,3.203,904,5.145,905,3.203,906,5.145,907,3.203,908,5.145,909,3.203,910,5.145,911,3.203,912,5.145,913,3.203,914,3.203,915,5.145,916,3.203,917,5.145,918,3.203,919,5.145,920,3.203,921,5.145,922,3.203,923,5.145,924,3.203,925,5.145,926,3.203,927,3.203,928,5.145,929,3.203,930,5.145,931,3.203,932,5.145,933,3.203,934,5.145,935,3.203,936,5.145,937,3.203,938,3.203,939,5.145,940,2.715,941,2.715,942,3.203,943,4.468,944,3.203,945,2.715,946,3.846,947,3.203,948,3.203,949,3.203,950,3.203,951,3.203,952,3.203,953,3.203,954,3.203,955,3.203,956,3.203]],["title/injectables/UrlService.html",[30,0.98,74,1.545]],["body/injectables/UrlService.html",[3,0.306,4,0.27,5,0.27,7,0.27,8,1.166,10,1.05,13,1.331,14,1.109,16,1.101,17,0.025,18,0.74,19,0.777,20,1.101,27,0.907,29,0.842,30,1.507,31,0.548,32,1.173,34,2.139,35,1.986,36,0.306,37,0.593,40,1.89,49,0.018,50,0.018,67,1.091,69,4.062,74,2.376,78,1.101,79,1.05,80,2.148,81,1.507,82,1.507,87,3.485,88,3.485,338,2.314,340,2.562,358,2.748,377,2.765,431,4.946,957,3.485,958,5.281,959,5.281,960,5.281,961,4.11,962,5.834,963,5.281,964,4.11,965,5.281,966,4.11]],["title/interfaces/UserForAuthenticationDto.html",[331,1.044,370,1.787]],["body/interfaces/UserForAuthenticationDto.html",[3,0.343,4,0.302,5,0.302,7,0.302,17,0.024,19,0.756,36,0.457,49,0.02,50,0.02,67,1.172,79,1.284,80,1.696,158,1.581,266,2.768,331,1.869,332,2.225,370,2.952,371,2.397,372,2.397,648,2.823,776,3.098,781,3.098,784,3.098,786,3.098,787,3.098,788,3.098,790,2.823,967,3.098]],["title/interfaces/UserForRegistrationDto.html",[331,1.044,372,1.787]],["body/interfaces/UserForRegistrationDto.html",[3,0.296,4,0.261,5,0.261,7,0.261,17,0.025,19,0.906,36,0.427,49,0.018,50,0.018,67,1.068,79,1.296,80,2.115,158,1.523,266,2.649,331,1.747,332,1.923,370,2.071,371,2.071,372,2.691,648,3.727,776,4.091,781,4.091,784,4.091,786,4.091,787,4.091,788,4.091,790,3.727,967,2.677]],["title/interfaces/UserForgotPasswordDto.html",[331,1.044,371,1.787]],["body/interfaces/UserForgotPasswordDto.html",[3,0.349,4,0.308,5,0.308,7,0.308,17,0.024,19,0.625,36,0.461,49,0.02,50,0.02,67,1.185,79,1.28,80,1.728,158,1.588,266,2.411,331,1.885,332,2.267,370,2.442,371,2.986,372,2.442,648,2.876,776,3.156,781,3.156,784,3.156,786,3.156,787,3.156,788,3.156,790,2.876,967,3.156]],["title/components/VerifyPhoneComponent.html",[51,0.256,156,0.758]],["body/components/VerifyPhoneComponent.html",[3,0.156,4,0.138,5,0.138,7,0.138,8,0.722,10,0.378,13,1.759,14,1.011,16,0.563,17,0.025,18,0.723,19,0.693,20,0.563,23,1.182,27,0.722,29,0.81,31,0.28,32,0.599,36,0.243,37,0.303,38,0.822,39,0.599,40,1.819,49,0.011,50,0.011,51,0.299,52,0.495,53,0.933,54,0.638,55,0.638,56,0.638,57,0.638,59,1.301,60,0.638,61,1.955,62,1.723,63,0.994,65,0.994,67,0.675,69,2.777,71,1.378,72,1.093,73,1.904,74,2.444,76,1.701,78,1.076,79,0.978,80,1.808,81,1.294,82,1.294,98,1.57,117,1.287,119,1.014,120,0.638,121,0.994,122,0.994,123,0.638,124,1.294,125,0.638,126,0.638,127,0.464,128,0.638,129,0.464,130,0.638,131,0.495,132,0.638,133,0.464,134,0.638,135,0.464,136,0.599,137,0.994,138,0.495,139,0.638,140,0.464,141,0.599,142,0.638,143,0.495,144,0.638,145,0.464,146,0.638,147,0.464,148,0.638,149,0.495,150,0.638,151,0.464,152,0.528,153,0.464,154,0.563,155,0.638,156,1,157,1.493,158,1.39,159,0.638,160,0.638,189,1.093,205,1.014,206,1.182,209,3.536,237,1.014,238,2.199,240,1.412,242,2.199,246,0.882,269,1.287,271,1.287,273,2.004,275,1.287,296,0.882,310,1.287,340,2.044,374,2.777,375,1.412,376,4.409,401,1.093,415,3.001,440,1.701,464,1.78,492,2.444,507,2.461,515,1.287,516,1.412,518,1.412,519,1.57,520,1.182,521,2.004,523,1.287,531,1.57,539,1.287,541,2.444,542,2.929,543,3.328,544,2.772,548,2.444,549,2.199,551,2.701,552,2.701,553,2.004,555,1.78,562,1.57,577,4.491,594,3.001,624,1.57,630,2.444,723,1.57,728,2.772,734,1.78,747,3.404,748,3.842,775,1.78,842,3.404,851,3.842,968,4.313,969,1.57,970,4.015,971,3.27,972,4.015,973,4.015,974,3.27,975,2.1,976,2.1,977,2.1,978,2.1,979,2.1,980,2.1,981,2.444,982,2.444,983,2.1,984,2.1,985,2.1,986,2.1,987,4.015,988,2.1,989,2.1,990,2.1,991,2.1,992,2.1,993,2.1,994,3.27,995,3.27,996,3.27,997,3.27,998,2.1,999,2.1,1000,2.1,1001,2.1,1002,2.1,1003,2.1]],["title/coverage.html",[1004,3.975]],["body/coverage.html",[0,2.518,1,1.687,5,0.165,6,2.126,12,1.687,17,0.025,19,0.334,30,1.649,49,0.013,50,0.013,51,0.486,52,0.591,58,2.126,73,1.054,74,1.128,105,2.126,119,3.451,127,0.554,129,0.554,131,0.591,133,0.554,135,0.554,138,0.882,140,0.554,143,0.591,145,0.554,147,0.554,149,0.882,151,0.554,153,0.554,156,0.554,172,1.537,196,1.687,199,1.687,209,2.294,212,2.294,216,1.687,217,1.687,221,1.687,223,1.687,233,1.687,236,1.687,237,1.211,238,1.687,239,1.874,240,1.687,241,1.874,242,1.687,243,1.537,244,1.687,255,2.126,279,2.126,285,1.412,293,1.305,294,1.537,295,1.874,297,1.537,298,1.687,300,1.412,331,1.757,333,2.798,335,1.537,339,2.126,358,1.305,370,1.305,371,1.305,372,1.305,374,1.537,375,1.687,391,2.126,395,1.874,398,2.518,406,2.126,413,2.126,414,2.126,419,2.126,421,2.126,424,1.687,466,2.126,479,2.126,498,2.798,499,3.013,517,1.874,520,2.797,564,2.126,587,3.349,606,1.874,634,2.126,635,2.126,641,2.126,681,2.126,682,2.126,689,2.126,712,2.126,713,2.126,733,2.126,735,3.349,769,1.874,840,2.126,856,2.126,857,2.126,894,1.874,945,2.126,946,1.874,957,2.126,967,3.013,968,2.798,969,2.798,981,1.874,982,1.874,1004,2.126,1005,2.508,1006,2.508,1007,2.508,1008,3.744,1009,5.649,1010,6.869,1011,6.887,1012,4.48,1013,6.353,1014,4.48,1015,4.968,1016,3.744,1017,2.508,1018,3.744,1019,2.508,1020,2.508,1021,2.508,1022,2.126,1023,2.126,1024,3.174,1025,2.126,1026,2.126,1027,2.508,1028,2.508]],["title/dependencies.html",[164,2.779,1029,2.431]],["body/dependencies.html",[17,0.025,31,0.623,32,1.336,49,0.02,50,0.02,164,3.148,182,4.282,183,4.282,189,2.435,205,2.767,206,2.635,377,3.148,378,3.148,379,3.148,697,3.498,896,3.968,940,3.968,941,3.968,1030,4.68,1031,3.968,1032,4.68,1033,5.728,1034,6.82,1035,4.68,1036,5.728,1037,4.68,1038,4.68,1039,4.68,1040,4.68,1041,4.68,1042,4.68,1043,4.68,1044,4.68,1045,4.68,1046,4.68]],["title/miscellaneous/enumerations.html",[1047,1.615,1048,3.502]],["body/miscellaneous/enumerations.html",[7,0.341,17,0.024,49,0.021,50,0.021,82,1.906,396,4.557,495,4.557,1047,2.923,1048,4.402,1049,5.192,1050,5.192,1051,6.096,1052,6.096,1053,6.096]],["title/miscellaneous/functions.html",[1047,1.615,1054,3.502]],["body/miscellaneous/functions.html",[7,0.357,17,0.022,49,0.022,50,0.022,894,4.061,946,4.929,1047,3.059,1054,4.606,1055,5.433]],["title/index.html",[7,0.188,524,2.431,1056,2.868]],["body/index.html",[4,0.259,17,0.018,18,0.71,38,0.991,49,0.018,50,0.018,51,0.426,62,1.377,85,2.948,154,1.532,174,2.948,315,3.344,337,3.458,358,2.052,440,2.052,472,4.336,491,2.417,543,2.417,668,3.344,683,4.359,752,3.344,791,3.344,828,4.849,871,4.531,876,3.344,1029,3.344,1031,3.344,1057,3.944,1058,5.72,1059,5.141,1060,5.141,1061,3.944,1062,5.72,1063,5.141,1064,3.944,1065,3.944,1066,3.944,1067,3.944,1068,3.944,1069,3.944,1070,6.061,1071,3.944,1072,3.944,1073,3.944,1074,6.286,1075,6.565,1076,3.944,1077,3.944,1078,3.944,1079,3.944,1080,3.944,1081,3.944,1082,3.944,1083,5.72,1084,3.944,1085,6.061,1086,3.944,1087,3.944,1088,3.944,1089,3.944,1090,5.141,1091,5.141,1092,6.061,1093,3.944,1094,5.141,1095,5.141,1096,3.944,1097,3.944,1098,3.944,1099,3.944,1100,5.141,1101,3.944,1102,3.944,1103,3.944,1104,3.944,1105,3.944,1106,5.72,1107,3.944,1108,3.944,1109,2.948,1110,3.944]],["title/modules.html",[163,2.64]],["body/modules.html",[17,0.022,49,0.022,50,0.022,162,3.588,163,3.003,170,3.269,171,3.269,183,3.987,1111,5.334,1112,5.334,1113,6.545,1114,6.193,1115,6.193]],["title/overview.html",[1109,3.504]],["body/overview.html",[2,2.846,17,0.025,49,0.018,50,0.018,52,1.534,53,1.087,74,2.53,127,1.241,129,1.241,131,1.325,133,1.241,135,1.241,138,1.325,140,1.241,143,1.325,145,1.241,147,1.241,149,1.325,151,1.241,152,0.957,153,1.241,156,1.241,162,4.854,163,2.144,164,3.379,165,3.228,166,3.228,167,3.228,168,3.228,169,3.228,170,3.446,171,3.446,172,3.446,173,4.259,174,2.846,232,2.561,272,2.333,332,1.839,338,2.144,726,2.561,1109,2.846,1116,3.807,1117,5.024,1118,3.807]],["title/routes.html",[232,3.153]],["body/routes.html",[17,0.022,49,0.022,50,0.022,232,3.735]],["title/miscellaneous/variables.html",[1047,1.615,1119,3.502]],["body/miscellaneous/variables.html",[7,0.195,17,0.025,19,0.93,43,2.049,48,1.823,49,0.015,50,0.015,79,1.228,81,1.968,82,1.968,136,0.849,141,0.849,152,0.748,154,0.797,158,0.999,209,1.823,212,1.823,236,2.853,237,2.049,238,2.853,239,3.17,240,2.853,241,3.17,242,2.853,243,2.599,244,2.853,250,2.224,256,2.522,266,1.782,291,1.548,293,2.207,294,2.599,295,3.17,317,1.823,395,3.17,398,3.624,415,2.224,440,1.548,480,2.522,498,2.224,499,2.853,517,3.17,520,3.507,521,3.301,567,3.595,577,2.224,587,2.224,606,3.17,636,2.522,714,2.522,735,2.224,769,3.17,968,2.224,969,3.17,981,3.17,982,3.17,1009,2.522,1022,2.522,1023,2.522,1024,2.522,1025,3.595,1026,3.595,1047,1.675,1119,2.522,1120,6.821,1121,4.241,1122,2.975,1123,2.975,1124,2.975,1125,2.975,1126,2.975,1127,2.975,1128,2.975,1129,2.975,1130,2.975,1131,2.975,1132,2.975,1133,2.975,1134,2.975,1135,2.975,1136,2.975,1137,2.975,1138,4.241,1139,2.975]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"injectables/UrlService.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["0.11.4",{"_index":1046,"title":{},"body":{"dependencies.html":{}}}],["0.9em",{"_index":671,"title":{},"body":{"components/NavComponent.html":{}}}],["0/1",{"_index":1011,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1018,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1012,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1016,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1021,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1013,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1014,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1015,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1008,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1017,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1019,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{}}}],["100",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["10px",{"_index":562,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["11",{"_index":1118,"title":{},"body":{"overview.html":{}}}],["12.0.0",{"_index":1036,"title":{},"body":{"dependencies.html":{}}}],["12.2.3",{"_index":1033,"title":{},"body":{"dependencies.html":{}}}],["13.0.2",{"_index":1034,"title":{},"body":{"dependencies.html":{}}}],["13.0.3",{"_index":1031,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["14.1.0",{"_index":1041,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1116,"title":{},"body":{"overview.html":{}}}],["18px",{"_index":1003,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["2",{"_index":272,"title":{},"body":{"components/AuthComponent.html":{},"components/FooterComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":1044,"title":{},"body":{"dependencies.html":{}}}],["20px",{"_index":550,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["240px",{"_index":563,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["250px",{"_index":278,"title":{},"body":{"components/AuthComponent.html":{}}}],["3",{"_index":726,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"overview.html":{}}}],["3/3",{"_index":1020,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":277,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["33",{"_index":837,"title":{},"body":{"components/RegisterComponent.html":{}}}],["400",{"_index":444,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["401",{"_index":451,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["403",{"_index":453,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/RegisterComponent.html":{}}}],["404",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"miscellaneous/variables.html":{}}}],["406",{"_index":455,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["409",{"_index":456,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["499px",{"_index":672,"title":{},"body":{"components/NavComponent.html":{}}}],["5.0.2",{"_index":1040,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":839,"title":{},"body":{"components/RegisterComponent.html":{}}}],["500",{"_index":457,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["500px",{"_index":270,"title":{},"body":{"components/AuthComponent.html":{},"components/NavComponent.html":{}}}],["6",{"_index":728,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["6.6.0",{"_index":1042,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1117,"title":{},"body":{"overview.html":{}}}],["80",{"_index":998,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["accept",{"_index":568,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["access",{"_index":496,"title":{},"body":{"components/ForbiddenComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/PhoneConfirmationComponent.html":{}}}],["access_token",{"_index":293,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accesstoken",{"_index":291,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/RegistrationResponseDto.html":{},"miscellaneous/variables.html":{}}}],["account",{"_index":548,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["activatedroute",{"_index":484,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["activatedroutesnapshot",{"_index":22,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["actual_component",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["add",{"_index":1102,"title":{},"body":{"index.html":{}}}],["address",{"_index":829,"title":{},"body":{"components/RegisterComponent.html":{}}}],["address1",{"_index":784,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{}}}],["address2",{"_index":786,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{}}}],["adminguard",{"_index":1,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["administrator",{"_index":1052,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["align",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["align:center",{"_index":630,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["alloweddomains",{"_index":954,"title":{},"body":{"modules/SharedModule.html":{}}}],["allowing",{"_index":581,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["allows",{"_index":527,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["already",{"_index":827,"title":{},"body":{"components/RegisterComponent.html":{}}}],["angular",{"_index":871,"title":{},"body":{"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"index.html":{}}}],["angular/animations",{"_index":1030,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1032,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":896,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["angular/compiler",{"_index":1035,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler/src/output/output_ast",{"_index":513,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":940,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1038,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":901,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/card",{"_index":905,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/checkbox",{"_index":909,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/core",{"_index":924,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/datepicker",{"_index":907,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/form",{"_index":911,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/grid",{"_index":913,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/icon",{"_index":916,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/input",{"_index":918,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/list",{"_index":920,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/menu",{"_index":922,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/progress",{"_index":926,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/select",{"_index":929,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/sidenav",{"_index":931,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tabs",{"_index":933,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/toolbar",{"_index":935,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tooltip",{"_index":937,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/platform",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":32,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{},"dependencies.html":{}}}],["api/accounts/forgotpassword",{"_index":1129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/accounts/login",{"_index":1130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/accounts/phoneconfirmation",{"_index":1128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/accounts/phoneverification",{"_index":1132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/accounts/registration",{"_index":1131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/tokens/refresh",{"_index":1133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_accounts_confirm",{"_index":982,"title":{},"body":{"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_accounts_forgot_password",{"_index":517,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_accounts_login",{"_index":606,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_accounts_registration",{"_index":769,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_accounts_verification",{"_index":981,"title":{},"body":{"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_tokens_refresh",{"_index":295,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":415,"title":{},"body":{"injectables/EnvironmentUrlService.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["app.component",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["app.constants",{"_index":245,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["app.please",{"_index":732,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["appcomponent",{"_index":52,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":162,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":170,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":1086,"title":{},"body":{"index.html":{}}}],["async",{"_index":280,"title":{},"body":{"guards/AuthGuard.html":{}}}],["auth",{"_index":256,"title":{},"body":{"components/AuthComponent.html":{},"miscellaneous/variables.html":{}}}],["auth'},{'name",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["auth.component.html",{"_index":258,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":257,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth0/angular",{"_index":378,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["authchanged",{"_index":341,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authchangesubject",{"_index":342,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authcomponent",{"_index":127,"title":{"components/AuthComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authentication",{"_index":579,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["authentication/authentication.service",{"_index":302,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavComponent.html":{}}}],["authenticationservice",{"_index":73,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["authguard",{"_index":233,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authguard,adminguard",{"_index":248,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authorizationservice",{"_index":12,"title":{"injectables/AuthorizationService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["authresponsedto",{"_index":300,"title":{"interfaces/AuthResponseDto.html":{}},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/RegistrationResponseDto.html":{},"coverage.html":{}}}],["authservice",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["authservice:authenticationservice",{"_index":658,"title":{},"body":{"components/NavComponent.html":{}}}],["auto",{"_index":273,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["automatically",{"_index":1079,"title":{},"body":{"index.html":{}}}],["available",{"_index":1115,"title":{},"body":{"modules.html":{}}}],["await",{"_index":307,"title":{},"body":{"guards/AuthGuard.html":{}}}],["back",{"_index":575,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["backend",{"_index":570,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["bar",{"_index":927,"title":{},"body":{"modules/SharedModule.html":{}}}],["basicauthenticationservice",{"_index":650,"title":{},"body":{"components/NavComponent.html":{}}}],["baskerville",{"_index":677,"title":{},"body":{"components/NavComponent.html":{}}}],["before",{"_index":1067,"title":{},"body":{"index.html":{}}}],["behaviorsubject",{"_index":962,"title":{},"body":{"injectables/UrlService.html":{}}}],["behaviorsubject(null",{"_index":963,"title":{},"body":{"injectables/UrlService.html":{}}}],["beta.34",{"_index":1037,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":474,"title":{},"body":{"components/FooterComponent.html":{},"components/NavComponent.html":{}}}],["blame",{"_index":873,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["block",{"_index":632,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["body",{"_index":381,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["boolean",{"_index":28,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{}}}],["bootstrap",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["bottom",{"_index":950,"title":{},"body":{"modules/SharedModule.html":{}}}],["bottom:10px",{"_index":560,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["break",{"_index":450,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["browse",{"_index":1113,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":899,"title":{},"body":{"modules/SharedModule.html":{}}}],["browseranimationsmodule",{"_index":898,"title":{},"body":{"modules/SharedModule.html":{}}}],["browsermodule",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1085,"title":{},"body":{"index.html":{}}}],["button",{"_index":833,"title":{},"body":{"components/RegisterComponent.html":{}}}],["canactivate",{"_index":9,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":21,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["capabilities",{"_index":1104,"title":{},"body":{"index.html":{}}}],["card",{"_index":552,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["case",{"_index":443,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catch(ex",{"_index":330,"title":{},"body":{"guards/AuthGuard.html":{}}}],["catcherror",{"_index":437,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror(error",{"_index":439,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["caught",{"_index":1066,"title":{},"body":{"index.html":{}}}],["cdk",{"_index":938,"title":{},"body":{"modules/SharedModule.html":{}}}],["center",{"_index":554,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["change",{"_index":668,"title":{},"body":{"components/NavComponent.html":{},"index.html":{}}}],["changed",{"_index":267,"title":{},"body":{"components/AuthComponent.html":{}}}],["characters",{"_index":831,"title":{},"body":{"components/RegisterComponent.html":{}}}],["check",{"_index":791,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["choice",{"_index":1099,"title":{},"body":{"index.html":{}}}],["chrome",{"_index":875,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["church's",{"_index":730,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["church\\'s",{"_index":731,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["city",{"_index":787,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{}}}],["class",{"_index":37,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["cli",{"_index":1070,"title":{},"body":{"index.html":{}}}],["client",{"_index":1059,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":543,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["codelength",{"_index":972,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["color",{"_index":678,"title":{},"body":{"components/NavComponent.html":{}}}],["column",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["command",{"_index":1100,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":895,"title":{},"body":{"modules/SharedModule.html":{}}}],["compare",{"_index":815,"title":{},"body":{"components/RegisterComponent.html":{}}}],["complete",{"_index":995,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["component",{"_index":51,"title":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["components",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"overview.html":{}}}],["config",{"_index":953,"title":{},"body":{"modules/SharedModule.html":{}}}],["confirm",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["confirmation",{"_index":714,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"miscellaneous/variables.html":{}}}],["confirmation'},{'name",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["confirmation.component",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["confirmation.component.html",{"_index":716,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["confirmation.component.scss",{"_index":715,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["confirmation.component.ts",{"_index":713,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"coverage.html":{}}}],["confirmation.component.ts:11",{"_index":721,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["confirmation.component.ts:12",{"_index":719,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["confirmation.component.ts:16",{"_index":720,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["confirmation/phone",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PhoneConfirmationComponent.html":{},"coverage.html":{}}}],["confirmpassword",{"_index":790,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{}}}],["congratulations",{"_index":261,"title":{},"body":{"components/AuthComponent.html":{}}}],["console.log(error",{"_index":464,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/VerifyPhoneComponent.html":{}}}],["console.log(previousurl",{"_index":533,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["console.log(this.previousurl",{"_index":854,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["console.log(this.validationerrors",{"_index":625,"title":{},"body":{"components/LoginComponent.html":{}}}],["const",{"_index":246,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["constructor",{"_index":10,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["constructor(authorizationservice",{"_index":11,"title":{},"body":{"guards/AdminGuard.html":{}}}],["constructor(authservice",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["constructor(http",{"_index":352,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["constructor(private",{"_index":39,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["constructor(public",{"_index":649,"title":{},"body":{"components/NavComponent.html":{}}}],["constructor(router",{"_index":423,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{}}}],["constructor(toastr",{"_index":694,"title":{},"body":{"injectables/NotificationService.html":{}}}],["contact",{"_index":667,"title":{},"body":{"components/NavComponent.html":{}}}],["contain",{"_index":753,"title":{},"body":{"components/RegisterComponent.html":{}}}],["container",{"_index":268,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["content",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/NavComponent.html":{}}}],["context",{"_index":1025,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":813,"title":{},"body":{"components/RegisterComponent.html":{}}}],["controlname",{"_index":609,"title":{},"body":{"components/LoginComponent.html":{}}}],["core/authentication/authentication.service",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["core/footer/footer.component",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["core/guards",{"_index":1069,"title":{},"body":{"index.html":{}}}],["core/guards/admin.guard",{"_index":235,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/guards/auth.guard",{"_index":234,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/header/nav.component",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["core/interceptors/error.interceptor",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["core/interceptors/error.interceptor.ts",{"_index":1065,"title":{},"body":{"index.html":{}}}],["core/services/url.service",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["correct",{"_index":882,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["coverage",{"_index":1004,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createcompleteroute",{"_index":343,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["currenturl",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["dashboard",{"_index":407,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["dashboard.component.html",{"_index":409,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":408,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":129,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":539,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["declarations",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["decodedtoken",{"_index":399,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["decodedtoken[identity_roles",{"_index":403,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["decoration:none",{"_index":680,"title":{},"body":{"components/NavComponent.html":{}}}],["default",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":14,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["dependencies",{"_index":164,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":565,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["dev",{"_index":876,"title":{},"body":{"components/ServerErrorComponent.html":{},"index.html":{}}}],["development",{"_index":1073,"title":{},"body":{"index.html":{}}}],["different",{"_index":494,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["direction",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["directive",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["directives",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1084,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1089,"title":{},"body":{"index.html":{}}}],["disallowedroutes",{"_index":956,"title":{},"body":{"modules/SharedModule.html":{}}}],["disappear",{"_index":867,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["display",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{}}}],["display:block",{"_index":1000,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["dist",{"_index":1088,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1005,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["driver",{"_index":1053,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dynamic",{"_index":1039,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1097,"title":{},"body":{"index.html":{}}}],["element",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["email",{"_index":648,"title":{},"body":{"components/NavComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{}}}],["end",{"_index":472,"title":{},"body":{"components/FooterComponent.html":{},"components/NavComponent.html":{},"components/ServerErrorComponent.html":{},"index.html":{}}}],["enter",{"_index":541,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["enumerations",{"_index":1048,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["envaddress",{"_index":389,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["envaddress}/${route",{"_index":390,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["environment",{"_index":398,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":417,"title":{},"body":{"injectables/EnvironmentUrlService.html":{}}}],["environmenturlservice",{"_index":285,"title":{"injectables/EnvironmentUrlService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"coverage.html":{}}}],["envurl",{"_index":284,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["error",{"_index":440,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["error'},{'name",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["error.component",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["error.component.html",{"_index":859,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.component.scss",{"_index":858,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.component.ts",{"_index":857,"title":{},"body":{"components/ServerErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:10",{"_index":860,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.component.ts:17",{"_index":861,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.details",{"_index":893,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.error",{"_index":458,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error.message",{"_index":868,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.status",{"_index":442,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/RegisterComponent.html":{}}}],["error.statustext",{"_index":449,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error/server",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ServerErrorComponent.html":{},"coverage.html":{}}}],["errorinterceptor",{"_index":172,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["errorname",{"_index":612,"title":{},"body":{"components/LoginComponent.html":{}}}],["errors",{"_index":337,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/RegistrationResponseDto.html":{},"index.html":{}}}],["errors.join",{"_index":447,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errorsasstring",{"_index":446,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["event",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"injectables/UrlService.html":{}}}],["event.url",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["examine",{"_index":881,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["execute",{"_index":1094,"title":{},"body":{"index.html":{}}}],["expired",{"_index":586,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["export",{"_index":36,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"injectables/UrlService.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["exports",{"_index":254,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["false",{"_index":48,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":676,"title":{},"body":{"components/NavComponent.html":{}}}],["fb",{"_index":747,"title":{},"body":{"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["fb.group",{"_index":775,"title":{},"body":{"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["field",{"_index":631,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"injectables/UrlService.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["files",{"_index":1081,"title":{},"body":{"index.html":{}}}],["filter",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["first",{"_index":752,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["firstname",{"_index":776,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{}}}],["flex",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/NavComponent.html":{}}}],["flexlayoutmodule",{"_index":939,"title":{},"body":{"modules/SharedModule.html":{}}}],["following",{"_index":888,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["font",{"_index":556,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/NavComponent.html":{}}}],["footer",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["footer'},{'name",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["footer.component.html",{"_index":468,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":467,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":131,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forbidden",{"_index":480,"title":{},"body":{"components/ForbiddenComponent.html":{},"miscellaneous/variables.html":{}}}],["forbidden'},{'name",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["forbidden.component.html",{"_index":482,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["forbidden.component.scss",{"_index":481,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["forbiddencomponent",{"_index":133,"title":{"components/ForbiddenComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgot",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["forgotpassword",{"_index":344,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["forgotpasswordcomponent",{"_index":135,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgotpassworddto",{"_index":534,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotpassworddto.phone",{"_index":540,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotpasswordform",{"_index":502,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotpasswordform.phone",{"_index":535,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["form",{"_index":628,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formattedphone",{"_index":717,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["formbuilder",{"_index":748,"title":{},"body":{"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["formcontrol",{"_index":514,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["formgroup",{"_index":507,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["formgroup.get('confirmpassword')?.seterrors",{"_index":817,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["formgroup.get('confirmpassword')?.value",{"_index":814,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["formgroup.get('password')?.value",{"_index":812,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["formsmodule",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["formvalues",{"_index":797,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.address1.trim",{"_index":805,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.address2",{"_index":806,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.address2.trim",{"_index":807,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.city.trim",{"_index":808,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.confirmpassword",{"_index":799,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.email",{"_index":802,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.email.trim",{"_index":803,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.firstname.trim",{"_index":800,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.lastname.trim",{"_index":801,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.password",{"_index":798,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.phone",{"_index":804,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.zipcode.trim",{"_index":809,"title":{},"body":{"components/RegisterComponent.html":{}}}],["forth",{"_index":576,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["found",{"_index":683,"title":{},"body":{"components/NotFoundComponent.html":{},"index.html":{}}}],["found'},{'name",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["found.component",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.html",{"_index":685,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":684,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":682,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":687,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":686,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["front",{"_index":887,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["full",{"_index":252,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":945,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{}}}],["functions",{"_index":1054,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1105,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1083,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1071,"title":{},"body":{"index.html":{}}}],["getemailerror",{"_index":743,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getfirstnameerror",{"_index":744,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getlastnameerror",{"_index":745,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getting",{"_index":524,"title":{"index.html":{}},"body":{"components/ForgotPasswordComponent.html":{}}}],["go",{"_index":1108,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1114,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["guard",{"_index":0,"title":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"overview.html":{}}}],["half",{"_index":838,"title":{},"body":{"components/RegisterComponent.html":{}}}],["handling",{"_index":1062,"title":{},"body":{"index.html":{}}}],["haserror",{"_index":590,"title":{},"body":{"components/LoginComponent.html":{}}}],["header",{"_index":555,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["height",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["height:auto",{"_index":478,"title":{},"body":{"components/FooterComponent.html":{}}}],["help",{"_index":1106,"title":{},"body":{"index.html":{}}}],["hide",{"_index":503,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["hide=true",{"_index":770,"title":{},"body":{"components/RegisterComponent.html":{}}}],["hideconfirm",{"_index":738,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["hideconfirm=true",{"_index":771,"title":{},"body":{"components/RegisterComponent.html":{}}}],["history.state.data",{"_index":723,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["home",{"_index":688,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["html",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["http",{"_index":282,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["http://localhost:4200",{"_index":1078,"title":{},"body":{"index.html":{}}}],["http://schemas.microsoft.com/ws/2008/06/identity/claims/role",{"_index":1134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":283,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["httpclientmodule",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":432,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httphandler",{"_index":428,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpinterceptor",{"_index":433,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httprequest",{"_index":427,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["https://localhost:5001",{"_index":1139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconfig",{"_index":516,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["identifier",{"_index":1006,"title":{},"body":{"coverage.html":{}}}],["identity_roles",{"_index":395,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["if(!accesstoken",{"_index":319,"title":{},"body":{"guards/AuthGuard.html":{}}}],["img",{"_index":476,"title":{},"body":{"components/FooterComponent.html":{}}}],["implements",{"_index":38,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["import",{"_index":29,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["imports",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"injectables/UrlService.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["injectable",{"_index":30,"title":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"injectables/NotificationService.html":{},"injectables/UrlService.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"injectables/UrlService.html":{},"coverage.html":{}}}],["injectables",{"_index":338,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"injectables/NotificationService.html":{},"injectables/UrlService.html":{},"overview.html":{}}}],["inspet",{"_index":878,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["instanceof",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["intercept",{"_index":422,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["intercept(request",{"_index":426,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptor",{"_index":419,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":420,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interface",{"_index":331,"title":{"interfaces/AuthResponseDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{}},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{},"coverage.html":{}}}],["interfaces",{"_index":332,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{},"overview.html":{}}}],["internal",{"_index":866,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["investigation",{"_index":891,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["isauthenticated:boolean",{"_index":386,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isauthsuccessful",{"_index":334,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["isrefreshsuccess",{"_index":306,"title":{},"body":{"guards/AuthGuard.html":{}}}],["issuccessfulregistration",{"_index":336,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["issue",{"_index":264,"title":{},"body":{"components/AuthComponent.html":{},"components/ServerErrorComponent.html":{}}}],["isuniqueemail",{"_index":739,"title":{},"body":{"components/RegisterComponent.html":{}}}],["isuniqueemail=true",{"_index":773,"title":{},"body":{"components/RegisterComponent.html":{}}}],["isuseradmin",{"_index":392,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["isuserauthenticated",{"_index":345,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/NavComponent.html":{}}}],["isuserauthenticated:boolean",{"_index":647,"title":{},"body":{"components/NavComponent.html":{}}}],["items",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["jacob",{"_index":663,"title":{},"body":{"components/NavComponent.html":{}}}],["justify",{"_index":471,"title":{},"body":{"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/NavComponent.html":{}}}],["jwt",{"_index":379,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["jwthelper",{"_index":353,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["jwthelperservice",{"_index":354,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["jwtmodule",{"_index":944,"title":{},"body":{"modules/SharedModule.html":{}}}],["jwtmodule.forroot",{"_index":952,"title":{},"body":{"modules/SharedModule.html":{}}}],["jwttoken",{"_index":320,"title":{},"body":{"guards/AuthGuard.html":{}}}],["jwttoken).topromise",{"_index":323,"title":{},"body":{"guards/AuthGuard.html":{}}}],["jwttokendto",{"_index":297,"title":{"interfaces/JwtTokenDto.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/JwtTokenDto.html":{},"coverage.html":{}}}],["karma",{"_index":1096,"title":{},"body":{"index.html":{}}}],["large",{"_index":558,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["last",{"_index":756,"title":{},"body":{"components/RegisterComponent.html":{}}}],["lastname",{"_index":781,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{}}}],["layout",{"_index":941,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["leaving",{"_index":1068,"title":{},"body":{"index.html":{}}}],["legend",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["letter",{"_index":1001,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["letters",{"_index":754,"title":{},"body":{"components/RegisterComponent.html":{}}}],["list",{"_index":914,"title":{},"body":{"modules/SharedModule.html":{}}}],["literal",{"_index":1137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lived",{"_index":573,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["localhost:5001",{"_index":955,"title":{},"body":{"modules/SharedModule.html":{}}}],["localstorage.getitem(access_token",{"_index":305,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"modules/SharedModule.html":{}}}],["localstorage.getitem(refresh_token",{"_index":318,"title":{},"body":{"guards/AuthGuard.html":{}}}],["localstorage.removeitem(access_token",{"_index":383,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.removeitem(refresh_token",{"_index":384,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem(access_token",{"_index":328,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["localstorage.setitem(refresh_token",{"_index":329,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["log",{"_index":493,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PhoneConfirmationComponent.html":{}}}],["logic",{"_index":1063,"title":{},"body":{"index.html":{}}}],["login",{"_index":530,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["login.component.html",{"_index":589,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":588,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.password",{"_index":617,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.username",{"_index":616,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":138,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":591,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginformvalue",{"_index":614,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginuser",{"_index":346,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{}}}],["logo",{"_index":675,"title":{},"body":{"components/NavComponent.html":{}}}],["logout",{"_index":347,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/NavComponent.html":{}}}],["long",{"_index":582,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["mail",{"_index":826,"title":{},"body":{"components/RegisterComponent.html":{}}}],["main",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["make",{"_index":545,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ServerErrorComponent.html":{}}}],["manage",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["managetemplatescomponent",{"_index":140,"title":{"components/ManageTemplatesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["margin",{"_index":271,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["margin:5",{"_index":999,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["mask",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{},"dependencies.html":{}}}],["mat",{"_index":551,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["matbuttonmodule",{"_index":900,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbuttontogglemodule",{"_index":902,"title":{},"body":{"modules/SharedModule.html":{}}}],["matcardmodule",{"_index":904,"title":{},"body":{"modules/SharedModule.html":{}}}],["match",{"_index":793,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matcheckboxmodule",{"_index":908,"title":{},"body":{"modules/SharedModule.html":{}}}],["matching",{"_index":50,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"injectables/UrlService.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":906,"title":{},"body":{"modules/SharedModule.html":{}}}],["material",{"_index":897,"title":{},"body":{"modules/SharedModule.html":{}}}],["matformfieldmodule",{"_index":910,"title":{},"body":{"modules/SharedModule.html":{}}}],["matgridlistmodule",{"_index":912,"title":{},"body":{"modules/SharedModule.html":{}}}],["maticonmodule",{"_index":915,"title":{},"body":{"modules/SharedModule.html":{}}}],["matinputmodule",{"_index":917,"title":{},"body":{"modules/SharedModule.html":{}}}],["matlistmodule",{"_index":919,"title":{},"body":{"modules/SharedModule.html":{}}}],["matmenumodule",{"_index":921,"title":{},"body":{"modules/SharedModule.html":{}}}],["matnativedatemodule",{"_index":923,"title":{},"body":{"modules/SharedModule.html":{}}}],["matprogressbarmodule",{"_index":925,"title":{},"body":{"modules/SharedModule.html":{}}}],["matselectmodule",{"_index":928,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsidenavmodule",{"_index":930,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattabsmodule",{"_index":932,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattoolbarmodule",{"_index":934,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattooltipmodule",{"_index":936,"title":{},"body":{"modules/SharedModule.html":{}}}],["max",{"_index":275,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["media",{"_index":274,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{}}}],["menu",{"_index":669,"title":{},"body":{"components/NavComponent.html":{}}}],["message",{"_index":703,"title":{},"body":{"injectables/NotificationService.html":{}}}],["messages",{"_index":700,"title":{},"body":{"injectables/NotificationService.html":{}}}],["metadata",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["methods",{"_index":8,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["min",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["miscellaneous",{"_index":1047,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":161,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}},"body":{}}],["modules",{"_index":163,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/auth/pages/auth/auth.component",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/auth/pages/auth/login/login.component",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/auth/pages/auth/register/register.component",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/auth/pages/password/forgot",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/auth/pages/password/reset",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/auth/pages/phone",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/auth/pages/verify",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/church",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/dashboard/pages/dashboard/dashboard.component",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/errors/pages/forbidden/forbidden.component",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/errors/pages/not",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/errors/pages/server",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["more",{"_index":1107,"title":{},"body":{"index.html":{}}}],["multi",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":18,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["nav",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["nav'},{'name",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["nav.component.html",{"_index":643,"title":{},"body":{"components/NavComponent.html":{}}}],["nav.component.scss",{"_index":642,"title":{},"body":{"components/NavComponent.html":{}}}],["navbar",{"_index":670,"title":{},"body":{"components/NavComponent.html":{}}}],["navcomponent",{"_index":143,"title":{"components/NavComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":1077,"title":{},"body":{"index.html":{}}}],["navigatetologin",{"_index":483,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["navigation",{"_index":862,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["navigation?.extras?.state?.error",{"_index":865,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["navigationend",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"injectables/UrlService.html":{}}}],["navigationextras",{"_index":436,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["navigationurl",{"_index":987,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["need",{"_index":1101,"title":{},"body":{"index.html":{}}}],["network",{"_index":879,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["new",{"_index":358,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UrlService.html":{},"coverage.html":{},"index.html":{}}}],["newrefreshtoken",{"_index":326,"title":{},"body":{"guards/AuthGuard.html":{}}}],["newtoken",{"_index":324,"title":{},"body":{"guards/AuthGuard.html":{}}}],["next",{"_index":26,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/ServerErrorComponent.html":{}}}],["next.handle(request).pipe",{"_index":438,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":1075,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["ngoninit",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["ngx",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/VerifyPhoneComponent.html":{},"dependencies.html":{}}}],["ngxmaskmodule",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxmaskmodule.forroot",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["none",{"_index":674,"title":{},"body":{"components/NavComponent.html":{}}}],["nopasswordmatch",{"_index":818,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["not_found",{"_index":236,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["note",{"_index":869,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["notfoundcomponent",{"_index":145,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notifications",{"_index":942,"title":{},"body":{"modules/SharedModule.html":{}}}],["notificationservice",{"_index":424,"title":{"injectables/NotificationService.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/NotificationService.html":{},"coverage.html":{}}}],["null",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthorizationService.html":{},"components/ForgotPasswordComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["number",{"_index":542,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["object",{"_index":567,"title":{},"body":{"interfaces/JwtTokenDto.html":{},"miscellaneous/variables.html":{}}}],["object.values(error.error",{"_index":445,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["observable",{"_index":431,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/UrlService.html":{}}}],["ocurred",{"_index":825,"title":{},"body":{"components/RegisterComponent.html":{}}}],["one",{"_index":835,"title":{},"body":{"components/RegisterComponent.html":{}}}],["oninit",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["open",{"_index":874,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["optional",{"_index":20,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["options",{"_index":520,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1109,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owner",{"_index":547,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["package",{"_index":1029,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":475,"title":{},"body":{"components/FooterComponent.html":{},"components/NavComponent.html":{}}}],["page",{"_index":491,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/NotFoundComponent.html":{},"components/ServerErrorComponent.html":{},"index.html":{}}}],["parameters",{"_index":16,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["partial",{"_index":521,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["pass",{"_index":569,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["passed",{"_index":574,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["password",{"_index":266,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{},"miscellaneous/variables.html":{}}}],["password!=confirmpassword",{"_index":855,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password'},{'name",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["password.component",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["password.component.html",{"_index":501,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":500,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":499,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["password.component.ts:13",{"_index":848,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:14",{"_index":847,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:15",{"_index":849,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:16",{"_index":845,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":846,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:18",{"_index":850,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:19",{"_index":508,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:20",{"_index":509,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:21",{"_index":510,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:22",{"_index":505,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:24",{"_index":843,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:29",{"_index":506,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:45",{"_index":511,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:46",{"_index":844,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/forgot",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["password/reset",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwordform",{"_index":841,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordmatchvalidator",{"_index":746,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwordmatchvalidator(formgroup",{"_index":758,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwordminlength",{"_index":740,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwords",{"_index":816,"title":{},"body":{"components/RegisterComponent.html":{}}}],["path",{"_index":247,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["persisting",{"_index":583,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["phone",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["phone.component",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["phone.component.html",{"_index":971,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.scss",{"_index":970,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts",{"_index":969,"title":{},"body":{"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["phone.component.ts:18",{"_index":980,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:19",{"_index":977,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:20",{"_index":979,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:21",{"_index":978,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:22",{"_index":974,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:33",{"_index":975,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:43",{"_index":976,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone/verify",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["phoneconfirmationcomponent",{"_index":147,"title":{"components/PhoneConfirmationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["phonenumber",{"_index":734,"title":{},"body":{"interfaces/PhoneVerificationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["phoneverificationdto",{"_index":374,"title":{"interfaces/PhoneVerificationDto.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/PhoneVerificationDto.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["phoneverificationdto.phonenumber",{"_index":993,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["platform",{"_index":1098,"title":{},"body":{"index.html":{}}}],["please",{"_index":492,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["positionclass",{"_index":948,"title":{},"body":{"modules/SharedModule.html":{}}}],["postman",{"_index":884,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["pre",{"_index":529,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["previous",{"_index":525,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["previousurl",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["previousurl?.includes(routing_auth",{"_index":532,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["private",{"_index":40,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["probably",{"_index":872,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["production",{"_index":1138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1058,"title":{},"body":{"index.html":{}}}],["promise",{"_index":292,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properties",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["provide",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":34,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"injectables/NotificationService.html":{},"injectables/UrlService.html":{}}}],["providedin:'root",{"_index":607,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["providers",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":340,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["queryparams",{"_index":45,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/ForbiddenComponent.html":{}}}],["reactiveformsmodule",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["redirectto",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1110,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":316,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/JwtTokenDto.html":{}}}],["refresh_token",{"_index":294,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refreshauthentication",{"_index":348,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["refreshing",{"_index":313,"title":{},"body":{"guards/AuthGuard.html":{},"components/ServerErrorComponent.html":{}}}],["refreshtoken",{"_index":317,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/RegistrationResponseDto.html":{},"miscellaneous/variables.html":{}}}],["register",{"_index":665,"title":{},"body":{"components/NavComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["register.component.html",{"_index":737,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":736,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":149,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":263,"title":{},"body":{"components/AuthComponent.html":{},"components/PhoneConfirmationComponent.html":{}}}],["registerform",{"_index":741,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerformvalue",{"_index":796,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registeruser",{"_index":349,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registration",{"_index":994,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["registrationresponsedto",{"_index":335,"title":{"interfaces/RegistrationResponseDto.html":{}},"body":{"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/RegistrationResponseDto.html":{},"coverage.html":{}}}],["reload",{"_index":1080,"title":{},"body":{"index.html":{}}}],["renewed",{"_index":584,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["represents",{"_index":571,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["reproduce",{"_index":883,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["request",{"_index":430,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/ServerErrorComponent.html":{}}}],["requested",{"_index":497,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["require",{"_index":1026,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":549,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["reset",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordcomponent",{"_index":151,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetting",{"_index":265,"title":{},"body":{"components/AuthComponent.html":{}}}],["response",{"_index":321,"title":{},"body":{"guards/AuthGuard.html":{},"components/ServerErrorComponent.html":{}}}],["response.accesstoken",{"_index":325,"title":{},"body":{"guards/AuthGuard.html":{}}}],["response.refreshtoken",{"_index":327,"title":{},"body":{"guards/AuthGuard.html":{}}}],["responsedata",{"_index":842,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["result",{"_index":661,"title":{},"body":{"components/NavComponent.html":{}}}],["result.accesstoken",{"_index":620,"title":{},"body":{"components/LoginComponent.html":{}}}],["result.refreshtoken",{"_index":621,"title":{},"body":{"components/LoginComponent.html":{}}}],["results",{"_index":49,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"injectables/UrlService.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":42,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{}}}],["returned",{"_index":1064,"title":{},"body":{"index.html":{}}}],["returns",{"_index":27,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["returnurl",{"_index":46,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["right",{"_index":951,"title":{},"body":{"modules/SharedModule.html":{}}}],["rock",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/PhoneConfirmationComponent.html":{}}}],["rock's",{"_index":1061,"title":{},"body":{"index.html":{}}}],["role",{"_index":402,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/NavComponent.html":{}}}],["roles",{"_index":396,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/RegisterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["roles.administrator",{"_index":404,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["roles.superadmin",{"_index":405,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["root",{"_index":35,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"injectables/NotificationService.html":{},"injectables/UrlService.html":{}}}],["root'},{'name",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["route",{"_index":380,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["router",{"_index":13,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["routermodule",{"_index":231,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":24,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["routes",{"_index":232,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":230,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing_auth",{"_index":237,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing_confirm_phone",{"_index":238,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing_forbidden",{"_index":239,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing_forgot_password",{"_index":240,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing_manage_templates",{"_index":241,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing_reset_password",{"_index":242,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing_verify_phone",{"_index":243,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":1074,"title":{},"body":{"index.html":{}}}],["running",{"_index":1090,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":377,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/UrlService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["same",{"_index":886,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scaffolding",{"_index":1082,"title":{},"body":{"index.html":{}}}],["see",{"_index":885,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["seeing",{"_index":870,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["selector",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["sendauthstatechangenotification",{"_index":350,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sent",{"_index":544,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["serve",{"_index":1076,"title":{},"body":{"index.html":{}}}],["server",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["server_error",{"_index":244,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["servererrorcomponent",{"_index":153,"title":{"components/ServerErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["services/authorization.service",{"_index":33,"title":{},"body":{"guards/AdminGuard.html":{}}}],["services/environment",{"_index":303,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{}}}],["services/manage",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ManageTemplatesComponent.html":{},"coverage.html":{}}}],["services/notification.service",{"_index":435,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["set",{"_index":528,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["setpreviousurl",{"_index":958,"title":{},"body":{"injectables/UrlService.html":{}}}],["setpreviousurl(previousurl",{"_index":960,"title":{},"body":{"injectables/UrlService.html":{}}}],["shared/shared.module",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":171,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["short",{"_index":572,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["show",{"_index":673,"title":{},"body":{"components/NavComponent.html":{}}}],["showerror",{"_index":690,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showerror(messages",{"_index":698,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showinfo",{"_index":691,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showinfo(message",{"_index":701,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showsuccess",{"_index":692,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showsuccess(message",{"_index":704,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showwarning",{"_index":693,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showwarning(message",{"_index":706,"title":{},"body":{"injectables/NotificationService.html":{}}}],["shrink",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["side",{"_index":1060,"title":{},"body":{"index.html":{}}}],["size",{"_index":557,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/NavComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"injectables/UrlService.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["space",{"_index":473,"title":{},"body":{"components/FooterComponent.html":{},"components/NavComponent.html":{}}}],["spacing",{"_index":1002,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["spec\\.ts",{"_index":1136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.constants.ts",{"_index":1120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../forgot",{"_index":1125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../login.component.ts",{"_index":1126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../register.component.ts",{"_index":1127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.ts",{"_index":1049,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../shared.module.ts",{"_index":1055,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../test.ts",{"_index":1121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../verify",{"_index":1124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":229,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.constants",{"_index":296,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["src/app/app.constants.ts",{"_index":1009,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.module.ts",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/authentication/authentication.service",{"_index":518,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["src/app/core/authentication/authentication.service.ts",{"_index":339,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/core/authentication/authentication.service.ts:15",{"_index":355,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:21",{"_index":360,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:22",{"_index":357,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:24",{"_index":367,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:28",{"_index":369,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:32",{"_index":362,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:36",{"_index":366,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:40",{"_index":364,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:44",{"_index":365,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:50",{"_index":368,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:54",{"_index":363,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:60",{"_index":361,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/footer/footer.component.ts",{"_index":466,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/core/footer/footer.component.ts:12",{"_index":470,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/core/footer/footer.component.ts:8",{"_index":469,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/core/guards/admin.guard.ts",{"_index":6,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/admin.guard.ts:12",{"_index":25,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/admin.guard.ts:8",{"_index":15,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":279,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/auth.guard.ts:13",{"_index":286,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:20",{"_index":287,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:37",{"_index":290,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/header/nav.component.ts",{"_index":641,"title":{},"body":{"components/NavComponent.html":{},"coverage.html":{}}}],["src/app/core/header/nav.component.ts:11",{"_index":644,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/core/header/nav.component.ts:32",{"_index":645,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/core/header/nav.component.ts:39",{"_index":646,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/core/interceptors/error.interceptor.ts",{"_index":421,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/core/interceptors/error.interceptor.ts:15",{"_index":425,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/core/interceptors/error.interceptor.ts:20",{"_index":429,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/core/services/authorization.service.ts",{"_index":391,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["src/app/core/services/authorization.service.ts:11",{"_index":393,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/core/services/authorization.service.ts:17",{"_index":394,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/core/services/environment",{"_index":413,"title":{},"body":{"injectables/EnvironmentUrlService.html":{},"coverage.html":{}}}],["src/app/core/services/notification.service.ts",{"_index":689,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/core/services/notification.service.ts:11",{"_index":705,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:15",{"_index":699,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:20",{"_index":702,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:24",{"_index":707,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:7",{"_index":696,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/url.service",{"_index":519,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["src/app/core/services/url.service.ts",{"_index":957,"title":{},"body":{"injectables/UrlService.html":{},"coverage.html":{}}}],["src/app/core/services/url.service.ts:10",{"_index":959,"title":{},"body":{"injectables/UrlService.html":{}}}],["src/app/core/services/url.service.ts:14",{"_index":961,"title":{},"body":{"injectables/UrlService.html":{}}}],["src/app/core/services/url.service.ts:9",{"_index":964,"title":{},"body":{"injectables/UrlService.html":{}}}],["src/app/modules/auth/pages/auth/auth.component.ts",{"_index":255,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/modules/auth/pages/auth/auth.component.ts:12",{"_index":260,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/modules/auth/pages/auth/auth.component.ts:8",{"_index":259,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/modules/auth/pages/auth/login/login.component.ts",{"_index":587,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/auth/pages/auth/login/login.component.ts:20",{"_index":600,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/pages/auth/login/login.component.ts:21",{"_index":603,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/pages/auth/login/login.component.ts:22",{"_index":602,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/pages/auth/login/login.component.ts:23",{"_index":599,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/pages/auth/login/login.component.ts:24",{"_index":605,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/pages/auth/login/login.component.ts:25",{"_index":597,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/pages/auth/login/login.component.ts:26",{"_index":595,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/pages/auth/login/login.component.ts:32",{"_index":596,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/pages/auth/login/login.component.ts:40",{"_index":604,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/pages/auth/login/login.component.ts:43",{"_index":598,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/pages/auth/login/login.component.ts:47",{"_index":601,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/pages/auth/register/register.component.ts",{"_index":735,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/auth/pages/auth/register/register.component.ts:104",{"_index":755,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/auth/pages/auth/register/register.component.ts:21",{"_index":766,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/auth/pages/auth/register/register.component.ts:22",{"_index":768,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/auth/pages/auth/register/register.component.ts:23",{"_index":763,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/auth/pages/auth/register/register.component.ts:24",{"_index":760,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/auth/pages/auth/register/register.component.ts:25",{"_index":761,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/auth/pages/auth/register/register.component.ts:26",{"_index":767,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/auth/pages/auth/register/register.component.ts:27",{"_index":762,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/auth/pages/auth/register/register.component.ts:28",{"_index":764,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/auth/pages/auth/register/register.component.ts:29",{"_index":749,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/auth/pages/auth/register/register.component.ts:51",{"_index":757,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/auth/pages/auth/register/register.component.ts:54",{"_index":765,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/auth/pages/auth/register/register.component.ts:81",{"_index":759,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/auth/pages/auth/register/register.component.ts:90",{"_index":750,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/auth/pages/auth/register/register.component.ts:97",{"_index":751,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/auth/pages/password/forgot",{"_index":498,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/auth/pages/password/reset",{"_index":840,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/modules/auth/pages/phone",{"_index":712,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"coverage.html":{}}}],["src/app/modules/auth/pages/verify",{"_index":968,"title":{},"body":{"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/church",{"_index":634,"title":{},"body":{"components/ManageTemplatesComponent.html":{},"coverage.html":{}}}],["src/app/modules/dashboard/pages/dashboard/dashboard.component.ts",{"_index":406,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/modules/dashboard/pages/dashboard/dashboard.component.ts:12",{"_index":411,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/modules/dashboard/pages/dashboard/dashboard.component.ts:8",{"_index":410,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/modules/errors/pages/forbidden/forbidden.component.ts",{"_index":479,"title":{},"body":{"components/ForbiddenComponent.html":{},"coverage.html":{}}}],["src/app/modules/errors/pages/forbidden/forbidden.component.ts:11",{"_index":485,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["src/app/modules/errors/pages/forbidden/forbidden.component.ts:15",{"_index":486,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["src/app/modules/errors/pages/forbidden/forbidden.component.ts:19",{"_index":487,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["src/app/modules/errors/pages/not",{"_index":681,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/modules/errors/pages/server",{"_index":856,"title":{},"body":{"components/ServerErrorComponent.html":{},"coverage.html":{}}}],["src/app/shared/models/jwt",{"_index":298,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/JwtTokenDto.html":{},"coverage.html":{}}}],["src/app/shared/models/phone",{"_index":375,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/PhoneVerificationDto.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["src/app/shared/models/response",{"_index":301,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{}}}],["src/app/shared/models/response.ts",{"_index":333,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{},"coverage.html":{}}}],["src/app/shared/models/roles",{"_index":397,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/RegisterComponent.html":{}}}],["src/app/shared/models/roles.ts",{"_index":1050,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/models/user",{"_index":373,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["src/app/shared/models/user.ts",{"_index":967,"title":{},"body":{"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.ts",{"_index":894,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/environments/environment",{"_index":418,"title":{},"body":{"injectables/EnvironmentUrlService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1022,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1023,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1024,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":889,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["start",{"_index":892,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["started",{"_index":1056,"title":{"index.html":{}},"body":{}}],["state",{"_index":23,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["state.url",{"_index":47,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["statements",{"_index":1007,"title":{},"body":{"coverage.html":{}}}],["storageservice",{"_index":651,"title":{},"body":{"components/NavComponent.html":{}}}],["stored",{"_index":1087,"title":{},"body":{"index.html":{}}}],["stretch",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["string",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["styleurls",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["subject",{"_index":359,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["submit",{"_index":504,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["submitted",{"_index":742,"title":{},"body":{"components/RegisterComponent.html":{}}}],["submitted=false",{"_index":772,"title":{},"body":{"components/RegisterComponent.html":{}}}],["subscribe",{"_index":991,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["subscribe((event:event",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(response",{"_index":537,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe(result",{"_index":619,"title":{},"body":{"components/LoginComponent.html":{},"components/NavComponent.html":{}}}],["subtitle",{"_index":561,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["successfully",{"_index":262,"title":{},"body":{"components/AuthComponent.html":{},"components/PhoneConfirmationComponent.html":{}}}],["superadmin",{"_index":1051,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["support",{"_index":1111,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":546,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ServerErrorComponent.html":{}}}],["svg",{"_index":1112,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":441,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["tab",{"_index":880,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["table",{"_index":1028,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1027,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["templates",{"_index":636,"title":{},"body":{"components/ManageTemplatesComponent.html":{},"miscellaneous/variables.html":{}}}],["templates'},{'name",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["templates.component",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["templates.component.html",{"_index":638,"title":{},"body":{"components/ManageTemplatesComponent.html":{}}}],["templates.component.scss",{"_index":637,"title":{},"body":{"components/ManageTemplatesComponent.html":{}}}],["templates.component.ts",{"_index":635,"title":{},"body":{"components/ManageTemplatesComponent.html":{},"coverage.html":{}}}],["templates.component.ts:12",{"_index":640,"title":{},"body":{"components/ManageTemplatesComponent.html":{}}}],["templates.component.ts:8",{"_index":639,"title":{},"body":{"components/ManageTemplatesComponent.html":{}}}],["templates/manage",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ManageTemplatesComponent.html":{},"coverage.html":{}}}],["templateurl",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["test",{"_index":1093,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1103,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1092,"title":{},"body":{"index.html":{}}}],["text",{"_index":553,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["thereby",{"_index":580,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["third",{"_index":836,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authchangesubject.asobservable",{"_index":356,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authchangesubject.next(isauthenticated",{"_index":387,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authorizationservice.isuseradmin",{"_index":41,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.authservice.authchanged",{"_index":659,"title":{},"body":{"components/NavComponent.html":{}}}],["this.authservice.forgotpassword(api_accounts_forgot_password",{"_index":536,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.authservice.isuserauthenticated",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{}}}],["this.authservice.loginuser(api_accounts_login",{"_index":618,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":662,"title":{},"body":{"components/NavComponent.html":{}}}],["this.authservice.refreshauthentication(api_tokens_refresh",{"_index":322,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.registeruser(api_accounts_registration",{"_index":810,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.sendauthstatechangenotification(false",{"_index":309,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.sendauthstatechangenotification(isrefreshsuccess",{"_index":311,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.sendauthstatechangenotification(result.isauthsuccessful",{"_index":622,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.sendauthstatechangenotification(true",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.verifyphone(apiurl",{"_index":990,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.currenturl",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["this.error",{"_index":864,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["this.forgotpasswordform",{"_index":522,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.formattedphone",{"_index":724,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["this.http.post(this.createcompleteroute(this.envurl.apiurl",{"_index":382,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.isuserauthenticated",{"_index":660,"title":{},"body":{"components/NavComponent.html":{}}}],["this.jwthelper.decodetoken(accesstoken",{"_index":400,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.jwthelper.istokenexpired(accesstoken",{"_index":388,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.loginform",{"_index":608,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls[controlname].haserror(errorname",{"_index":613,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls[controlname].invalid",{"_index":610,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls[controlname].touched",{"_index":611,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.name",{"_index":655,"title":{},"body":{"components/NavComponent.html":{}}}],["this.notificationservice.showerror(\"something",{"_index":460,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.notificationservice.showerror(error.error",{"_index":452,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.notificationservice.showerror(errorsasstring",{"_index":448,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.passwordform",{"_index":852,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.passwordmatchvalidator",{"_index":795,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.previousurl",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.previousurl.asobservable",{"_index":965,"title":{},"body":{"injectables/UrlService.html":{}}}],["this.previousurl.next(previousurl",{"_index":966,"title":{},"body":{"injectables/UrlService.html":{}}}],["this.previousurl?.includes(routing_auth",{"_index":988,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.previousurl?.includes(routing_forgot_password",{"_index":989,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.registerform",{"_index":774,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['email'].haserror('email",{"_index":820,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['email'].haserror('required",{"_index":819,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['firstname'].haserror('pattern",{"_index":822,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['firstname'].haserror('required",{"_index":821,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['lastname'].haserror('pattern",{"_index":824,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['lastname'].haserror('required",{"_index":823,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.responsedata",{"_index":851,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.returnurl",{"_index":488,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.role",{"_index":657,"title":{},"body":{"components/NavComponent.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":489,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.router.events",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.getcurrentnavigation",{"_index":863,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["this.router.navigate(['/auth",{"_index":490,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/NavComponent.html":{}}}],["this.router.navigate(['/forbidden",{"_index":44,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.router.navigate([navigationurl",{"_index":992,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.router.navigate([routing_auth",{"_index":310,"title":{},"body":{"guards/AuthGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.router.navigate([routing_verify_phone",{"_index":538,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate([this.returnurl",{"_index":623,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigatebyurl(not_found",{"_index":454,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.router.navigatebyurl(server_error",{"_index":459,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.sendauthstatechangenotification(false",{"_index":385,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.storageservice.watchstorageitem(authenticated_user).subscribe(data",{"_index":652,"title":{},"body":{"components/NavComponent.html":{}}}],["this.storageservice.watchstorageitem(first_name).subscribe(data",{"_index":654,"title":{},"body":{"components/NavComponent.html":{}}}],["this.storageservice.watchstorageitem(user_role).subscribe(data",{"_index":656,"title":{},"body":{"components/NavComponent.html":{}}}],["this.toastr.error(messages",{"_index":709,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.toastr.info(message",{"_index":710,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.toastr.success(message",{"_index":708,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.toastr.warning(message",{"_index":711,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.tryrefreshingtokens(accesstoken",{"_index":308,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.urlservice.previousurl$.subscribe((previousurl",{"_index":531,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.urlservice.setpreviousurl(this.previousurl",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["this.username",{"_index":653,"title":{},"body":{"components/NavComponent.html":{}}}],["this.userphone",{"_index":722,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["this.userphone.substring(0",{"_index":725,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["this.userphone.substring(3",{"_index":727,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["this.userphone.substring(6",{"_index":729,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["this.validationerrors",{"_index":624,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.verifyphoneform",{"_index":983,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.verifyphoneform.value.verifycode",{"_index":986,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this_expr",{"_index":512,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["throwerror",{"_index":434,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(error",{"_index":465,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["title",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"injectables/NotificationService.html":{}}}],["toast",{"_index":949,"title":{},"body":{"modules/SharedModule.html":{}}}],["toastr",{"_index":697,"title":{},"body":{"injectables/NotificationService.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["toastrmodule",{"_index":943,"title":{},"body":{"modules/SharedModule.html":{}}}],["toastrmodule.forroot",{"_index":947,"title":{},"body":{"modules/SharedModule.html":{}}}],["toastrservice",{"_index":695,"title":{},"body":{"injectables/NotificationService.html":{}}}],["toggle",{"_index":903,"title":{},"body":{"modules/SharedModule.html":{}}}],["token",{"_index":299,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/JwtTokenDto.html":{}}}],["token.ts",{"_index":564,"title":{},"body":{"interfaces/JwtTokenDto.html":{},"coverage.html":{}}}],["tokengetter",{"_index":946,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tokens",{"_index":314,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/JwtTokenDto.html":{}}}],["tools",{"_index":877,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["top:5px",{"_index":559,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["trace",{"_index":890,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["transfer",{"_index":566,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["transportation",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/PhoneConfirmationComponent.html":{},"index.html":{}}}],["transportationclient",{"_index":1057,"title":{},"body":{"index.html":{}}}],["tree",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["true",{"_index":43,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":312,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tryrefreshingtokens",{"_index":281,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tryrefreshingtokens(accesstoken",{"_index":289,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tslib",{"_index":1043,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":19,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":401,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["unexpected",{"_index":461,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/RegisterComponent.html":{}}}],["unit",{"_index":1091,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":288,"title":{},"body":{"guards/AuthGuard.html":{}}}],["until",{"_index":996,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["update",{"_index":666,"title":{},"body":{"components/NavComponent.html":{}}}],["url",{"_index":526,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ServerErrorComponent.html":{}}}],["url.service",{"_index":304,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["url.service.ts",{"_index":414,"title":{},"body":{"injectables/EnvironmentUrlService.html":{},"coverage.html":{}}}],["url.service.ts:9",{"_index":416,"title":{},"body":{"injectables/EnvironmentUrlService.html":{}}}],["urlservice",{"_index":74,"title":{"injectables/UrlService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["use",{"_index":828,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["useclass",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":495,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["user's",{"_index":578,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["user.phone",{"_index":811,"title":{},"body":{"components/RegisterComponent.html":{}}}],["userforauthdto",{"_index":615,"title":{},"body":{"components/LoginComponent.html":{}}}],["userforauthenticationdto",{"_index":370,"title":{"interfaces/UserForAuthenticationDto.html":{}},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{},"coverage.html":{}}}],["userforgotpassworddto",{"_index":371,"title":{"interfaces/UserForgotPasswordDto.html":{}},"body":{"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{},"coverage.html":{}}}],["userforregistrationdto",{"_index":372,"title":{"interfaces/UserForRegistrationDto.html":{}},"body":{"injectables/AuthenticationService.html":{},"components/RegisterComponent.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{},"coverage.html":{}}}],["username",{"_index":592,"title":{},"body":{"components/LoginComponent.html":{},"components/NavComponent.html":{}}}],["userphone",{"_index":718,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["using",{"_index":315,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["valid",{"_index":585,"title":{},"body":{"interfaces/JwtTokenDto.html":{},"components/RegisterComponent.html":{}}}],["validatecontrol",{"_index":593,"title":{},"body":{"components/LoginComponent.html":{}}}],["validationerrors",{"_index":594,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["validator",{"_index":794,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators",{"_index":515,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["validators.compose",{"_index":783,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.compose([validators.email",{"_index":782,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.compose([validators.maxlength(20",{"_index":777,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.compose([validators.maxlength(this.codelength",{"_index":985,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["validators.compose([validators.minlength(3",{"_index":789,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.compose([validators.required",{"_index":785,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(this.passwordminlength",{"_index":853,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["validators.pattern('[a",{"_index":778,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":523,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["value",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["variable",{"_index":1010,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1119,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification",{"_index":376,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["verification.ts",{"_index":733,"title":{},"body":{"interfaces/PhoneVerificationDto.html":{},"coverage.html":{}}}],["verified",{"_index":997,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["verify",{"_index":577,"title":{},"body":{"interfaces/JwtTokenDto.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["verifycode",{"_index":984,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["verifyphone",{"_index":351,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["verifyphonecomponent",{"_index":156,"title":{"components/VerifyPhoneComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["verifyphoneform",{"_index":973,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["version",{"_index":1072,"title":{},"body":{"index.html":{}}}],["via",{"_index":1095,"title":{},"body":{"index.html":{}}}],["visibility",{"_index":627,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["visibility_off",{"_index":626,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["void",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["w",{"_index":834,"title":{},"body":{"components/RegisterComponent.html":{}}}],["webb",{"_index":664,"title":{},"body":{"components/NavComponent.html":{}}}],["went",{"_index":462,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["whether",{"_index":792,"title":{},"body":{"components/RegisterComponent.html":{}}}],["white",{"_index":679,"title":{},"body":{"components/NavComponent.html":{}}}],["width",{"_index":269,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["width:100",{"_index":633,"title":{},"body":{"components/LoginComponent.html":{}}}],["width:50",{"_index":477,"title":{},"body":{"components/FooterComponent.html":{}}}],["width:500px",{"_index":276,"title":{},"body":{"components/AuthComponent.html":{},"components/LoginComponent.html":{}}}],["width:75",{"_index":629,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["width:90",{"_index":832,"title":{},"body":{"components/RegisterComponent.html":{}}}],["works",{"_index":412,"title":{},"body":{"components/DashboardComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["wrong",{"_index":463,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["z",{"_index":780,"title":{},"body":{"components/RegisterComponent.html":{}}}],["za",{"_index":779,"title":{},"body":{"components/RegisterComponent.html":{}}}],["zip",{"_index":830,"title":{},"body":{"components/RegisterComponent.html":{}}}],["zipcode",{"_index":788,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/UserForAuthenticationDto.html":{},"interfaces/UserForRegistrationDto.html":{},"interfaces/UserForgotPasswordDto.html":{}}}],["zone.js",{"_index":1045,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/admin.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authorizationService: AuthorizationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/admin.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/admin.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { AuthorizationService } from '../services/authorization.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n  constructor(private authorizationService: AuthorizationService, private router: Router) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.authorizationService.isUserAdmin())\n      return true;\n\n    this.router.navigate(['/forbidden']), { queryParams: { returnUrl: state.url }};\n      return false;\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUrl\n                            \n                            \n                                previousUrl\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, urlService: UrlService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        urlService\n                                                  \n                                                        \n                                                                        UrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Rock Transportation'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { AuthenticationService } from './core/authentication/authentication.service';\nimport { UrlService } from './core/services/url.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'Rock Transportation';\n  previousUrl: string | null = null;\n  currentUrl: string | null = null;\n\n  constructor(private authService: AuthenticationService,\n    private urlService: UrlService,\n    private router: Router) {}\n\n  ngOnInit(): void {\n    if (this.authService.isUserAuthenticated()) {\n      this.authService.sendAuthStateChangeNotification(true);\n    }\n\n    this.router.events \n      .subscribe((event:Event) => {\n        if (event instanceof NavigationEnd) {\n          this.previousUrl = this.currentUrl;\n          this.currentUrl = event.url;\n          this.urlService.setPreviousUrl(this.previousUrl);\n        }\n      })\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n    \n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                content {\n    min-height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n}\n\nmain {\n    flex-grow: 1;\n}\n\napp-nav, main, app-footer {\n    flex-shrink: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAppModule -->\n\nAuthComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nForbiddenComponent\n\nForbiddenComponent\n\nAppModule -->\n\nForbiddenComponent->AppModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAppModule -->\n\nForgotPasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nManageTemplatesComponent\n\nManageTemplatesComponent\n\nAppModule -->\n\nManageTemplatesComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nPhoneConfirmationComponent\n\nPhoneConfirmationComponent\n\nAppModule -->\n\nPhoneConfirmationComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nServerErrorComponent\n\nServerErrorComponent\n\nAppModule -->\n\nServerErrorComponent->AppModule\n\n\n\n\n\nVerifyPhoneComponent\n\nVerifyPhoneComponent\n\nAppModule -->\n\nVerifyPhoneComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nUrlService\n\nUrlService\n\nAppModule -->\n\nUrlService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AuthComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            ForbiddenComponent\n                        \n                        \n                            ForgotPasswordComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            ManageTemplatesComponent\n                        \n                        \n                            NavComponent\n                        \n                        \n                            NotFoundComponent\n                        \n                        \n                            PhoneConfirmationComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            ResetPasswordComponent\n                        \n                        \n                            ServerErrorComponent\n                        \n                        \n                            VerifyPhoneComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ErrorInterceptor\n                        \n                        \n                            UrlService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { NavComponent } from './core/header/nav.component';\n\nimport { SharedModule } from './shared/shared.module';\nimport { FooterComponent } from './core/footer/footer.component';\nimport { NotFoundComponent } from './modules/errors/pages/not-found/not-found.component';\nimport { ServerErrorComponent } from './modules/errors/pages/server-error/server-error.component';\nimport { AuthComponent } from './modules/auth/pages/auth/auth.component';\nimport { RegisterComponent } from './modules/auth/pages/auth/register/register.component';\nimport { LoginComponent } from './modules/auth/pages/auth/login/login.component';\n\nimport { NgxMaskModule } from 'ngx-mask';\nimport { ErrorInterceptor } from './core/interceptors/error.interceptor';\nimport { VerifyPhoneComponent } from './modules/auth/pages/verify-phone/verify-phone.component';\nimport { ForgotPasswordComponent } from './modules/auth/pages/password/forgot-password/forgot-password.component';\nimport { DashboardComponent } from './modules/dashboard/pages/dashboard/dashboard.component';\nimport { ManageTemplatesComponent } from './modules/church-services/manage-templates/manage-templates.component';\nimport { ForbiddenComponent } from './modules/errors/pages/forbidden/forbidden.component';\nimport { ResetPasswordComponent } from './modules/auth/pages/password/reset-password/reset-password.component';\nimport { PhoneConfirmationComponent } from './modules/auth/pages/phone-confirmation/phone-confirmation.component';\n\nimport { UrlService } from './core/services/url.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    FooterComponent,\n    NotFoundComponent,\n    ServerErrorComponent,\n    AuthComponent,\n    RegisterComponent,\n    LoginComponent,\n    VerifyPhoneComponent,\n    ForgotPasswordComponent,\n    DashboardComponent,\n    ManageTemplatesComponent,\n    ForbiddenComponent,\n    ResetPasswordComponent,\n    PhoneConfirmationComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgxMaskModule.forRoot()\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true\n    },  \n    UrlService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NotFoundComponent } from './modules/errors/pages/not-found/not-found.component';\nimport { AuthComponent } from './modules/auth/pages/auth/auth.component';\nimport { ServerErrorComponent } from './modules/errors/pages/server-error/server-error.component';\nimport { VerifyPhoneComponent } from './modules/auth/pages/verify-phone/verify-phone.component';\nimport { PhoneConfirmationComponent } from './modules/auth/pages/phone-confirmation/phone-confirmation.component';\nimport { ForgotPasswordComponent } from './modules/auth/pages/password/forgot-password/forgot-password.component';\nimport { DashboardComponent } from './modules/dashboard/pages/dashboard/dashboard.component';\nimport { AuthGuard } from './core/guards/auth.guard';\nimport { ManageTemplatesComponent } from './modules/church-services/manage-templates/manage-templates.component';\nimport { ForbiddenComponent } from './modules/errors/pages/forbidden/forbidden.component';\nimport { AdminGuard } from './core/guards/admin.guard';\nimport { ResetPasswordComponent } from './modules/auth/pages/password/reset-password/reset-password.component';\nimport { NOT_FOUND, ROUTING_AUTH, ROUTING_CONFIRM_PHONE, ROUTING_FORBIDDEN, ROUTING_FORGOT_PASSWORD, ROUTING_MANAGE_TEMPLATES, ROUTING_RESET_PASSWORD, ROUTING_VERIFY_PHONE, SERVER_ERROR } from './app.constants';\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: ROUTING_AUTH, component: AuthComponent },\n  { path: ROUTING_FORBIDDEN, component: ForbiddenComponent },\n  { path: ROUTING_VERIFY_PHONE, component: VerifyPhoneComponent },\n  { path: ROUTING_CONFIRM_PHONE, component: PhoneConfirmationComponent },\n  { path: ROUTING_FORGOT_PASSWORD, component: ForgotPasswordComponent },\n  { path: ROUTING_RESET_PASSWORD, component: ResetPasswordComponent },\n  { path: ROUTING_MANAGE_TEMPLATES, component: ManageTemplatesComponent, canActivate: [AuthGuard,AdminGuard] },\n  { path: NOT_FOUND, component: NotFoundComponent },\n  { path: SERVER_ERROR, component: ServerErrorComponent },\n  { path: '**', redirectTo: '/404', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/auth/pages/auth/auth.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                styleUrls\n                ./auth.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/pages/auth/auth.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/pages/auth/auth.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n  Congratulations! You were successfully registered!\n  There was an issue resetting your password\n  You have successfully changed your password\n  -->\n\n  \n    \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./auth.component.scss\n                \n                .auth-container\n{\n  width: 500px;\n  margin: 2% auto;\n}\n@media( max-width:500px )\n{\n  .auth-container\n  {\n    width: 300px;\n  }\n}\n@media ( max-width: 300px )\n{\n  .auth-container\n  {\n    width: 250px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Congratulations! You were successfully registered!  There was an issue resetting your password  You have successfully changed your password  -->                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                    Async\n                                tryRefreshingTokens\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, http: HttpClient, envUrl: EnvironmentUrlService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        envUrl\n                                                  \n                                                        \n                                                                        EnvironmentUrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/auth.guard.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        tryRefreshingTokens\n                        \n                    \n                \n            \n            \n                \n                    \n                    tryRefreshingTokens(accessToken: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/auth.guard.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accessToken\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { ACCESS_TOKEN, REFRESH_TOKEN, API_TOKENS_REFRESH, ROUTING_AUTH } from 'src/app/app.constants';\nimport { JwtTokenDto } from 'src/app/shared/models/jwt-token';\nimport { AuthResponseDto } from 'src/app/shared/models/response';\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { EnvironmentUrlService } from '../services/environment-url.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthenticationService, \n    private router: Router,\n    private http: HttpClient,\n    private envUrl: EnvironmentUrlService){}\n\n  async canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.authService.isUserAuthenticated()) {\n      return true;\n    }\n\n    const accessToken = localStorage.getItem(ACCESS_TOKEN);\n\n    const isRefreshSuccess = await this.tryRefreshingTokens(accessToken);\n    if (!isRefreshSuccess) {\n      this.authService.sendAuthStateChangeNotification(false);\n      this.router.navigate([ROUTING_AUTH], { queryParams: { returnUrl: state.url }});\n    }\n\n    this.authService.sendAuthStateChangeNotification(isRefreshSuccess);\n    return isRefreshSuccess;\n  }\n\n  private async tryRefreshingTokens(accessToken: string | null): Promise {\n    // Try refreshing tokens using refresh token\n    const refreshToken: string | null = localStorage.getItem(REFRESH_TOKEN);\n\n    if(!accessToken || !refreshToken) return false;\n\n    var jwtToken: JwtTokenDto = {accessToken: accessToken, refreshToken: refreshToken}; \n\n    let isRefreshSuccess: boolean;\n\n    try {\n      const response = await this.authService.refreshAuthentication(API_TOKENS_REFRESH, jwtToken).toPromise();\n\n      const newToken = response.accessToken;\n      const newRefreshToken = response.refreshToken;\n\n      localStorage.setItem(ACCESS_TOKEN, newToken);\n      localStorage.setItem(REFRESH_TOKEN, newRefreshToken);\n      isRefreshSuccess = true;\n    } catch(ex) {\n      isRefreshSuccess = false;\n    }\n\n    return isRefreshSuccess;\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthResponseDto.html":{"url":"interfaces/AuthResponseDto.html","title":"interface - AuthResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            isAuthSuccessful\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAuthSuccessful\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isAuthSuccessful:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RegistrationResponseDto {\n    isSuccessfulRegistration: boolean;\n    errors: string[];\n}\n\nexport interface AuthResponseDto {\n  isAuthSuccessful: boolean;\n  accessToken: string;\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/authentication/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authChanged\n                            \n                            \n                                    Private\n                                authChangeSubject\n                            \n                            \n                                    Private\n                                createCompleteRoute\n                            \n                            \n                                    Public\n                                forgotPassword\n                            \n                            \n                                    Public\n                                isUserAuthenticated\n                            \n                            \n                                    Public\n                                loginUser\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                refreshAuthentication\n                            \n                            \n                                    Public\n                                registerUser\n                            \n                            \n                                    Public\n                                sendAuthStateChangeNotification\n                            \n                            \n                                    Public\n                                verifyPhone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, envUrl: EnvironmentUrlService, jwtHelper: JwtHelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/authentication.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        envUrl\n                                                  \n                                                        \n                                                                        EnvironmentUrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtHelper\n                                                  \n                                                        \n                                                                    JwtHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authChanged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.authChangeSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authChangeSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createCompleteRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        forgotPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isUserAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loginUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        refreshAuthentication\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        registerUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendAuthStateChangeNotification\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        verifyPhone\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { UserForAuthenticationDto, UserForgotPasswordDto, UserForRegistrationDto } from 'src/app/shared/models/user';\nimport { AuthResponseDto, RegistrationResponseDto } from 'src/app/shared/models/response';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { EnvironmentUrlService } from '../services/environment-url.service';\nimport { PhoneVerificationDto } from 'src/app/shared/models/phone-verification';\nimport { Subject } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { ACCESS_TOKEN, REFRESH_TOKEN } from 'src/app/app.constants';\nimport { JwtTokenDto } from 'src/app/shared/models/jwt-token';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n    constructor(private http: HttpClient,\n      private envUrl: EnvironmentUrlService, \n      private jwtHelper: JwtHelperService) { }\n\n    private authChangeSubject = new Subject()\n    public authChanged = this.authChangeSubject.asObservable();\n\n    public registerUser = (route: string, body: UserForRegistrationDto) => {\n      return this.http.post(this.createCompleteRoute(this.envUrl.apiUrl, route), body);\n    }\n\n    public verifyPhone = (route: string, body: PhoneVerificationDto) => {\n      return this.http.post(this.createCompleteRoute(this.envUrl.apiUrl, route), body);\n    }\n\n    public forgotPassword = (route: string, body: UserForgotPasswordDto) => {\n      return this.http.post(this.createCompleteRoute(this.envUrl.apiUrl, route), body);\n    }\n\n    public refreshAuthentication = (route: string, body: JwtTokenDto) => {\n      return this.http.post(this.createCompleteRoute(this.envUrl.apiUrl, route), body);\n    }\n\n    public loginUser = (route: string, body: UserForAuthenticationDto) => {\n      return this.http.post(this.createCompleteRoute(this.envUrl.apiUrl, route), body);\n    }\n\n    public logout = () => {\n      localStorage.removeItem(ACCESS_TOKEN);\n      localStorage.removeItem(REFRESH_TOKEN);\n      this.sendAuthStateChangeNotification(false);\n    }\n\n    public sendAuthStateChangeNotification = (isAuthenticated:boolean) => {\n      this.authChangeSubject.next(isAuthenticated);\n    }\n\n    public isUserAuthenticated = () => {\n      const accessToken = localStorage.getItem(ACCESS_TOKEN);\n\n      return accessToken && !this.jwtHelper.isTokenExpired(accessToken);\n    }\n\n    private createCompleteRoute = (envAddress: string, route: string) => {\n      return `${envAddress}/${route}`;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isUserAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, envUrl: EnvironmentUrlService, jwtHelper: JwtHelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/authorization.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        envUrl\n                                                  \n                                                        \n                                                                        EnvironmentUrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtHelper\n                                                  \n                                                        \n                                                                    JwtHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isUserAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/authorization.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { ACCESS_TOKEN, IDENTITY_ROLES } from 'src/app/app.constants';\nimport { Roles } from 'src/app/shared/models/roles';\nimport { EnvironmentUrlService } from './environment-url.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizationService {\n\n  constructor(private http: HttpClient,\n    private envUrl: EnvironmentUrlService, \n    private jwtHelper: JwtHelperService) { }\n\n  public isUserAdmin = () => {\n    const accessToken = localStorage.getItem(ACCESS_TOKEN);\n    const decodedToken = accessToken !== null ? this.jwtHelper.decodeToken(accessToken) : undefined;\n    const role = decodedToken[IDENTITY_ROLES];\n    return role === Roles.administrator || Roles.superAdmin;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/dashboard/pages/dashboard/dashboard.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/dashboard/pages/dashboard/dashboard.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/dashboard/pages/dashboard/dashboard.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        dashboard works!\n\n    \n\n    \n                \n                    ./dashboard.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'dashboard works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EnvironmentUrlService.html":{"url":"injectables/EnvironmentUrlService.html","title":"injectable - EnvironmentUrlService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EnvironmentUrlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/environment-url.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/environment-url.service.ts:9\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.apiUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/environment-url.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnvironmentUrlService {\n\n    public apiUrl: string = environment.apiUrl;\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptors/error.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/interceptors/error.interceptor.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/interceptors/error.interceptor.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { NotificationService } from '../services/notification.service';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { catchError } from 'rxjs/operators';\nimport { NOT_FOUND, SERVER_ERROR } from 'src/app/app.constants';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router,\n    private notificationService: NotificationService) {}\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(request).pipe(\n      catchError(error => {\n        if (error) {\n          switch (error.status) {\n            case 400:\n              let errors: string[] = Object.values(error.error);\n              let errorsAsString = errors.join(\"\")\n              this.notificationService.showError(errorsAsString, error.statusText);\n              break;\n            case 401:\n              this.notificationService.showError(error.error, error.statusText);\n              break;\n            case 403: \n              this.notificationService.showError(error.error);\n              break;\n            case 404:\n              this.router.navigateByUrl(NOT_FOUND);\n              break;\n            case 406: \n              this.notificationService.showError(error.error);\n              break;\n            case 409:\n              this.notificationService.showError(error.error);\n              break;\n            case 500:\n              const navigationExtras: NavigationExtras = {state: {error: error.error}};\n              this.router.navigateByUrl(SERVER_ERROR, navigationExtras);\n              break;\n            default:\n              //this.notificationService.showError(\"Something unexpected went wrong\");\n              console.log(error);\n              break;\n          }\n        }\n        return throwError(error);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/footer/footer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/footer/footer.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n      \n    \n    \n \n    \n    \n  \n    \n\n    \n                \n                    ./footer.component.scss\n                \n                app-footer\n{\n    justify-content: flex-end;\n    justify-content: space-between;\n    padding: 0 2% 0 2%;\n}\nimg\n{\n    width:50%;\n    height:auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForbiddenComponent.html":{"url":"components/ForbiddenComponent.html","title":"component - ForbiddenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForbiddenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/errors/pages/forbidden/forbidden.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forbidden\n            \n\n            \n                styleUrls\n                ./forbidden.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forbidden.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                navigateToLogin\n                            \n                            \n                                    Private\n                                returnUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/errors/pages/forbidden/forbidden.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/errors/pages/forbidden/forbidden.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        navigateToLogin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/errors/pages/forbidden/forbidden.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/errors/pages/forbidden/forbidden.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forbidden',\n  templateUrl: './forbidden.component.html',\n  styleUrls: ['./forbidden.component.scss']\n})\nexport class ForbiddenComponent implements OnInit {\n\n  private returnUrl: string | undefined;\n\n  constructor(private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl']||'';\n  }\n\n  public navigateToLogin = () => {\n    this.router.navigate(['/auth'], { queryParams: { returnUrl: this.returnUrl }});\n  }\n\n}\n\n    \n\n    \n        Forbidden\n\n    This page is forbidden for you. Please log in with a different user\n    to access the requested page.\n\n\n    \n\n    \n                \n                    ./forbidden.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Forbidden    This page is forbidden for you. Please log in with a different user    to access the requested page.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForbiddenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/auth/pages/password/forgot-password/forgot-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                styleUrls\n                ./forgot-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forgotPasswordForm\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Private\n                                previousUrl\n                            \n                            \n                                    Private\n                                returnUrl\n                            \n                            \n                                    Public\n                                submit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, route: ActivatedRoute, urlService: UrlService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/pages/password/forgot-password/forgot-password.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        urlService\n                                                  \n                                                        \n                                                                        UrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/pages/password/forgot-password/forgot-password.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        forgotPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/password/forgot-password/forgot-password.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/password/forgot-password/forgot-password.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        previousUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/password/forgot-password/forgot-password.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/password/forgot-password/forgot-password.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        submit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/password/forgot-password/forgot-password.component.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IConfig } from 'ngx-mask';\nimport { API_ACCOUNTS_FORGOT_PASSWORD, ROUTING_AUTH, ROUTING_VERIFY_PHONE } from 'src/app/app.constants';\nimport { AuthenticationService } from 'src/app/core/authentication/authentication.service';\nimport { UrlService } from 'src/app/core/services/url.service';\nimport { UserForgotPasswordDto } from 'src/app/shared/models/user';\n\nexport let options: Partial | (() => Partial);\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  public forgotPasswordForm!: FormGroup;\n  public hide: boolean = true;\n  private previousUrl: string | null = null;\n  private returnUrl: string | undefined;\n\n  constructor(private authService: AuthenticationService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private urlService: UrlService) { }\n\n  ngOnInit(): void {\n    this.forgotPasswordForm = new FormGroup({\n      phone: new FormControl(\"\", [Validators.required])\n    })\n\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '';\n\n    // Getting previous Url allows us to set a type of guard pre-login for this page\n    this.urlService.previousUrl$.subscribe((previousUrl: string | null) => {\n      if (!previousUrl?.includes(ROUTING_AUTH)) {\n        console.log(previousUrl);\n        this.router.navigate([ROUTING_AUTH]);\n      }\n    })\n  }\n\n  public submit = (forgotPasswordForm: any) => {\n    var forgotPasswordDto: UserForgotPasswordDto = { phone: forgotPasswordForm.phone}\n\n    this.authService.forgotPassword(API_ACCOUNTS_FORGOT_PASSWORD, forgotPasswordDto)\n    .subscribe(response => {\n      this.router.navigate([ROUTING_VERIFY_PHONE], {state: {data: forgotPasswordDto.phone}});\n    })\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Enter your phone number\n      \n      \n        A verification code will be sent to your \n        phone to make sure you are the owner of this account. \n      \n      \n        \n          \n            Phone Number:\n            \n            phone\n            Required\n          \n\n          \n            Submit\n          \n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./forgot-password.component.scss\n                \n                .container {\n  margin: 20px auto 0;\n}\nmat-card {\n  text-align: center;\n  margin: 0 auto;\n}\nmat-card-header {\n  font-size: large;\n  justify-content: center;\n  margin-top:5px;\n  margin-bottom:10px;\n}\nmat-card-subtitle {\n  margin: 10px auto 10px;\n}\n\n@media ( max-width: 300px )\n{\n  .container\n  {\n    width: 240px;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Enter your phone number                    A verification code will be sent to your         phone to make sure you are the owner of this account.                                           Phone Number:                        phone            Required                                Submit                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtTokenDto.html":{"url":"interfaces/JwtTokenDto.html","title":"interface - JwtTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/jwt-token.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object to accept and pass tokens to the backend\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The access token represents the short-lived token passed back and forth\nto the backend to verify a user's authentication, thereby allowing access.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The refresh token represents the long-lived token persisting in the user's\naccount allowing for renewed access tokens as long as it is valid and not expired.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface JwtTokenDto {\n  /**\n   * The access token represents the short-lived token passed back and forth \n   * to the backend to verify a user's authentication, thereby allowing access. \n   */\n  accessToken: string;\n\n  /**\n   * The refresh token represents the long-lived token persisting in the user's \n   * account allowing for renewed access tokens as long as it is valid and not expired.\n   */\n  refreshToken: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/auth/pages/auth/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                    Public\n                                hasError\n                            \n                            \n                                hide\n                            \n                            \n                                    Public\n                                loginForm\n                            \n                            \n                                    Public\n                                loginUser\n                            \n                            \n                                password\n                            \n                            \n                                    Private\n                                returnUrl\n                            \n                            \n                                username\n                            \n                            \n                                    Public\n                                validateControl\n                            \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/pages/auth/login/login.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/pages/auth/login/login.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/auth/login/login.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hasError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/auth/login/login.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/auth/login/login.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/auth/login/login.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loginUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/auth/login/login.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/auth/login/login.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/auth/login/login.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/auth/login/login.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        validateControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/auth/login/login.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/auth/login/login.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Injectable, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { IConfig } from 'ngx-mask';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core/authentication/authentication.service';\nimport { UserForAuthenticationDto } from 'src/app/shared/models/user';\nimport { ACCESS_TOKEN, API_ACCOUNTS_LOGIN, REFRESH_TOKEN } from 'src/app/app.constants';\n\nexport let options: Partial | (() => Partial);\n\n@Injectable({\n  providedIn:'root'\n})\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  public loginForm!: FormGroup;\n  username!: string;\n  password!: string;\n  hide: boolean = true;\n  validationErrors: string[] = [];\n  error: boolean = false;\n  private returnUrl: string | undefined;\n\n  constructor(private authService: AuthenticationService,\n    private router: Router, \n    private route: ActivatedRoute) {}\n\n    ngOnInit(): void {\n      this.loginForm = new FormGroup({\n        username: new FormControl(\"\", [Validators.required]),\n        password: new FormControl(\"\", [Validators.required])\n      })\n\n      this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '';\n    }\n    public validateControl = (controlName: string) => {\n      return this.loginForm.controls[controlName].invalid && this.loginForm.controls[controlName].touched\n    }\n    public hasError = (controlName: string, errorName: string) => {\n      return this.loginForm.controls[controlName].hasError(errorName)\n    }\n\n    public loginUser = (loginFormValue: any) => {\n      const login = {...loginFormValue};\n      const userForAuthDto: UserForAuthenticationDto = {\n        phone: login.username,\n        password: login.password\n      }\n\n      this.authService.loginUser(API_ACCOUNTS_LOGIN, userForAuthDto)\n      .subscribe(result => {\n        localStorage.setItem(ACCESS_TOKEN, result.accessToken);\n        localStorage.setItem(REFRESH_TOKEN, result.refreshToken);\n        this.authService.sendAuthStateChangeNotification(result.isAuthSuccessful);\n        this.router.navigate([this.returnUrl]);\n      }, error => {\n        this.validationErrors = error;\n        console.log(this.validationErrors);\n      })\n    }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            Phone Number:\n            \n            phone\n            Required\n          \n\n          \n            Password\n            \n            {{hide ? 'visibility_off' : 'visibility'}}\n            Required\n          \n          \n            Log In\n          \n        \n        \n        \n          \n            Forgot Password?\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .login-form\n{\n  width:75%;\n  margin: 0 auto;\n}\n.center\n{\n  text-align:center;\n}\nmat-form-field\n{\n  display: block;\n  width:100%;\n}\nmat-card-footer\n{\n  margin: 10px auto 0;\n  text-align:center;\n}\n@media (max-width:500px)\n{\n  .container\n  {\n    width:100%;\n    margin: 10px auto;\n  }\n  .login-form\n  {\n    width:100%;\n    margin: 0 auto;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Phone Number:                        phone            Required                                Password                        {{hide ? \\'visibility_off\\' : \\'visibility\\'}}            Required                                Log In                                                        Forgot Password?                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageTemplatesComponent.html":{"url":"components/ManageTemplatesComponent.html","title":"component - ManageTemplatesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ManageTemplatesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/church-services/manage-templates/manage-templates.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manage-templates\n            \n\n            \n                styleUrls\n                ./manage-templates.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./manage-templates.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/church-services/manage-templates/manage-templates.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/church-services/manage-templates/manage-templates.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manage-templates',\n  templateUrl: './manage-templates.component.html',\n  styleUrls: ['./manage-templates.component.scss']\n})\nexport class ManageTemplatesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        manage-templates works!\n\n    \n\n    \n                \n                    ./manage-templates.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'manage-templates works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManageTemplatesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavComponent.html":{"url":"components/NavComponent.html","title":"component - NavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/header/nav.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav\n            \n\n            \n                styleUrls\n                ./nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isUserAuthenticated\n                            \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/header/nav.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/header/nav.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isUserAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/header/nav.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/header/nav.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../authentication/authentication.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent {\n  public isUserAuthenticated:boolean | undefined;\n/*\n  userName: string;\n  role: string;\n  name: string;\n  email: string;\n\n  constructor(public basicAuthenticationService: BasicAuthenticationService,\n              private storageService: StorageService) {\n    this.storageService.watchStorageItem(AUTHENTICATED_USER).subscribe(data => this.userName = data);\n    this.storageService.watchStorageItem(FIRST_NAME).subscribe(data => this.name = data);\n    this.storageService.watchStorageItem(USER_ROLE).subscribe(data => this.role = data);\n  }\n  */\n constructor(private authService:AuthenticationService, private router: Router){\n   this.authService.authChanged\n   .subscribe(result => {\n     this.isUserAuthenticated = result;\n   })\n }\n\n  ngOnInit(): void {\n    this.authService.authChanged\n    .subscribe(result =>{\n      this.isUserAuthenticated = result;\n    })\n  }\n\n  public logout = () => {\n    this.authService.logout();\n    this.router.navigate(['/auth']);\n  }\n}\n\n    \n\n    \n        \n    \n      Jacob Webb -->\n      \n        Log In / Register\n        Logout\n        \n          \n          \n            Update Contact Info\n            Change Password\n            Logout\n          \n        \n      \n      \n        menu\n        \n          \n          Log in / Register\n          \n        \n      \n     \n  \n  \n\n    \n\n    \n                \n                    ./nav.component.scss\n                \n                .navbar\n{\n  justify-content: flex-end;\n  // justify-content: space-between;\n  padding: 0 2% 0 1%;\n}\n\n.navbar a\n{\n  font-size: 0.9em;\n}\n\n@media (max-width: 499px){\n  .nav-menu-show\n  {\n    display: none;\n  }\n}\n@media (min-width: 500px){\n  .nav-menu-hide\n  {\n    display: none;\n  }\n}\n.logo\n{\n  font-family: 'Baskerville';\n  color: white;\n  text-decoration:none;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Jacob Webb -->              Log In / Register        Logout                                        Update Contact Info            Change Password            Logout                                      menu                            Log in / Register                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/errors/pages/not-found/not-found.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                styleUrls\n                ./not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/errors/pages/not-found/not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/errors/pages/not-found/not-found.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    Not Found\n    Return to home page\n\n    \n\n    \n                \n                    ./not-found.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Not Found    Return to home page'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showError\n                            \n                            \n                                showInfo\n                            \n                            \n                                showSuccess\n                            \n                            \n                                showWarning\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/notification.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(messages: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/notification.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    messages\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"\"\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInfo\n                        \n                    \n                \n            \n            \n                \nshowInfo(message: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/notification.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(message: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/notification.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showWarning\n                        \n                    \n                \n            \n            \n                \nshowWarning(message: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/notification.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(private toastr: ToastrService) { }\n\n  showSuccess(message: string, title: string) {\n    this.toastr.success(message, title);\n  }\n\n  showError(messages: string, title: string = \"\") {\n    this.toastr.error(messages, title);\n    \n  }\n\n  showInfo(message: string, title: string) {\n    this.toastr.info(message, title);\n  }\n\n  showWarning(message: string, title: string) {\n    this.toastr.warning(message, title);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhoneConfirmationComponent.html":{"url":"components/PhoneConfirmationComponent.html","title":"component - PhoneConfirmationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PhoneConfirmationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/auth/pages/phone-confirmation/phone-confirmation.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirmation\n            \n\n            \n                styleUrls\n                ./phone-confirmation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./phone-confirmation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formattedPhone\n                            \n                            \n                                userPhone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/pages/phone-confirmation/phone-confirmation.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/pages/phone-confirmation/phone-confirmation.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formattedPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/phone-confirmation/phone-confirmation.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/phone-confirmation/phone-confirmation.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ROUTING_AUTH } from 'src/app/app.constants';\n\n@Component({\n  selector: 'app-confirmation',\n  templateUrl: './phone-confirmation.component.html',\n  styleUrls: ['./phone-confirmation.component.scss']\n})\nexport class PhoneConfirmationComponent implements OnInit {\n  userPhone: string = '';\n  formattedPhone: string | null = null;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.userPhone = history.state.data;\n    if (this.userPhone == '' || this.userPhone == undefined) \n      this.router.navigate([ROUTING_AUTH]);\n\n      this.formattedPhone = \"(\" + this.userPhone.substring(0, 3) + \")\" + this.userPhone.substring(3, 6) + \"-\" + this.userPhone.substring(6);\n  }\n\n}\n\n    \n\n    \n        The phone number {{formattedPhone}} was successfully registered for The Rock Church's Transportation app.\nPlease Log In to access the app.\n\n\n    \n\n    \n                \n                    ./phone-confirmation.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'The phone number {{formattedPhone}} was successfully registered for The Rock Church\\'s Transportation app.Please Log In to access the app.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhoneConfirmationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PhoneVerificationDto.html":{"url":"interfaces/PhoneVerificationDto.html","title":"interface - PhoneVerificationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PhoneVerificationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/phone-verification.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PhoneVerificationDto {\n  code: string;\n  phoneNumber: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/auth/pages/auth/register/register.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                hide\n                            \n                            \n                                hideConfirm\n                            \n                            \n                                isUniqueEmail\n                            \n                            \n                                passwordMinLength\n                            \n                            \n                                phone\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                registerForm\n                            \n                            \n                                submitted\n                            \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEmailError\n                            \n                            \n                                getFirstNameError\n                            \n                            \n                                getLastNameError\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                passwordMatchValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/pages/auth/register/register.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getEmailError\n                        \n                    \n                \n            \n            \n                \ngetEmailError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/pages/auth/register/register.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     \"You must enter a value\" | \"Not a valid email\" | \"\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFirstNameError\n                        \n                    \n                \n            \n            \n                \ngetFirstNameError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/pages/auth/register/register.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         \"\" | \"First name is required\" | \"Name can only contain letters\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLastNameError\n                        \n                    \n                \n            \n            \n                \ngetLastNameError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/pages/auth/register/register.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         \"\" | \"Name can only contain letters\" | \"Last name is required\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/pages/auth/register/register.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(formGroup: FormGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/pages/auth/register/register.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formGroup\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/auth/register/register.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/auth/register/register.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideConfirm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/auth/register/register.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUniqueEmail\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/auth/register/register.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMinLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/auth/register/register.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/auth/register/register.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        register\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/auth/register/register.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/auth/register/register.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/auth/register/register.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/auth/register/register.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Injectable, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { IConfig } from 'ngx-mask';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core/authentication/authentication.service';\nimport { UserForRegistrationDto } from 'src/app/shared/models/user';\nimport { API_ACCOUNTS_REGISTRATION, ROUTING_VERIFY_PHONE } from 'src/app/app.constants';\nimport { Roles } from 'src/app/shared/models/roles';\n\nexport let options: Partial | (() => Partial);\n\n@Injectable({\n  providedIn:'root'\n})\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n    public registerForm: FormGroup;\n    validationErrors: string[] = [];\n    passwordMinLength = 3;\n    hide=true;\n    hideConfirm=true;\n    submitted=false;\n    isUniqueEmail=true;\n    phone = '';\n    error: boolean = false;\n\n  constructor(private authService: AuthenticationService,\n    private router: Router,\n    fb: FormBuilder) { \n        this.registerForm = fb.group({\n            'firstName':['', Validators.compose([Validators.maxLength(20), Validators.pattern('[a-zA-Z ]*'), Validators.required])],\n            'lastName':['', Validators.compose([Validators.maxLength(20), Validators.pattern('[a-zA-Z ]*'), Validators.required])],\n            'email':['', Validators.compose([Validators.email])],\n            'phone':['', Validators.compose([])],\n            'address1': ['', Validators.compose([Validators.required])],\n            'address2': [],\n            'city':['', Validators.compose([Validators.required])],\n            'zipCode':['', Validators.compose([Validators.required])],\n            'password':['', Validators.compose([Validators.minLength(3), Validators.required])],\n            'confirmPassword':['', Validators.compose([Validators.minLength(3), Validators.required])]\n        },{\n            // check whether or not our password and confirm password match\n            validator: this.passwordMatchValidator\n        })\n    }\n\n  ngOnInit(): void {\n  }\n\n  public register = (registerFormValue: any) => {\n\n    const formValues = { ...registerFormValue };\n    const user: UserForRegistrationDto = {\n      password: formValues.password,\n      confirmPassword: formValues.confirmPassword,\n      firstName: formValues.firstName.trim(),\n      lastName: formValues.lastName.trim(),\n      email: formValues.email !== '' ? formValues.email.trim() : null,\n      phone: formValues.phone,\n      address1: formValues.address1.trim(),\n      address2: formValues.address2 !== null ? formValues.address2.trim() : null,\n      city: formValues.city.trim(),\n      zipCode: formValues.zipCode.trim()\n    }\n\n    this.authService.registerUser(API_ACCOUNTS_REGISTRATION, user)\n      .subscribe(response => {\n        this.router.navigate([ROUTING_VERIFY_PHONE], {state: {data: user.phone}});\n      }, error => {\n        if (error.status == 403) {\n          this.router.navigate([ROUTING_VERIFY_PHONE], {state: {data: formValues.phone}});\n        }\n        this.validationErrors = error;\n      })\n  }\n\n  passwordMatchValidator(formGroup: FormGroup) {\n      const password: string = formGroup.get('password')?.value                 // get password from our password form control\n      const confirmPassword: string = formGroup.get('confirmPassword')?.value   // get password from our confirmPassword form control \n      // compare if the passwords match\n      if (password !== confirmPassword) {\n          formGroup.get('confirmPassword')?.setErrors({ NoPasswordMatch: true });\n      }\n  }\n\n  getEmailError() {\n      if (this.registerForm.controls['email'].hasError('required')) {\n          return 'You must enter a value';\n      }\n      return this.registerForm.controls['email'].hasError('email') ? 'Not a valid email' : '';\n  }\n\n  getFirstNameError() {\n    if (this.registerForm.controls['firstName'].hasError('required')) {\n      return 'First name is required';\n    }\n    return this.registerForm.controls['firstName'].hasError('pattern') ? 'Name can only contain letters' : '';\n  }\n\n  getLastNameError() {\n    if (this.registerForm.controls['lastName'].hasError('required')) {\n      return 'Last name is required';\n    }\n    return this.registerForm.controls['lastName'].hasError('pattern') ? 'Name can only contain letters' : '';\n  }\n\n}\n\n    \n\n    \n        \n    An unexpected error ocurred.\n    \n      \n        \n          \n  \n            \n              \n                First Name:\n                \n                {{getFirstNameError()}}\n              \n              \n                Last Name:\n                \n                {{getLastNameError()}}\n              \n            \n  \n            \n              \n                Email:\n                \n                mail\n                {{getEmailError()}}\n                This email is already in use\n              \n              \n                Phone:\n                \n                phone\n              \n            \n\n            \n\n              \n                Address 1:\n                \n              \n\n              \n                Address 2:\n                \n              \n\n              \n              \n                City:\n                \n              \n              \n                Zip Code:\n                \n              \n              \n              \n            \n  \n            \n              \n                Password:\n                \n                {{hide ? 'visibility_off' : 'visibility'}}\n                Password must be at least {{passwordMinLength}} characters\n              \n  \n              \n                Confirm Password:\n                \n                {{hideConfirm ? 'visibility_off' : 'visibility'}}\n                Passwords must match\n              \n            \n\n            \n              Register\n            \n\n          \n        \n      \n    \n  \n    \n\n    \n                \n                    ./register.component.scss\n                \n                .register-form\n{\n  width:90%;\n  margin: 0 auto;\n}\nbutton\n{\n  width:75%;\n}\n.w-one-third\n{\n  width: 33%;\n}\n.w-half\n{\n  width: 50%;\n}\nmat-form-field\n{\n  display: block;\n}\nmat-card-footer\n{\n  text-align:center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    An unexpected error ocurred.                                                                        First Name:                                {{getFirstNameError()}}                                            Last Name:                                {{getLastNameError()}}                                                                      Email:                                mail                {{getEmailError()}}                This email is already in use                                            Phone:                                phone                                                                    Address 1:                                                            Address 2:                                                                          City:                                                            Zip Code:                                                                                                                  Password:                                {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                Password must be at least {{passwordMinLength}} characters                                              Confirm Password:                                {{hideConfirm ? \\'visibility_off\\' : \\'visibility\\'}}                Passwords must match                                                    Register                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegistrationResponseDto.html":{"url":"interfaces/RegistrationResponseDto.html","title":"interface - RegistrationResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegistrationResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errors\n                                        \n                                \n                                \n                                        \n                                            isSuccessfulRegistration\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSuccessfulRegistration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isSuccessfulRegistration:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RegistrationResponseDto {\n    isSuccessfulRegistration: boolean;\n    errors: string[];\n}\n\nexport interface AuthResponseDto {\n  isAuthSuccessful: boolean;\n  accessToken: string;\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/auth/pages/password/reset-password/reset-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                styleUrls\n                ./reset-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Public\n                                hideConfirm\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                passwordForm\n                            \n                            \n                                    Public\n                                passwordMinLength\n                            \n                            \n                                    Private\n                                previousUrl\n                            \n                            \n                                    Private\n                                responseData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                passwordMatchValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, urlService: UrlService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/pages/password/reset-password/reset-password.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        urlService\n                                                  \n                                                        \n                                                                        UrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/pages/password/reset-password/reset-password.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(formGroup: FormGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/pages/password/reset-password/reset-password.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formGroup\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/password/reset-password/reset-password.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hideConfirm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/password/reset-password/reset-password.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/password/reset-password/reset-password.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        passwordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/password/reset-password/reset-password.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        passwordMinLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/password/reset-password/reset-password.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        previousUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/password/reset-password/reset-password.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        responseData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/password/reset-password/reset-password.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ROUTING_AUTH } from 'src/app/app.constants';\nimport { UrlService } from 'src/app/core/services/url.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n  public passwordForm: FormGroup | null = null;\n  public password: string | null = null;\n  public passwordMinLength = 3;\n  public hide: boolean = true;\n  public hideConfirm: boolean = true;\n  private responseData: string | null = null;\n  private previousUrl: string | null = null;\n\n  constructor(private router: Router,\n    private urlService: UrlService) { }\n\n  ngOnInit(): void {\n    this.responseData = history.state.data;\n    if (this.responseData == '' || this.responseData == null) \n      this.router.navigate([ROUTING_AUTH]); \n\n    this.passwordForm = new FormGroup({\n      password: new FormControl(\"\", [\n        Validators.required, \n        Validators.minLength(this.passwordMinLength)\n      ]),\n      confirmPassword: new FormControl(\"\", [\n        Validators.required,\n        Validators.minLength(this.passwordMinLength)\n      ])\n    })\n\n    // this.urlService.previousUrl$.subscribe((previousUrl: string | null) => {\n    //   this.previousUrl = previousUrl;\n    //   console.log(this.previousUrl);\n    // })\n  }\n\n  passwordMatchValidator(formGroup: FormGroup) {\n    const password: string = formGroup.get('password')?.value;\n    const confirmPassword: string = formGroup.get('confirmPassword')?.value\n\n    if (password!=confirmPassword) {\n      formGroup.get('confirmPassword')?.setErrors({ NoPasswordMatch: true });\n    }\n  }\n\n}\n\n    \n\n    \n        reset-password works!\n\n    \n\n    \n                \n                    ./reset-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'reset-password works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerErrorComponent.html":{"url":"components/ServerErrorComponent.html","title":"component - ServerErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ServerErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/errors/pages/server-error/server-error.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-server-error\n            \n\n            \n                styleUrls\n                ./server-error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./server-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/errors/pages/server-error/server-error.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/errors/pages/server-error/server-error.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/errors/pages/server-error/server-error.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.scss']\n})\nexport class ServerErrorComponent implements OnInit {\n  error: any;\n\n  constructor(private router: Router) { \n    const navigation = this.router.getCurrentNavigation();\n    this.error = navigation?.extras?.state?.error;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Internal server error - refreshing the page will make the error disappear!\n\n  Error: {{error.message}}\n  Note: If you are seeing this then Angular is probably not to blame\n  What to do next?\n  \n    Open the Chrome dev tools\n    Inspet the network tab\n    Examine the request URL - make sure it is correct\n    Reproduce the error in Postman - if we see the same response, then the issue is not with the Front End\n  \n  Following is the stack trace - this is where your investigation should start!\n  {{error.details}}\n\n\n    \n\n    \n                \n                    ./server-error.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Internal server error - refreshing the page will make the error disappear!  Error: {{error.message}}  Note: If you are seeing this then Angular is probably not to blame  What to do next?      Open the Chrome dev tools    Inspet the network tab    Examine the request URL - make sure it is correct    Reproduce the error in Postman - if we see the same response, then the issue is not with the Front End    Following is the stack trace - this is where your investigation should start!  {{error.details}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ServerErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Angular Material imports\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule } from '@angular/material/core'\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n// Angular CDK imports\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n// Toastr Notifications\nimport { ToastrModule } from 'ngx-toastr';\n\n// JWT \nimport { JwtModule } from '@auth0/angular-jwt';\nimport { ACCESS_TOKEN } from '../app.constants';\n\nexport function tokenGetter() {\n  return localStorage.getItem(ACCESS_TOKEN);\n}\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatProgressBarModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    FlexLayoutModule,\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right'\n    }),\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        allowedDomains: [\"localhost:5001\"],\n        disallowedRoutes: []\n      }\n    })\n  ],\n  exports: [\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatProgressBarModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    FlexLayoutModule,\n    ToastrModule\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UrlService.html":{"url":"injectables/UrlService.html","title":"injectable - UrlService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UrlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/url.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                previousUrl\n                            \n                            \n                                    Public\n                                previousUrl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setPreviousUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/url.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setPreviousUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPreviousUrl(previousUrl: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/url.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    previousUrl\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        previousUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/url.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        previousUrl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.previousUrl.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/url.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UrlService {\n  private previousUrl: BehaviorSubject = new BehaviorSubject(null);\n  public previousUrl$: Observable = this.previousUrl.asObservable();\n\n  constructor() {}\n\n  public setPreviousUrl(previousUrl: string | null) {\n    this.previousUrl.next(previousUrl);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserForAuthenticationDto.html":{"url":"interfaces/UserForAuthenticationDto.html","title":"interface - UserForAuthenticationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserForAuthenticationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserForRegistrationDto {\n  email: string | null;\n  password: string;\n  confirmPassword: string;\n  firstName: string;\n  lastName: string;\n  phone: string;\n  address1: string;\n  address2: string;\n  city: string;\n  zipCode: string;\n}\n\nexport interface UserForAuthenticationDto {\n  phone: string;\n  password: string;\n}\n\nexport interface UserForgotPasswordDto {\n  phone: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserForRegistrationDto.html":{"url":"interfaces/UserForRegistrationDto.html","title":"interface - UserForRegistrationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserForRegistrationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address1\n                                        \n                                \n                                \n                                        \n                                            address2\n                                        \n                                \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            confirmPassword\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                                \n                                        \n                                            zipCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address2:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zipCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserForRegistrationDto {\n  email: string | null;\n  password: string;\n  confirmPassword: string;\n  firstName: string;\n  lastName: string;\n  phone: string;\n  address1: string;\n  address2: string;\n  city: string;\n  zipCode: string;\n}\n\nexport interface UserForAuthenticationDto {\n  phone: string;\n  password: string;\n}\n\nexport interface UserForgotPasswordDto {\n  phone: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserForgotPasswordDto.html":{"url":"interfaces/UserForgotPasswordDto.html","title":"interface - UserForgotPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserForgotPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            phone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserForRegistrationDto {\n  email: string | null;\n  password: string;\n  confirmPassword: string;\n  firstName: string;\n  lastName: string;\n  phone: string;\n  address1: string;\n  address2: string;\n  city: string;\n  zipCode: string;\n}\n\nexport interface UserForAuthenticationDto {\n  phone: string;\n  password: string;\n}\n\nexport interface UserForgotPasswordDto {\n  phone: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VerifyPhoneComponent.html":{"url":"components/VerifyPhoneComponent.html","title":"component - VerifyPhoneComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VerifyPhoneComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/auth/pages/verify-phone/verify-phone.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-phone\n            \n\n            \n                styleUrls\n                ./verify-phone.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./verify-phone.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                codeLength\n                            \n                            \n                                    Private\n                                previousUrl\n                            \n                            \n                                    Private\n                                responseData\n                            \n                            \n                                validationErrors\n                            \n                            \n                                    Public\n                                verifyPhoneForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, urlService: UrlService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/pages/verify-phone/verify-phone.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        urlService\n                                                  \n                                                        \n                                                                        UrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/pages/verify-phone/verify-phone.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        verify\n                        \n                    \n                \n            \n            \n                \n                    \n                    verify()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/pages/verify-phone/verify-phone.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        codeLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/verify-phone/verify-phone.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        previousUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/verify-phone/verify-phone.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        responseData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/verify-phone/verify-phone.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/verify-phone/verify-phone.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        verifyPhoneForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/pages/verify-phone/verify-phone.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IConfig } from 'ngx-mask';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthenticationService } from 'src/app/core/authentication/authentication.service';\nimport { PhoneVerificationDto } from 'src/app/shared/models/phone-verification';\nimport { API_ACCOUNTS_VERIFICATION, API_ACCOUNTS_CONFIRM, ROUTING_AUTH, ROUTING_CONFIRM_PHONE, ROUTING_FORGOT_PASSWORD, ROUTING_RESET_PASSWORD } from 'src/app/app.constants';\nimport { UrlService } from 'src/app/core/services/url.service';\n\nexport let options: Partial | (() => Partial);\n\n@Component({\n  selector: 'app-confirm-phone',\n  templateUrl: './verify-phone.component.html',\n  styleUrls: ['./verify-phone.component.scss']\n})\nexport class VerifyPhoneComponent implements OnInit {\n  public verifyPhoneForm: FormGroup;\n  codeLength: number = 6;\n  validationErrors: string[] = [];\n  private responseData: string = '';\n  private previousUrl: string | null = null;\n\n  constructor(private authService: AuthenticationService,\n    private router: Router,\n    private urlService: UrlService,\n    fb: FormBuilder) { \n      this.verifyPhoneForm = fb.group ({\n        'verifyCode':['', Validators.compose([Validators.maxLength(this.codeLength), Validators.required])]\n      })\n    }\n\n  ngOnInit(): void {\n    this.responseData = history.state.data;\n    if (this.responseData == '' || this.responseData == undefined) \n      this.router.navigate([ROUTING_AUTH]); \n\n    this.urlService.previousUrl$.subscribe((previousUrl: string | null) => {\n      this.previousUrl = previousUrl;\n    })\n  }\n\n  public verify() {\n    const phoneVerificationDto: PhoneVerificationDto = {\n      code: this.verifyPhoneForm.value.verifyCode,\n      phoneNumber: this.responseData\n    }\n\n    let apiUrl = '';\n    let navigationUrl = '';\n    \n    if (this.previousUrl?.includes(ROUTING_AUTH)) {\n      apiUrl = API_ACCOUNTS_CONFIRM;\n      navigationUrl = ROUTING_CONFIRM_PHONE;\n    } else if (this.previousUrl?.includes(ROUTING_FORGOT_PASSWORD)) {\n      apiUrl = API_ACCOUNTS_VERIFICATION;\n      navigationUrl = ROUTING_RESET_PASSWORD;\n    }\n  \n    this.authService.verifyPhone(apiUrl, phoneVerificationDto)\n    .subscribe(() => {\n      this.router.navigate([navigationUrl], {state: {data: phoneVerificationDto.phoneNumber}});\n    }, error => {\n      console.log(error);\n      this.validationErrors = error;\n    })\n  }\n}\n\n    \n\n    \n        \n \n    \n      \n\n        \n          Phone Verification\n        \n        Please enter the verification code that was sent to you to confirm your phone number.\n        Your account registration will not be complete until your phone number has been verified.\n        \n          Verification Code:\n          \n          Your verification code is required\n        \n\n        \n          Verify\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./verify-phone.component.scss\n                \n                mat-card {\n  text-align:center;\n  max-width: 80%;\n  margin:5% auto;\n}\nmat-card-header {\n  display:block;\n}\n\nmat-card-footer {\n  margin: 0 auto 10px;\n}\n#phone-verification {\n  text-align:center;\n  letter-spacing: 18px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                             Phone Verification                Please enter the verification code that was sent to you to confirm your phone number.        Your account registration will not be complete until your phone number has been verified.                  Verification Code:                    Your verification code is required                          Verify                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VerifyPhoneComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            ACCESS_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            API_ACCOUNTS_CONFIRM\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            API_ACCOUNTS_FORGOT_PASSWORD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            API_ACCOUNTS_LOGIN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            API_ACCOUNTS_REGISTRATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            API_ACCOUNTS_VERIFICATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            API_TOKENS_REFRESH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            IDENTITY_ROLES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            NOT_FOUND\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            REFRESH_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            ROUTING_AUTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            ROUTING_CONFIRM_PHONE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            ROUTING_FORBIDDEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            ROUTING_FORGOT_PASSWORD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            ROUTING_MANAGE_TEMPLATES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            ROUTING_RESET_PASSWORD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            ROUTING_VERIFY_PHONE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            SERVER_ERROR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/core/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/header/nav.component.ts\n            \n            component\n            NavComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/environment-url.service.ts\n            \n            injectable\n            EnvironmentUrlService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/url.service.ts\n            \n            injectable\n            UrlService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/auth/pages/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/auth/pages/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/modules/auth/pages/auth/login/login.component.ts\n            \n            injectable\n            LoginComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/modules/auth/pages/auth/login/login.component.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/auth/pages/auth/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/modules/auth/pages/auth/register/register.component.ts\n            \n            injectable\n            RegisterComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/modules/auth/pages/auth/register/register.component.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/auth/pages/password/forgot-password/forgot-password.component.ts\n            \n            component\n            ForgotPasswordComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/modules/auth/pages/password/forgot-password/forgot-password.component.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/auth/pages/password/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/modules/auth/pages/phone-confirmation/phone-confirmation.component.ts\n            \n            component\n            PhoneConfirmationComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/auth/pages/verify-phone/verify-phone.component.ts\n            \n            component\n            VerifyPhoneComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/modules/auth/pages/verify-phone/verify-phone.component.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/church-services/manage-templates/manage-templates.component.ts\n            \n            component\n            ManageTemplatesComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/dashboard/pages/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/errors/pages/forbidden/forbidden.component.ts\n            \n            component\n            ForbiddenComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/errors/pages/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/errors/pages/server-error/server-error.component.ts\n            \n            component\n            ServerErrorComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/models/jwt-token.ts\n            \n            interface\n            JwtTokenDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/phone-verification.ts\n            \n            interface\n            PhoneVerificationDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/response.ts\n            \n            interface\n            AuthResponseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/models/response.ts\n            \n            interface\n            RegistrationResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/user.ts\n            \n            interface\n            UserForAuthenticationDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/user.ts\n            \n            interface\n            UserForgotPasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/user.ts\n            \n            interface\n            UserForRegistrationDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/shared/shared.module.ts\n            \n            function\n            tokenGetter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.0.3\n        \n            @angular/cdk : ^12.2.3\n        \n            @angular/common : ~13.0.2\n        \n            @angular/compiler : ~13.0.2\n        \n            @angular/core : ~13.0.2\n        \n            @angular/flex-layout : ^12.0.0-beta.34\n        \n            @angular/forms : ~13.0.2\n        \n            @angular/material : ^12.2.3\n        \n            @angular/platform-browser : ~13.0.2\n        \n            @angular/platform-browser-dynamic : ~13.0.2\n        \n            @angular/router : ~13.0.2\n        \n            @auth0/angular-jwt : ^5.0.2\n        \n            ngx-mask : ^12.0.0\n        \n            ngx-toastr : ^14.1.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Roles   (src/.../roles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/models/roles.ts\n    \n        \n            \n                \n                    \n                        \n                        Roles\n                    \n                \n                        \n                            \n                                 superAdmin\n                            \n                        \n                        \n                            \n                                Value : SuperAdmin\n                            \n                        \n                        \n                            \n                                 administrator\n                            \n                        \n                        \n                            \n                                Value : Administrator\n                            \n                        \n                        \n                            \n                                 driver\n                            \n                        \n                        \n                            \n                                Value : Driver\n                            \n                        \n                        \n                            \n                                 user\n                            \n                        \n                        \n                            \n                                Value : User\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            tokenGetter   (src/.../shared.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/shared.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tokenGetter\n                        \n                    \n                \n            \n            \n                \ntokenGetter()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTransportationClient\nThis project is the client side for The Rock's Transportation app. \nError Handling\nLogic for handling errors returned from the server can be found at core/interceptors/error.interceptor.ts.\nLogic for handling errors caught before leaving the client side can be found at core/guards/\nUsing Angular CLI\nThis project was generated with Angular CLI version 13.0.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAppModule -->\n\nAuthComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nForbiddenComponent\n\nForbiddenComponent\n\nAppModule -->\n\nForbiddenComponent->AppModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAppModule -->\n\nForgotPasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nManageTemplatesComponent\n\nManageTemplatesComponent\n\nAppModule -->\n\nManageTemplatesComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nPhoneConfirmationComponent\n\nPhoneConfirmationComponent\n\nAppModule -->\n\nPhoneConfirmationComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nServerErrorComponent\n\nServerErrorComponent\n\nAppModule -->\n\nServerErrorComponent->AppModule\n\n\n\n\n\nVerifyPhoneComponent\n\nVerifyPhoneComponent\n\nAppModule -->\n\nVerifyPhoneComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nUrlService\n\nUrlService\n\nAppModule -->\n\nUrlService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        11 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACCESS_TOKEN   (src/.../app.constants.ts)\n                        \n                        \n                            API_ACCOUNTS_CONFIRM   (src/.../app.constants.ts)\n                        \n                        \n                            API_ACCOUNTS_FORGOT_PASSWORD   (src/.../app.constants.ts)\n                        \n                        \n                            API_ACCOUNTS_LOGIN   (src/.../app.constants.ts)\n                        \n                        \n                            API_ACCOUNTS_REGISTRATION   (src/.../app.constants.ts)\n                        \n                        \n                            API_ACCOUNTS_VERIFICATION   (src/.../app.constants.ts)\n                        \n                        \n                            API_TOKENS_REFRESH   (src/.../app.constants.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            IDENTITY_ROLES   (src/.../app.constants.ts)\n                        \n                        \n                            NOT_FOUND   (src/.../app.constants.ts)\n                        \n                        \n                            options   (src/.../verify-phone.component.ts)\n                        \n                        \n                            options   (src/.../forgot-password.component.ts)\n                        \n                        \n                            options   (src/.../login.component.ts)\n                        \n                        \n                            options   (src/.../register.component.ts)\n                        \n                        \n                            REFRESH_TOKEN   (src/.../app.constants.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            ROUTING_AUTH   (src/.../app.constants.ts)\n                        \n                        \n                            ROUTING_CONFIRM_PHONE   (src/.../app.constants.ts)\n                        \n                        \n                            ROUTING_FORBIDDEN   (src/.../app.constants.ts)\n                        \n                        \n                            ROUTING_FORGOT_PASSWORD   (src/.../app.constants.ts)\n                        \n                        \n                            ROUTING_MANAGE_TEMPLATES   (src/.../app.constants.ts)\n                        \n                        \n                            ROUTING_RESET_PASSWORD   (src/.../app.constants.ts)\n                        \n                        \n                            ROUTING_VERIFY_PHONE   (src/.../app.constants.ts)\n                        \n                        \n                            SERVER_ERROR   (src/.../app.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ACCESS_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"accessToken\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        API_ACCOUNTS_CONFIRM\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"api/Accounts/PhoneConfirmation\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        API_ACCOUNTS_FORGOT_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"api/Accounts/ForgotPassword\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        API_ACCOUNTS_LOGIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"api/Accounts/Login\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        API_ACCOUNTS_REGISTRATION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"api/Accounts/Registration\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        API_ACCOUNTS_VERIFICATION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"api/Accounts/PhoneVerification\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        API_TOKENS_REFRESH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"api/Tokens/Refresh\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IDENTITY_ROLES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NOT_FOUND\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '404'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REFRESH_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"refreshToken\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROUTING_AUTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'auth'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROUTING_CONFIRM_PHONE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'phone-confirmation'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROUTING_FORBIDDEN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'forbidden'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROUTING_FORGOT_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'forgot-password'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROUTING_MANAGE_TEMPLATES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'manage-templates'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROUTING_RESET_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'reset-password'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROUTING_VERIFY_PHONE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'verify-phone'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SERVER_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'server-error'\n                    \n                \n\n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false, \n  apiUrl: \"https://localhost:5001\"\n}\n                    \n                \n\n\n        \n    \n\n    src/app/modules/auth/pages/verify-phone/verify-phone.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial | \n\n                    \n                \n\n\n        \n    \n\n    src/app/modules/auth/pages/password/forgot-password/forgot-password.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial | \n\n                    \n                \n\n\n        \n    \n\n    src/app/modules/auth/pages/auth/login/login.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial | \n\n                    \n                \n\n\n        \n    \n\n    src/app/modules/auth/pages/auth/register/register.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial | \n\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
