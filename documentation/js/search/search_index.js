var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AdminGuard.html",[0,2.611,1,2.354]],["body/guards/AdminGuard.html",[1,3.698,2,3.23,3,0.3,4,0.265,5,0.265,6,3.656,7,0.265,8,1.186,9,4.742,10,0.822,11,4.302,12,4.51,13,2.253,14,0.977,15,4.302,16,1.428,17,0.024,18,0.977,19,0.678,20,1.428,21,4.642,22,5.367,23,3.415,24,5.367,25,4.302,26,2.912,27,0.877,28,1.967,29,0.869,30,1.611,31,0.623,32,1.269,33,4.302,34,2.266,35,2.108,36,0.3,37,0.492,38,1.124,39,1.269,40,1.432,41,4.302,42,2.337,43,1.967,44,4.302,45,3.23,46,2.658,47,3.656,48,2.447,49,0.018,50,0.018]],["title/components/AppComponent.html",[51,0.302,52,0.855]],["body/components/AppComponent.html",[3,0.2,4,0.176,5,0.176,7,0.176,8,0.9,10,0.548,13,2.026,14,1.012,16,0.749,17,0.024,18,0.87,19,0.662,20,0.749,27,0.584,29,0.82,31,0.415,32,0.846,35,2.031,36,0.2,37,0.328,38,1.083,39,0.846,40,1.38,49,0.014,50,0.014,51,0.423,52,1.312,53,1.223,54,0.898,55,0.898,56,0.898,57,0.898,58,2.436,59,1.621,60,0.898,61,2.142,62,1.915,63,1.299,64,4.869,65,1.299,66,4.145,67,0.845,68,4.869,69,3.656,70,4.138,71,1.672,72,1.51,73,2.14,74,2.981,75,4.145,76,2.031,77,2.867,78,1.151,79,0.945,80,2.074,81,1.352,82,1.436,83,2.867,84,3.523,85,3.113,86,2.867,87,3.523,88,3.523,89,2.867,90,2.436,91,2.867,92,2.436,93,2.436,94,2.867,95,2.867,96,2.867,97,2.867,98,2.436,99,4.145,100,2.867,101,2.867,102,1.941,103,2.436,104,2.867,105,2.436,106,1.941,107,4.006,108,2.867,109,2.867,110,2.436,111,2.867,112,2.867,113,4.145,114,2.867,115,1.941,116,2.436,117,1.772,118,2.867,119,1.405,120,0.898,121,1.299,122,1.299,123,0.898,124,1.574,125,0.898,126,0.898,127,0.663,128,0.898,129,0.663,130,0.898,131,0.705,132,0.898,133,0.663,134,0.898,135,0.663,136,0.846,137,1.299,138,0.705,139,0.898,140,0.663,141,0.846,142,0.898,143,0.705,144,0.898,145,0.663,146,0.898,147,0.663,148,0.898,149,0.705,150,0.898,151,0.663,152,0.705,153,0.663,154,0.796,155,0.898,156,0.663,157,0.898,158,0.846,159,0.898,160,0.898]],["title/modules/AppModule.html",[161,2.611,162,2.354]],["body/modules/AppModule.html",[3,0.186,4,0.165,5,0.165,17,0.024,29,1.008,31,0.387,36,0.186,37,0.306,43,1.223,49,0.013,50,0.013,52,1.6,62,0.742,74,2.821,92,2.272,127,1.331,129,1.331,131,1.415,133,1.331,135,1.331,138,1.415,140,1.331,143,1.415,145,1.331,147,1.331,149,1.415,151,1.331,152,0.657,153,1.331,156,1.331,162,4.862,163,1.521,164,2.667,165,2.272,166,2.272,167,2.272,168,2.272,169,2.272,170,3.558,171,3.558,172,3.558,173,3.348,174,2.008,175,2.674,176,3.348,177,3.94,178,2.958,179,3.94,180,2.958,181,3.94,182,2.008,183,2.008,184,3.94,185,3.94,186,1.652,187,3.94,188,3.94,189,1.31,190,2.674,191,2.674,192,2.674,193,2.674,194,2.674,195,2.272,196,1.81,197,2.272,198,2.272,199,1.81,200,2.272,201,2.272,202,2.674,203,2.674,204,2.674,205,1.31,206,1.521,207,2.674,208,2.272,209,1.652,210,2.272,211,2.272,212,1.652,213,3.348,214,2.272,215,2.272,216,1.81,217,1.81,218,2.272,219,2.272,220,2.272,221,1.81,222,2.272,223,1.81,224,2.272,225,2.674,226,2.674,227,2.674,228,2.674]],["title/modules/AppRoutingModule.html",[161,2.611,170,2.149]],["body/modules/AppRoutingModule.html",[1,2.366,3,0.244,4,0.215,5,0.215,9,3.577,17,0.024,29,1.007,31,0.506,32,1.031,36,0.244,37,0.4,49,0.016,50,0.016,51,0.583,127,1.101,129,1.101,133,1.101,135,1.101,140,1.101,145,1.101,147,1.101,151,1.101,153,1.101,156,1.101,163,1.988,170,2.944,178,2.624,180,3.577,195,2.97,196,2.366,197,2.97,198,2.97,199,2.366,200,2.97,201,2.97,208,2.97,209,2.16,210,2.97,211,2.97,212,2.16,213,4.049,214,2.97,215,2.97,216,2.366,217,2.366,218,2.97,219,2.97,220,2.97,221,2.366,222,2.97,223,2.366,224,2.97,229,3.494,230,3.494,231,4.764,232,3.67,233,3.225,234,3.494,235,3.494,236,3.225,237,2.51,238,3.225,239,3.577,240,3.225,241,3.577,242,3.225,243,2.944,244,3.225,245,2.97,246,1.402,247,6.779,248,3.494,249,3.494,250,2.624,251,3.494,252,3.494,253,3.494,254,2.97]],["title/components/AuthComponent.html",[51,0.302,127,0.804]],["body/components/AuthComponent.html",[3,0.237,4,0.209,5,0.209,7,0.209,8,1.014,10,1.02,14,0.835,17,0.024,18,0.835,27,0.692,29,0.492,31,0.492,36,0.237,37,0.388,38,1.221,49,0.015,50,0.015,51,0.463,52,0.835,53,1.378,54,1.064,55,1.064,56,1.064,57,1.064,59,1.778,60,1.064,61,2.19,62,1.94,63,1.464,65,1.464,71,1.802,78,1.297,120,1.064,121,1.464,122,1.464,123,1.064,124,1.697,125,1.064,126,1.064,127,1.33,128,1.064,129,0.785,130,1.064,131,0.835,132,1.064,133,0.785,134,1.064,135,0.785,136,1.001,137,1.464,138,0.835,139,1.064,140,0.785,141,1.001,142,1.064,143,0.835,144,1.064,145,0.785,146,1.064,147,0.785,148,1.064,149,0.835,150,1.064,151,0.785,152,0.835,153,0.785,154,0.943,155,1.064,156,0.785,157,1.064,158,1.001,159,1.064,160,1.064,255,2.885,256,4.528,257,5.34,258,4.671,259,3.395,260,3.395,261,4.671,262,4.888,263,3.507,264,3.969,265,4.671,266,1.915,267,4.671,268,4.009,269,3.554,270,2.885,271,2.098,272,2.098,273,2.098,274,3.162,275,2.886,276,2.885,277,3.969,278,3.395]],["title/guards/AuthGuard.html",[0,2.611,233,2.354]],["body/guards/AuthGuard.html",[2,2.348,3,0.218,4,0.193,5,0.193,7,0.193,8,0.958,9,4.168,10,0.597,13,2.078,14,0.914,16,1.336,17,0.024,18,0.914,19,0.634,20,1.336,21,3.749,22,4.717,23,2.907,24,4.717,26,2.117,27,0.899,28,1.43,29,0.923,30,1.301,31,0.453,32,0.923,34,1.648,35,1.533,36,0.218,37,0.358,38,0.817,39,0.923,40,2.022,42,2.375,43,2.017,45,2.348,46,1.933,47,2.658,48,2.51,49,0.014,50,0.014,72,1.648,73,2.226,76,2.162,79,0.927,80,1.848,93,2.658,124,0.923,186,1.933,233,2.986,237,1.648,246,2.436,279,2.658,280,6.073,281,4.411,282,3.837,283,4.168,284,3.837,285,3.158,286,3.128,287,3.128,288,3.128,289,4.411,290,3.128,291,2.924,292,4.411,293,1.648,294,1.933,295,2.348,296,1.338,297,2.726,298,2.117,299,1.888,300,1.779,301,2.658,302,2.658,303,2.658,304,2.348,305,2.117,306,6.241,307,4.411,308,3.128,309,3.128,310,2.117,311,3.128,312,4.411,313,2.658,314,2.658,315,2.658,316,2.658,317,3.43,318,3.128,319,3.128,320,3.128,321,2.658,322,3.128,323,3.128,324,4.411,325,3.128,326,4.411,327,3.128,328,2.658,329,2.658,330,3.128]],["title/interfaces/AuthResponseDto.html",[300,1.978,331,0.966]],["body/interfaces/AuthResponseDto.html",[3,0.34,4,0.3,5,0.3,7,0.3,17,0.023,19,0.789,28,3.019,36,0.412,49,0.019,50,0.019,67,1.203,79,1.161,291,3.477,300,3.359,317,4.079,331,1.64,332,2.23,333,3.662,334,5.609,335,3.014,336,4.144,337,3.301]],["title/interfaces/AuthenticationDto.html",[331,0.966,338,1.59]],["body/interfaces/AuthenticationDto.html",[3,0.313,4,0.277,5,0.277,7,0.277,17,0.024,19,0.558,36,0.461,49,0.018,50,0.018,67,1.145,79,1.193,80,1.87,266,2.137,299,1.924,331,1.834,332,2.056,338,2.935,339,2.558,340,4.082,341,2.746,342,2.056,343,2.369,344,2.369,345,2.558,346,2.558,347,2.558,348,2.558,349,2.558,350,2.558,351,1.924,352,1.693,353,1.804,354,2.056,355,2.056]],["title/injectables/AuthenticationService.html",[30,1.026,73,1.395]],["body/injectables/AuthenticationService.html",[3,0.163,4,0.144,5,0.144,7,0.144,10,0.445,14,1.143,16,0.929,17,0.024,18,0.636,19,0.599,20,0.609,27,0.475,29,0.887,30,1.049,31,0.338,34,1.229,35,1.143,36,0.163,37,0.267,39,0.688,40,1.952,42,2.509,49,0.012,50,0.012,67,0.725,73,1.426,79,1.024,81,1.755,82,1.864,152,1.06,186,1.441,246,0.935,266,1.435,282,2.67,283,3.62,284,3.236,285,2.742,291,1.873,293,1.229,294,1.441,296,0.998,297,2.197,298,1.579,299,2.063,300,1.327,301,1.982,303,1.982,304,1.751,305,1.579,335,1.441,338,1.626,341,1.521,342,1.626,353,1.934,354,1.626,356,1.327,357,1.982,358,2.796,359,4.31,360,4.31,361,4.31,362,4.31,363,3.662,364,3.662,365,3.662,366,4.31,367,4.31,368,5.19,369,4.31,370,4.31,371,1.982,372,3.662,373,4.097,374,2.332,375,3.556,376,2.332,377,1.873,378,4.31,379,2.332,380,2.332,381,2.332,382,2.332,383,2.332,384,2.332,385,2.332,386,2.332,387,2.332,388,3.022,389,4.821,390,6.575,391,4.538,392,3.556,393,1.982,394,4.821,395,4.821,396,2.67,397,3.022,398,2.332,399,2.332,400,1.327,401,2.332,402,1.751,403,1.579,404,1.579,405,1.579,406,5.469,407,2.332,408,2.332,409,2.332,410,2.332,411,2.332,412,2.332,413,3.556,414,1.751,415,2.332,416,2.332,417,2.332]],["title/injectables/AuthorizationService.html",[12,2.354,30,1.026]],["body/injectables/AuthorizationService.html",[3,0.282,4,0.249,5,0.249,7,0.249,10,0.773,12,3.557,14,0.939,16,1.058,17,0.024,18,0.724,19,0.503,20,1.058,29,0.949,30,1.55,31,0.586,34,2.133,35,1.984,36,0.282,37,0.463,39,1.194,40,1.749,42,1.732,49,0.017,50,0.017,67,1.071,80,1.348,81,1.124,82,1.194,186,2.502,246,2.34,282,3.945,283,4.635,284,4.38,285,3.512,291,2.768,293,2.133,296,1.732,304,3.04,305,2.741,352,1.525,356,2.303,358,2.34,371,3.44,372,4.957,373,5.246,404,2.741,405,2.741,418,3.44,419,5.833,420,4.048,421,4.048,422,3.04,423,3.04,424,3.44,425,2.741,426,4.048,427,4.048,428,4.465,429,4.048,430,4.048,431,4.048]],["title/components/DashboardComponent.html",[51,0.302,129,0.804]],["body/components/DashboardComponent.html",[3,0.264,4,0.233,5,0.233,7,0.233,8,1.091,10,1.078,14,0.898,17,0.023,18,0.898,27,0.771,29,0.548,31,0.548,36,0.264,37,0.433,38,1.313,49,0.017,50,0.017,51,0.49,52,0.93,53,1.482,54,1.185,55,1.185,56,1.185,57,1.185,59,1.879,60,1.185,61,2.217,62,1.965,63,1.575,65,1.575,71,1.884,78,1.395,120,1.185,121,1.575,122,1.575,123,1.185,124,1.774,125,1.185,126,1.185,127,0.874,128,1.185,129,1.39,130,1.185,131,0.93,132,1.185,133,0.874,134,1.185,135,0.874,136,1.116,137,1.575,138,0.93,139,1.185,140,0.874,141,1.116,142,1.185,143,0.93,144,1.185,145,0.874,146,1.185,147,0.874,148,1.185,149,0.93,150,1.185,151,0.874,152,0.93,153,0.874,154,1.05,155,1.185,156,0.874,157,1.185,158,1.116,159,1.185,160,1.185,432,3.215,433,6.012,434,5.643,435,5.025,436,3.783,437,3.783,438,4.27]],["title/injectables/EnvironmentUrlService.html",[30,1.026,285,1.978]],["body/injectables/EnvironmentUrlService.html",[3,0.335,4,0.295,5,0.295,7,0.295,10,1.205,14,1.045,17,0.024,19,0.596,29,0.847,30,1.725,31,0.695,34,2.528,35,2.351,36,0.335,37,0.549,49,0.019,50,0.019,67,1.192,79,0.976,81,1.332,82,1.415,285,3.326,356,2.73,358,2.53,425,3.248,439,5.359,440,4.077,441,4.735,442,5.847,443,5.847,444,4.798]],["title/interceptors/ErrorInterceptor.html",[172,2.149,445,2.955]],["body/interceptors/ErrorInterceptor.html",[3,0.253,4,0.223,5,0.223,7,0.223,8,1.061,10,0.693,13,2.117,14,0.874,16,1.277,17,0.024,18,0.874,19,0.607,20,1.277,23,2.065,26,3.741,27,0.74,29,0.941,30,1.442,31,0.525,32,1.071,36,0.253,37,0.415,38,0.948,39,1.071,40,1.208,42,2.091,49,0.016,50,0.016,79,0.606,81,1.008,90,3.084,172,3.021,186,2.243,236,2.457,244,2.457,246,1.456,250,2.725,296,1.553,337,2.457,403,2.457,414,4.15,446,3.629,447,3.084,448,4.888,449,2.243,450,4.399,451,3.629,452,4.888,453,5.913,454,5.913,455,3.629,456,3.084,457,3.629,458,4.888,459,3.629,460,3.629,461,5.913,462,3.629,463,3.629,464,3.629,465,2.395,466,3.629,467,3.084,468,6.497,469,3.629,470,3.629,471,3.629,472,3.629,473,3.629,474,4.888,475,6.606,476,3.629,477,5.913,478,3.084,479,3.629,480,3.629,481,3.629,482,3.629,483,3.629,484,3.629,485,3.629,486,2.725,487,3.629,488,3.629,489,3.084,490,3.629]],["title/components/FooterComponent.html",[51,0.302,131,0.855]],["body/components/FooterComponent.html",[3,0.253,4,0.223,5,0.223,7,0.223,8,1.06,10,1.055,14,0.873,17,0.023,18,0.873,27,0.738,29,0.524,31,0.524,36,0.253,37,0.414,38,1.276,49,0.016,50,0.016,51,0.479,52,0.891,53,1.44,54,1.135,55,1.135,56,1.135,57,1.135,59,1.838,60,1.135,61,2.206,62,1.962,63,1.53,65,1.53,71,1.851,78,1.355,102,3.304,107,2.72,117,3.412,119,2.392,120,1.135,121,1.53,122,1.53,123,1.135,124,1.743,125,1.135,126,1.135,127,0.837,128,1.135,129,0.837,130,1.135,131,1.453,132,1.135,133,0.837,134,1.135,135,0.837,136,1.068,137,1.53,138,0.891,139,1.135,140,0.837,141,1.068,142,1.135,143,0.891,144,1.135,145,0.837,146,1.135,147,0.837,148,1.135,149,0.891,150,1.135,151,0.837,152,0.891,153,0.837,154,1.006,155,1.135,156,0.837,157,1.135,158,1.068,159,1.135,160,1.135,272,3.016,491,3.078,492,5.521,493,4.881,494,3.622,495,3.622,496,3.665,497,2.452,498,3.078,499,3.078,500,3.078,501,3.622,502,3.622,503,3.622]],["title/components/ForbiddenComponent.html",[51,0.302,133,0.804]],["body/components/ForbiddenComponent.html",[3,0.223,4,0.197,5,0.197,7,0.197,8,0.972,10,0.61,13,2.036,14,1.002,16,0.835,17,0.024,18,0.924,19,0.556,20,0.835,27,0.651,29,0.648,31,0.463,32,0.942,36,0.223,37,0.365,38,1.17,39,0.942,40,1.866,45,2.399,46,3.462,49,0.015,50,0.015,51,0.449,52,0.785,53,1.321,54,1.001,55,1.001,56,1.001,57,1.001,59,1.721,60,1.001,61,2.173,62,1.926,63,1.403,65,1.403,67,0.913,71,1.756,78,1.243,79,0.748,81,0.887,82,0.942,120,1.001,121,1.403,122,1.403,123,1.001,124,1.653,125,1.001,126,1.001,127,0.738,128,1.001,129,0.738,130,1.001,131,0.785,132,1.001,133,1.295,134,1.001,135,0.738,136,0.942,137,1.403,138,0.785,139,1.001,140,0.738,141,0.942,142,1.001,143,0.785,144,1.001,145,0.738,146,1.001,147,0.738,148,1.001,149,0.785,150,1.001,151,0.738,152,0.785,153,0.738,154,0.887,155,1.001,156,0.738,157,1.001,158,0.942,159,1.001,160,1.001,352,1.686,358,2.074,391,3.5,449,1.974,504,2.715,505,5.196,506,5.17,507,4.478,508,5.17,509,4.207,510,4.478,511,3.195,512,3.195,513,3.362,514,2.399,515,2.715,516,3.462,517,3.362,518,3.031,519,4.478,520,3.031,521,3.362,522,4.478]],["title/components/ForgotPasswordComponent.html",[51,0.302,135,0.804]],["body/components/ForgotPasswordComponent.html",[3,0.166,4,0.147,5,0.147,7,0.147,8,0.785,10,0.456,13,1.909,14,0.986,16,0.623,17,0.024,18,0.781,19,0.605,20,0.623,23,1.357,27,0.486,28,1.654,29,0.83,31,0.345,32,0.704,36,0.252,37,0.273,38,0.945,39,0.704,40,1.745,43,1.654,46,2.7,49,0.012,50,0.012,51,0.379,52,0.586,53,1.067,54,0.747,55,0.747,56,0.747,57,0.747,59,1.455,60,0.747,61,2.083,62,1.846,63,1.133,65,1.133,67,0.737,71,1.528,72,1.256,73,1.956,76,1.772,78,1.004,79,0.604,81,1.213,82,1.289,102,1.615,110,2.027,119,1.772,120,0.747,121,1.133,122,1.133,123,0.747,124,1.546,125,0.747,126,0.747,127,0.551,128,0.747,129,0.551,130,0.747,131,0.586,132,0.747,133,0.551,134,0.747,135,1.127,136,1.742,137,1.133,138,0.586,139,0.747,140,0.551,141,0.704,142,0.747,143,0.586,144,0.747,145,0.551,146,0.747,147,0.551,148,0.747,149,0.586,150,0.747,151,0.551,152,0.586,153,0.551,154,0.662,155,0.747,156,0.551,157,0.747,158,1.819,159,0.747,160,0.747,189,1.169,205,1.169,206,1.357,212,3.542,243,1.474,266,1.204,268,2.716,269,2.235,271,3.239,273,2.7,274,1.615,275,1.474,277,2.027,296,1.02,341,2.243,351,1.02,352,1.837,353,0.957,355,1.654,358,2.425,377,1.905,391,2.958,396,2.716,400,1.357,402,2.716,496,1.791,509,3.662,513,1.791,514,1.791,523,4.304,524,1.615,525,3.713,526,3.074,527,4.877,528,2.7,529,4.455,530,3.074,531,2.385,532,3.014,533,2.027,534,2.027,535,2.385,536,2.716,537,1.474,538,1.615,539,1.791,540,1.474,541,1.357,542,2.235,543,2.385,544,1.474,545,2.385,546,2.385,547,1.615,548,2.027,549,1.474,550,2.716,551,2.774,552,3.074,553,3.074,554,3.617,555,2.716,556,2.449,557,2.385,558,2.958,559,2.958,560,1.474,561,3.074,562,2.027,563,2.027,564,2.027,565,2.385,566,2.385,567,2.385,568,2.385,569,2.716,570,2.385]],["title/interfaces/JwtTokenDto.html",[297,2.149,331,0.966]],["body/interfaces/JwtTokenDto.html",[3,0.29,4,0.256,5,0.256,7,0.256,17,0.023,19,0.664,36,0.29,49,0.018,50,0.018,67,1.09,79,1.103,291,3.286,297,3.305,298,2.817,299,2.911,314,5.023,316,4.545,317,3.855,331,1.156,332,1.903,393,3.536,397,5.023,521,4.959,549,2.572,555,4.016,571,3.536,572,4.161,573,3.125,574,3.536,575,4.161,576,6.238,577,5.348,578,6.238,579,5.348,580,5.348,581,5.348,582,4.016,583,6.238,584,5.348,585,5.348,586,6.238,587,6.238,588,5.348,589,5.348,590,4.545,591,5.348]],["title/components/LoginComponent.html",[51,0.302,138,0.855]],["body/components/LoginComponent.html",[3,0.15,4,0.132,5,0.132,7,0.132,8,0.724,10,0.41,13,1.838,14,1.108,16,0.56,17,0.024,18,0.731,19,0.709,20,0.56,27,0.437,28,2.109,29,0.799,30,0.983,31,0.311,32,0.633,36,0.232,37,0.245,38,0.871,39,0.633,40,1.663,42,1.426,43,1.525,46,2.527,48,1.896,49,0.011,50,0.011,51,0.355,52,0.527,53,0.983,54,0.672,55,0.672,56,0.672,57,0.672,59,1.362,60,0.672,61,2.045,62,1.812,63,1.045,65,1.045,67,0.679,71,1.445,72,1.13,73,1.85,76,1.634,78,0.926,79,1.019,81,1.469,82,1.56,106,1.452,117,1.325,119,2.004,120,0.672,121,1.045,122,1.045,123,0.672,124,1.361,125,0.672,126,0.672,127,0.496,128,0.672,129,0.496,130,0.672,131,0.527,132,0.672,133,0.496,134,0.672,135,0.496,136,1.206,137,1.045,138,1.134,139,0.672,140,0.496,141,0.633,142,0.672,143,0.527,144,0.672,145,0.496,146,0.672,147,0.496,148,0.672,149,0.527,150,0.672,151,0.496,152,0.527,153,0.496,154,0.596,155,0.672,156,0.496,157,0.672,158,1.474,159,0.672,160,0.672,189,1.051,205,1.051,206,1.22,246,1.337,266,1.952,268,1.61,271,2.85,273,2.85,274,1.452,275,1.325,276,1.822,293,1.13,294,1.325,296,0.918,328,1.822,329,1.822,338,1.525,351,0.918,352,1.256,358,2.486,364,3.475,377,2.154,391,2.769,400,1.22,465,2.448,509,3.463,513,1.61,514,1.61,518,2.257,528,3.087,532,2.85,536,3.071,537,1.325,538,1.452,540,1.325,541,1.22,542,2.06,544,2.06,551,1.896,556,3.123,558,2.257,559,1.452,560,2.06,561,1.822,569,2.503,592,1.61,593,4.996,594,4.09,595,3.334,596,4.09,597,4.09,598,3.92,599,4.09,600,3.071,601,3.334,602,2.145,603,2.145,604,2.145,605,2.145,606,2.145,607,2.145,608,2.145,609,2.145,610,2.145,611,2.145,612,1.61,613,1.822,614,2.145,615,2.833,616,2.145,617,2.145,618,2.145,619,2.145,620,3.334,621,3.334,622,2.145,623,2.145,624,2.145,625,1.822,626,2.145,627,2.145,628,2.145,629,2.145,630,1.61,631,2.145,632,2.503,633,2.503,634,3.475,635,1.822,636,2.503,637,1.61,638,1.822,639,4.09]],["title/components/ManageTemplatesComponent.html",[51,0.302,140,0.804]],["body/components/ManageTemplatesComponent.html",[3,0.254,4,0.224,5,0.224,7,0.224,8,1.063,10,1.057,14,0.875,17,0.023,18,0.875,27,0.741,29,0.527,31,0.527,36,0.254,37,0.416,38,1.279,49,0.016,50,0.016,51,0.48,52,0.894,53,1.444,54,1.14,55,1.14,56,1.14,57,1.14,59,1.842,60,1.14,61,2.207,62,1.956,63,1.534,65,1.534,71,1.854,78,1.359,120,1.14,121,1.534,122,1.534,123,1.14,124,1.746,125,1.14,126,1.14,127,0.841,128,1.14,129,0.841,130,1.14,131,0.894,132,1.14,133,0.841,134,1.14,135,0.841,136,1.073,137,1.534,138,0.894,139,1.14,140,1.368,141,1.996,142,1.14,143,0.894,144,1.14,145,0.841,146,1.14,147,0.841,148,1.14,149,0.894,150,1.14,151,0.841,152,0.894,153,0.841,154,1.01,155,1.14,156,0.841,157,1.14,158,1.073,159,1.14,160,1.14,216,3.745,217,3.745,438,4.159,640,4.701,641,3.09,642,5.029,643,5.532,644,4.894,645,3.637,646,3.637]],["title/components/NavComponent.html",[51,0.302,143,0.855]],["body/components/NavComponent.html",[3,0.326,4,0.165,5,0.165,7,0.165,8,0.856,10,0.511,13,1.982,14,0.923,16,0.699,17,0.024,18,0.923,19,0.489,20,0.699,27,0.545,28,1.223,29,0.677,31,0.387,32,0.789,36,0.186,37,0.306,39,0.789,40,1.312,49,0.013,50,0.013,51,0.406,52,0.657,53,1.162,54,0.838,55,0.838,56,0.838,57,0.838,60,0.838,61,2.12,62,1.879,63,1.235,65,1.235,67,0.803,71,1.618,72,1.409,73,1.877,76,1.31,78,1.094,79,0.862,81,0.742,82,0.789,102,2.667,103,2.272,106,2.667,107,2.008,115,1.81,116,4.387,119,1.931,120,0.838,121,1.235,122,1.235,123,0.838,124,1.523,125,0.838,126,0.838,127,0.618,128,0.838,129,0.618,130,0.838,131,0.657,132,0.838,133,0.618,134,0.838,135,0.618,136,0.789,137,1.235,138,0.657,139,0.838,140,0.618,141,0.789,142,0.838,143,1.269,144,0.838,145,0.618,146,0.838,147,0.618,148,0.838,149,0.657,150,0.838,151,0.618,152,0.657,153,0.618,154,0.742,155,0.838,156,0.618,157,0.838,158,0.789,159,0.838,160,0.838,266,1.312,269,2.435,270,2.272,272,1.652,274,2.667,275,1.652,302,2.272,343,1.409,352,1.484,358,2.309,363,3.348,365,5.059,428,2.272,496,2.958,497,1.81,498,2.272,499,2.272,500,2.272,515,2.272,518,3.495,528,1.652,549,2.891,560,1.652,563,3.348,564,2.272,598,2.272,625,3.348,647,2.272,648,4.678,649,3.94,650,3.94,651,2.674,652,2.674,653,2.674,654,2.674,655,3.94,656,3.94,657,2.674,658,2.674,659,2.674,660,2.674,661,2.674,662,2.674,663,2.674,664,3.94,665,3.94,666,3.94,667,2.674,668,3.94,669,3.94,670,4.387,671,3.94,672,3.94,673,3.348,674,5.162,675,3.94,676,2.674,677,2.674,678,2.674,679,3.94,680,2.674,681,2.674,682,2.674,683,2.674,684,2.674,685,2.674]],["title/components/NotFoundComponent.html",[51,0.302,145,0.804]],["body/components/NotFoundComponent.html",[3,0.257,4,0.227,5,0.227,7,0.227,8,1.073,10,1.064,14,0.883,17,0.023,18,0.883,27,0.752,29,0.534,31,0.534,36,0.257,37,0.422,38,1.292,42,2.114,49,0.016,50,0.016,51,0.484,52,0.907,53,1.458,54,1.156,55,1.156,56,1.156,57,1.156,59,1.856,60,1.156,61,2.211,62,1.959,63,1.549,65,1.549,71,1.865,78,1.372,120,1.156,121,1.549,122,1.549,123,1.156,124,1.756,125,1.156,126,1.156,127,0.853,128,1.156,129,0.853,130,1.156,131,0.907,132,1.156,133,0.853,134,1.156,135,0.853,136,1.088,137,1.549,138,0.907,139,1.156,140,0.853,141,1.088,142,1.156,143,0.907,144,1.156,145,1.376,146,1.156,147,0.853,148,1.156,149,0.907,150,1.156,151,0.853,152,0.907,153,0.853,154,1.024,155,1.156,156,0.853,157,1.156,158,1.088,159,1.156,160,1.156,196,3.773,516,3.054,686,4.736,687,3.135,688,5.058,689,5.573,690,4.942,691,3.689,692,3.689,693,4.942]],["title/injectables/NotificationService.html",[30,1.026,450,2.354]],["body/injectables/NotificationService.html",[3,0.26,4,0.229,5,0.229,7,0.229,8,1.081,10,0.712,14,1.113,16,1.628,17,0.024,18,1.113,19,0.773,20,1.628,27,1.218,29,0.721,30,1.468,31,0.54,34,1.964,35,1.827,36,0.26,37,0.426,39,1.1,49,0.016,50,0.016,70,5.982,78,1.66,79,1.199,81,1.035,82,1.1,205,1.827,356,2.121,450,3.369,694,3.168,695,4.976,696,4.976,697,4.976,698,4.976,699,3.728,700,5.977,701,3.728,702,4.206,703,4.976,704,3.728,705,3.728,706,4.976,707,3.728,708,5.602,709,4.976,710,3.728,711,4.976,712,3.728,713,3.728,714,3.728,715,3.728,716,3.728]],["title/components/PhoneConfirmationComponent.html",[51,0.302,147,0.804]],["body/components/PhoneConfirmationComponent.html",[3,0.21,4,0.186,5,0.186,7,0.186,8,0.934,10,0.576,13,1.998,14,0.976,16,0.788,17,0.024,18,0.896,19,0.622,20,0.788,27,0.615,29,0.725,31,0.437,32,0.89,36,0.21,37,0.345,38,1.124,39,0.89,49,0.014,50,0.014,51,0.435,52,0.742,53,1.268,54,0.945,55,0.945,56,0.945,57,0.945,59,1.668,60,0.945,61,2.157,62,1.935,63,1.347,65,1.347,67,0.876,71,1.711,78,1.194,79,0.912,80,1.819,81,1.194,82,1.268,84,3.654,85,3.229,120,0.945,121,1.347,122,1.347,123,0.945,124,1.611,125,0.945,126,0.945,127,0.697,128,0.945,129,0.697,130,0.945,131,0.742,132,0.945,133,0.697,134,0.945,135,0.697,136,0.89,137,1.347,138,0.742,139,0.945,140,0.697,141,0.89,142,0.945,143,0.742,144,0.945,145,0.697,146,0.945,147,1.262,148,0.945,149,0.742,150,0.945,151,0.697,152,0.742,153,0.697,154,0.838,155,0.945,156,0.697,157,0.945,158,1.863,159,0.945,160,0.945,223,3.909,237,1.589,262,3.654,263,3.229,296,1.291,310,2.042,352,1.136,449,1.864,517,2.265,518,2.911,521,3.229,551,2.446,717,4.906,718,2.564,719,3.654,720,5.01,721,4.3,722,5.773,723,5.01,724,4.3,725,3.017,726,3.017,727,5.01,728,2.265,729,3.017,730,3.017,731,2.042,732,3.017,733,2.564,734,3.017,735,3.017,736,3.017,737,3.017]],["title/interfaces/PhoneNumberDto.html",[331,0.966,341,1.488]],["body/interfaces/PhoneNumberDto.html",[3,0.309,4,0.273,5,0.273,7,0.273,17,0.024,19,0.55,36,0.458,49,0.018,50,0.018,67,1.134,79,1.191,80,2.125,266,1.475,299,1.895,331,1.826,332,2.026,338,2.783,339,2.52,340,3.945,341,2.731,342,2.026,343,2.333,344,2.333,345,2.52,346,2.52,347,2.52,348,2.52,349,2.52,350,2.52,351,2.731,352,2.292,353,1.777,354,2.026,355,2.026]],["title/interfaces/PhoneVerificationDto.html",[331,0.966,354,1.59]],["body/interfaces/PhoneVerificationDto.html",[3,0.313,4,0.277,5,0.277,7,0.277,17,0.024,19,0.558,36,0.461,49,0.018,50,0.018,67,1.145,79,1.193,80,1.87,266,1.497,299,1.924,331,1.834,332,2.056,338,2.802,339,2.558,340,4.082,341,2.746,342,2.056,343,2.369,344,2.369,345,2.558,346,2.558,347,2.558,348,2.558,349,2.558,350,2.558,351,1.924,352,1.693,353,1.804,354,2.569,355,2.935]],["title/components/RegisterComponent.html",[51,0.302,149,0.855]],["body/components/RegisterComponent.html",[3,0.117,4,0.103,5,0.103,7,0.103,8,0.596,10,0.321,13,1.668,14,1.1,16,0.717,17,0.024,18,1.1,19,0.622,20,0.717,23,1.56,27,0.902,28,1.254,29,0.757,30,0.809,31,0.243,32,0.495,36,0.191,37,0.192,38,0.717,39,0.495,40,0.559,42,2.032,43,1.836,48,1.978,49,0.009,50,0.009,51,0.302,52,0.413,53,0.809,54,0.526,55,0.526,56,0.526,57,0.526,59,1.158,60,0.526,61,1.949,62,1.727,63,0.86,65,0.86,67,0.559,71,1.258,72,0.885,73,1.61,76,1.344,78,0.966,79,0.739,80,1.158,81,1.501,82,1.68,106,1.137,115,1.857,117,1.038,119,0.823,120,0.526,121,0.86,122,0.86,123,0.526,124,1.184,125,0.526,126,0.526,127,0.388,128,0.526,129,0.388,130,0.526,131,0.413,132,0.526,133,0.388,134,0.526,135,0.388,136,0.495,137,0.86,138,0.413,139,0.526,140,0.388,141,0.495,142,0.526,143,0.413,144,0.526,145,0.388,146,0.526,147,0.388,148,0.526,149,0.987,150,0.526,151,0.388,152,0.413,153,0.388,154,0.466,155,0.526,156,0.388,157,1.258,158,1.305,159,0.526,160,0.526,189,0.823,205,0.823,206,0.955,243,1.038,246,1.61,266,2.025,269,1.695,271,1.038,272,1.695,273,1.038,296,0.719,342,1.254,343,2.753,344,2.331,345,1.56,346,1.56,347,1.56,348,1.56,349,2.284,350,1.56,351,1.893,355,1.254,358,1.905,400,0.955,423,1.261,424,1.427,465,2.455,467,1.427,478,1.427,486,2.06,520,2.354,528,2.481,532,3.096,537,1.038,538,1.137,540,1.038,541,0.955,542,1.695,544,2.481,547,1.137,548,2.331,549,1.695,550,2.06,551,0.955,556,2.718,558,1.857,559,1.137,560,1.038,590,2.331,600,2.611,613,1.427,630,1.261,632,3.014,633,3.014,634,3.411,635,1.427,636,1.261,637,1.261,638,1.427,670,4.441,731,1.857,738,1.261,739,3.477,740,2.743,741,3.411,742,2.743,743,3.76,744,3.477,745,2.743,746,4.748,747,4.748,748,4.748,749,2.743,750,2.955,751,3.411,752,2.743,753,1.679,754,1.679,755,3.411,756,4.014,757,4.014,758,1.679,759,4.014,760,1.679,761,2.743,762,1.679,763,1.679,764,1.679,765,1.679,766,1.679,767,1.679,768,1.679,769,1.679,770,1.679,771,1.679,772,1.261,773,1.679,774,1.679,775,1.679,776,1.679,777,1.679,778,1.427,779,2.743,780,2.743,781,2.743,782,2.743,783,1.679,784,1.679,785,3.477,786,2.743,787,1.427,788,1.679,789,3.014,790,1.679,791,1.679,792,2.743,793,2.743,794,1.679,795,1.679,796,1.679,797,1.679,798,1.679,799,1.679,800,1.679,801,1.679,802,1.679,803,1.679,804,1.679,805,1.679,806,1.679,807,1.679,808,2.331,809,1.679,810,1.679,811,2.955,812,1.679,813,1.679,814,1.679,815,1.679,816,1.679,817,1.679,818,1.679,819,1.679,820,2.331,821,2.743,822,2.743,823,2.331,824,4.014,825,2.743,826,2.331,827,1.679,828,1.679,829,2.743,830,1.679,831,1.679,832,1.679,833,1.679,834,1.679]],["title/interfaces/RegistrationResponseDto.html",[331,0.966,335,2.149]],["body/interfaces/RegistrationResponseDto.html",[3,0.347,4,0.306,5,0.306,7,0.306,17,0.023,19,0.742,28,3.038,36,0.416,49,0.02,50,0.02,67,1.217,79,1.135,291,2.619,300,2.828,317,3.072,331,1.659,332,2.273,333,3.733,334,4.225,335,3.692,336,5.646,337,4.498]],["title/components/ResetPasswordComponent.html",[51,0.302,151,0.804]],["body/components/ResetPasswordComponent.html",[3,0.154,4,0.136,5,0.136,7,0.136,8,0.741,10,0.422,13,1.783,14,1.08,16,0.578,17,0.024,18,0.745,19,0.716,20,0.578,27,0.451,28,2.449,29,0.835,31,0.32,32,0.652,36,0.154,37,0.253,38,0.892,39,0.652,40,1.561,43,2.144,48,1.942,49,0.011,50,0.011,51,0.362,52,0.544,53,1.007,54,0.693,55,0.693,56,0.693,57,0.693,59,1.388,60,0.693,61,2.056,62,1.822,63,1.07,65,1.07,67,0.696,71,1.469,73,1.881,74,1.083,76,2.043,78,0.948,79,0.783,80,2.012,81,1.55,82,1.646,120,0.693,121,1.07,122,1.07,123,0.693,124,1.383,125,0.693,126,0.693,127,0.511,128,0.693,129,0.511,130,0.693,131,0.544,132,0.693,133,0.511,134,0.693,135,0.511,136,0.652,137,1.07,138,0.544,139,0.693,140,0.511,141,0.652,142,0.693,143,0.544,144,0.693,145,0.511,146,0.693,147,0.511,148,0.693,149,0.544,150,0.693,151,1.084,152,1.417,153,0.511,154,0.614,155,0.693,156,0.511,157,1.306,158,0.652,159,0.693,160,0.693,189,1.083,221,4.163,237,1.165,246,1.369,266,2.105,296,0.946,299,0.946,310,1.497,344,1.798,351,0.946,353,1.881,358,2.695,377,2.196,400,1.258,449,1.366,465,2.483,486,2.563,524,1.497,525,3.543,526,2.901,528,3.131,529,4.306,530,1.879,532,2.897,533,1.879,534,1.879,536,3.13,537,2.109,540,1.366,544,2.109,547,1.497,551,1.258,632,3.52,633,3.52,728,1.66,731,2.311,741,4.306,743,4.306,789,2.563,811,2.901,820,2.901,826,2.901,835,5.226,836,4.169,837,3.543,838,3.413,839,2.211,840,2.211,841,2.211,842,2.211,843,2.211,844,1.66,845,1.879,846,1.497,847,2.211,848,4.306,849,2.211,850,2.211,851,2.211,852,3.413,853,2.211,854,2.211,855,2.211,856,2.211]],["title/interfaces/ResetPasswordDto.html",[331,0.966,353,1.395]],["body/interfaces/ResetPasswordDto.html",[3,0.313,4,0.277,5,0.277,7,0.277,17,0.024,19,0.558,36,0.461,49,0.018,50,0.018,67,1.145,79,1.193,80,1.87,266,1.497,299,2.746,331,1.834,332,2.056,338,2.935,339,2.558,340,4.082,341,2.621,342,2.056,343,2.369,344,2.369,345,2.558,346,2.558,347,2.558,348,2.558,349,2.558,350,2.558,351,1.924,352,1.693,353,2.253,354,2.056,355,2.056]],["title/components/ServerErrorComponent.html",[51,0.302,153,0.804]],["body/components/ServerErrorComponent.html",[3,0.206,4,0.182,5,0.182,7,0.182,8,0.922,10,0.566,13,1.986,14,0.887,16,0.774,17,0.023,18,0.887,19,0.527,20,0.774,26,2.873,27,0.604,29,0.614,31,0.429,32,0.874,36,0.206,37,0.339,38,1.109,39,0.874,49,0.014,50,0.014,51,0.43,52,0.728,53,1.252,54,0.928,55,0.928,56,0.928,57,0.928,59,1.651,60,0.928,61,2.152,62,1.907,63,1.33,65,1.33,67,0.865,71,1.697,78,1.178,120,0.928,121,1.33,122,1.33,123,0.928,124,1.598,125,0.928,126,0.928,127,0.685,128,0.928,129,0.685,130,0.928,131,0.728,132,0.928,133,0.685,134,0.928,135,0.685,136,0.874,137,1.33,138,0.728,139,0.928,140,0.685,141,0.874,142,0.928,143,0.728,144,0.928,145,0.685,146,0.928,147,0.685,148,0.928,149,0.728,150,0.928,151,0.685,152,0.728,153,1.252,154,1.803,155,0.928,156,0.685,157,0.928,158,0.874,159,0.928,160,0.928,199,3.667,246,1.188,264,3.606,313,3.606,321,3.606,449,1.83,456,3.606,465,3.281,497,2.873,516,2.623,552,4.603,553,3.606,857,4.603,858,2.517,859,4.959,860,4.244,861,4.244,862,2.962,863,2.962,864,2.962,865,2.962,866,2.962,867,4.244,868,4.244,869,4.244,870,4.244,871,4.244,872,3.187,873,4.244,874,4.244,875,4.244,876,4.244,877,3.606,878,4.244,879,4.244,880,4.244,881,4.244,882,4.244,883,3.606,884,4.244,885,4.244,886,4.244,887,4.244,888,4.244,889,4.244,890,4.244,891,4.244,892,4.244,893,4.244,894,4.244,895,4.244]],["title/modules/SharedModule.html",[161,2.611,171,2.149]],["body/modules/SharedModule.html",[3,0.227,4,0.2,5,0.2,17,0.024,29,1.03,31,0.471,36,0.316,37,0.372,42,1.392,49,0.015,50,0.015,163,1.85,171,2.802,176,2.764,178,3.92,180,3.405,182,2.442,205,1.594,245,2.764,254,2.764,293,1.714,305,2.202,404,2.202,405,3.07,637,2.442,702,3.405,872,3.405,896,2.442,897,4.534,898,2.764,899,3.253,900,5.22,901,3.253,902,5.22,903,4.534,904,5.22,905,3.253,906,5.22,907,3.253,908,5.22,909,3.253,910,5.22,911,3.253,912,5.22,913,3.253,914,5.22,915,3.253,916,3.253,917,5.22,918,3.253,919,5.22,920,3.253,921,5.22,922,3.253,923,5.22,924,3.253,925,5.22,926,3.253,927,5.22,928,3.253,929,3.253,930,5.22,931,3.253,932,5.22,933,3.253,934,5.22,935,3.253,936,5.22,937,3.253,938,5.22,939,3.253,940,3.253,941,5.22,942,2.764,943,2.764,944,3.253,945,4.534,946,3.253,947,2.764,948,3.92,949,3.253,950,3.253,951,3.253,952,3.253,953,3.253,954,3.253,955,3.253,956,3.253,957,3.253,958,3.253]],["title/injectables/UrlService.html",[30,1.026,74,1.704]],["body/injectables/UrlService.html",[3,0.291,4,0.257,5,0.257,7,0.257,8,1.163,10,1.13,13,1.389,14,1.116,16,1.09,17,0.024,18,0.746,19,0.735,20,1.09,27,0.85,29,0.857,30,1.58,31,0.604,32,1.23,34,2.197,35,2.044,36,0.291,37,0.477,40,1.97,49,0.018,50,0.018,67,1.092,69,5.046,74,2.625,78,1.158,79,0.988,80,1.97,81,1.487,82,1.58,87,3.545,88,3.545,356,2.373,358,2.651,377,2.822,403,2.824,414,4.443,959,3.545,960,5.356,961,5.356,962,5.356,963,4.171,964,5.917,965,5.356,966,4.171,967,5.356,968,4.171]],["title/interfaces/UserForRegistrationDto.html",[331,0.966,342,1.59]],["body/interfaces/UserForRegistrationDto.html",[3,0.277,4,0.244,5,0.244,7,0.244,17,0.024,19,0.836,36,0.443,49,0.017,50,0.017,67,1.057,79,1.211,80,2.04,266,1.321,299,1.698,331,1.765,332,1.814,338,2.801,339,2.257,340,3.928,341,2.472,342,2.371,343,3.227,344,3.227,345,3.485,346,3.485,347,3.485,348,3.485,349,3.485,350,3.485,351,1.698,352,1.494,353,1.591,354,1.814,355,1.814]],["title/classes/Validation.html",[37,0.398,846,2.354]],["body/classes/Validation.html",[3,0.298,4,0.264,5,0.264,7,0.264,8,1.183,14,0.765,16,1.119,17,0.024,18,0.765,19,0.532,20,1.119,27,0.872,29,0.62,36,0.298,37,0.49,42,2.785,43,2.491,49,0.018,50,0.021,79,1.111,80,2.167,81,1.189,189,2.098,246,2.185,615,3.638,789,4.089,808,4.628,846,3.687,969,4.281,970,3.638,971,5.99,972,5.446,973,5.99,974,4.281,975,5.99,976,5.446,977,4.281,978,4.281,979,5.446,980,4.281,981,4.281,982,4.281,983,4.281,984,4.281,985,4.281]],["title/components/VerifyPhoneComponent.html",[51,0.302,156,0.804]],["body/components/VerifyPhoneComponent.html",[3,0.136,4,0.12,5,0.12,7,0.12,8,0.673,10,0.373,13,1.775,14,1.018,16,0.511,17,0.024,18,0.689,19,0.662,20,0.511,23,1.112,27,0.632,29,0.8,31,0.283,32,0.577,36,0.216,37,0.224,38,0.81,39,0.577,40,1.982,49,0.01,50,0.01,51,0.334,52,0.481,53,0.914,54,0.613,55,0.613,56,0.613,57,0.613,59,1.283,60,0.613,61,2.01,62,1.781,63,0.971,65,0.971,67,0.632,69,3.291,71,1.374,72,1.03,73,1.758,74,2.611,76,1.519,78,1.07,79,0.89,80,2.016,81,1.217,82,1.293,98,2.634,117,1.208,119,0.958,120,0.613,121,0.971,122,0.971,123,0.613,124,1.293,125,0.613,126,0.613,127,0.452,128,0.613,129,0.452,130,0.613,131,0.481,132,0.613,133,0.452,134,0.613,135,0.452,136,0.914,137,0.971,138,0.481,139,0.613,140,0.452,141,0.577,142,0.613,143,0.481,144,0.613,145,0.452,146,0.613,147,0.452,148,0.613,149,0.481,150,0.613,151,0.452,152,0.762,153,0.452,154,0.543,155,0.613,156,1.013,157,1.594,158,1.786,159,0.613,160,0.613,189,0.958,205,0.958,206,1.112,209,3.605,237,1.03,238,2.098,240,1.323,242,2.098,246,0.784,256,1.468,263,1.468,266,1.032,269,1.208,271,1.208,273,1.916,275,1.208,296,0.836,299,0.836,310,1.323,341,1.648,351,2.045,352,1.451,353,1.545,354,2.005,355,2.528,358,2.04,388,1.661,396,2.327,400,1.112,402,4.275,441,2.892,465,1.519,489,1.661,516,2.709,517,2.327,520,1.323,532,2.38,537,1.208,538,1.323,540,1.208,541,1.112,542,1.916,544,1.208,547,1.323,549,1.208,550,2.327,551,3.032,555,2.327,556,2.098,558,2.608,559,2.608,560,1.916,562,1.661,569,1.468,573,1.468,574,1.661,582,4.674,600,2.892,630,1.468,636,2.327,728,1.468,733,2.634,750,3.273,751,3.725,778,1.661,837,3.273,845,1.661,848,3.273,883,1.661,986,4.38,987,1.468,988,3.852,989,3.1,990,3.852,991,3.852,992,3.1,993,1.955,994,1.955,995,1.955,996,1.955,997,1.955,998,1.955,999,1.955,1000,2.327,1001,2.327,1002,1.955,1003,1.955,1004,1.955,1005,1.955,1006,3.1,1007,1.955,1008,1.955,1009,1.955,1010,3.852,1011,1.955,1012,1.955,1013,1.955,1014,3.1,1015,1.955,1016,1.661,1017,1.955,1018,1.955,1019,1.955,1020,1.955,1021,1.955,1022,1.955,1023,3.1,1024,3.1,1025,3.1,1026,3.1,1027,1.955,1028,1.955,1029,1.955,1030,1.955,1031,1.955,1032,1.955]],["title/coverage.html",[1033,4.035]],["body/coverage.html",[0,2.804,1,1.684,5,0.153,6,2.114,12,1.684,17,0.024,19,0.309,30,1.715,37,0.284,49,0.012,50,0.012,51,0.573,52,0.612,58,2.114,73,0.998,74,1.219,105,2.114,119,3.548,127,0.575,129,0.575,131,0.612,133,0.575,135,0.575,138,0.918,140,0.575,143,0.612,145,0.575,147,0.575,149,0.918,151,0.575,153,0.575,156,0.575,172,1.537,196,1.684,199,1.684,209,2.308,212,2.308,216,1.684,217,1.684,221,1.684,223,1.684,233,1.684,236,1.684,237,1.311,238,1.684,239,1.868,240,1.684,241,1.868,242,1.684,243,1.537,244,1.684,255,2.114,279,2.114,285,1.415,293,1.311,294,1.537,295,1.868,297,1.537,298,1.684,300,1.415,331,1.661,333,2.804,335,1.537,338,1.138,339,3.037,341,1.064,342,1.138,353,0.998,354,1.138,357,2.114,377,1.311,418,2.114,422,1.868,425,2.528,432,2.114,439,2.114,440,2.114,445,2.114,447,2.114,450,1.684,491,2.114,504,2.114,523,2.804,524,3.035,539,1.868,541,2.834,571,2.114,592,3.366,612,1.868,640,2.114,641,2.114,647,2.114,686,2.114,687,2.114,694,2.114,717,2.114,718,2.114,738,3.366,772,1.868,835,2.114,844,1.868,846,1.684,857,2.114,858,2.114,896,1.868,947,2.114,948,1.868,959,2.114,970,2.114,986,2.804,987,2.804,1000,1.868,1001,1.868,1033,2.114,1034,2.488,1035,2.488,1036,2.488,1037,3.734,1038,5.751,1039,6.965,1040,6.982,1041,2.114,1042,2.488,1043,6.232,1044,4.483,1045,4.982,1046,3.734,1047,3.734,1048,2.488,1049,2.488,1050,2.488,1051,5.339,1052,2.488,1053,2.488,1054,2.114,1055,2.114,1056,3.173,1057,2.114,1058,2.114,1059,2.488,1060,2.488]],["title/dependencies.html",[164,2.832,1061,2.467]],["body/dependencies.html",[17,0.024,31,0.687,32,1.4,49,0.019,50,0.019,164,3.214,182,4.362,183,4.362,189,2.326,205,2.846,206,2.701,403,3.214,404,3.214,405,3.214,702,3.565,898,4.034,942,4.034,943,4.034,1062,4.747,1063,4.034,1064,4.747,1065,5.809,1066,6.914,1067,4.747,1068,5.809,1069,4.747,1070,4.747,1071,4.747,1072,4.747,1073,4.747,1074,4.747,1075,4.747,1076,4.747,1077,4.747,1078,4.747]],["title/miscellaneous/enumerations.html",[1079,1.652,1080,3.555]],["body/miscellaneous/enumerations.html",[7,0.324,17,0.023,49,0.02,50,0.02,82,1.997,423,4.641,520,4.184,1079,2.995,1080,4.474,1081,5.264,1082,5.264,1083,6.18,1084,6.18,1085,6.18]],["title/miscellaneous/functions.html",[1079,1.652,1086,3.555]],["body/miscellaneous/functions.html",[7,0.339,17,0.021,49,0.021,50,0.021,896,4.136,948,5.019,1079,3.133,1086,4.68,1087,5.508]],["title/index.html",[7,0.179,1088,2.903,1089,2.903]],["body/index.html",[4,0.246,17,0.017,18,0.716,38,1.046,49,0.017,50,0.017,51,0.503,62,1.448,85,3.006,154,1.611,174,3.006,315,3.402,337,3.531,355,1.831,377,2.109,465,1.961,497,4.425,516,2.474,673,3.402,688,4.432,755,3.402,787,3.402,823,4.93,872,4.616,877,3.402,1016,3.402,1061,3.402,1063,3.402,1090,4.003,1091,5.802,1092,5.216,1093,5.216,1094,4.003,1095,5.802,1096,5.216,1097,4.003,1098,4.003,1099,4.003,1100,4.003,1101,4.003,1102,4.003,1103,6.147,1104,4.003,1105,4.003,1106,4.003,1107,6.374,1108,6.656,1109,4.003,1110,4.003,1111,4.003,1112,4.003,1113,4.003,1114,4.003,1115,4.003,1116,5.802,1117,4.003,1118,6.147,1119,4.003,1120,4.003,1121,4.003,1122,4.003,1123,5.216,1124,5.216,1125,6.147,1126,4.003,1127,5.216,1128,5.216,1129,4.003,1130,4.003,1131,4.003,1132,4.003,1133,5.216,1134,4.003,1135,4.003,1136,4.003,1137,4.003,1138,5.802,1139,4.003,1140,4.003,1141,3.006,1142,4.003]],["title/modules.html",[163,2.701]],["body/modules.html",[17,0.021,49,0.021,50,0.021,162,3.661,163,3.076,170,3.342,171,3.342,183,4.061,1143,5.408,1144,5.408,1145,6.634,1146,6.278,1147,6.278]],["title/overview.html",[1141,3.566]],["body/overview.html",[2,2.889,17,0.024,37,0.44,49,0.017,50,0.017,52,1.621,53,1.135,74,2.789,115,2.605,127,1.316,129,1.316,131,1.399,133,1.316,135,1.316,138,1.399,140,1.316,143,1.399,145,1.316,147,1.316,149,1.399,151,1.316,152,0.946,153,1.316,156,1.316,162,4.952,163,2.189,164,3.441,165,3.27,166,3.27,167,3.27,168,3.27,169,3.27,170,3.517,171,3.517,172,3.517,173,4.319,174,2.889,232,2.605,272,2.378,332,1.76,356,2.189,731,2.605,1041,3.27,1141,2.889,1148,3.848,1149,3.848,1150,3.848]],["title/routes.html",[232,3.215]],["body/routes.html",[17,0.021,49,0.021,50,0.021,232,3.811]],["title/miscellaneous/variables.html",[1079,1.652,1151,3.555]],["body/miscellaneous/variables.html",[7,0.183,17,0.024,19,0.88,43,1.945,48,1.69,49,0.014,50,0.014,79,1.157,81,1.944,82,2.065,136,0.877,141,0.877,152,0.731,154,0.825,158,1.255,209,1.836,212,1.836,236,2.88,237,2.241,238,2.88,239,3.194,240,2.88,241,3.194,242,2.88,243,2.629,244,2.88,250,2.231,256,2.231,266,1.416,291,1.565,293,2.241,294,2.629,295,3.194,317,1.836,422,3.194,425,3.672,441,2.231,465,1.456,505,2.525,523,2.231,524,2.88,539,3.194,541,3.578,542,3.352,573,3.194,582,2.231,592,2.231,612,3.194,642,2.525,719,2.525,738,2.231,772,3.194,844,3.194,986,2.231,987,3.194,1000,3.194,1001,3.194,1038,2.525,1054,2.525,1055,2.525,1056,2.525,1057,3.615,1058,3.615,1079,1.69,1151,2.525,1152,6.929,1153,4.254,1154,2.972,1155,2.972,1156,2.972,1157,2.972,1158,2.972,1159,2.972,1160,2.972,1161,2.972,1162,2.972,1163,2.972,1164,2.972,1165,2.972,1166,2.972,1167,2.972,1168,2.972,1169,2.972,1170,2.972,1171,4.254,1172,2.972]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["0.11.4",{"_index":1078,"title":{},"body":{"dependencies.html":{}}}],["0.9em",{"_index":676,"title":{},"body":{"components/NavComponent.html":{}}}],["0/1",{"_index":1040,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1050,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1049,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1047,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1051,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1043,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1044,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1045,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1037,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1048,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1052,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["1/14",{"_index":1042,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["10px",{"_index":569,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["11",{"_index":1150,"title":{},"body":{"overview.html":{}}}],["12.0.0",{"_index":1068,"title":{},"body":{"dependencies.html":{}}}],["12.2.3",{"_index":1065,"title":{},"body":{"dependencies.html":{}}}],["13.0.2",{"_index":1066,"title":{},"body":{"dependencies.html":{}}}],["13.0.3",{"_index":1063,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["14.1.0",{"_index":1073,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1148,"title":{},"body":{"overview.html":{}}}],["18px",{"_index":1032,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["2",{"_index":272,"title":{},"body":{"components/AuthComponent.html":{},"components/FooterComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":1076,"title":{},"body":{"dependencies.html":{}}}],["20px",{"_index":557,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["240px",{"_index":570,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["250px",{"_index":278,"title":{},"body":{"components/AuthComponent.html":{}}}],["3",{"_index":731,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"overview.html":{}}}],["3/3",{"_index":1053,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":277,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["33",{"_index":832,"title":{},"body":{"components/RegisterComponent.html":{}}}],["400",{"_index":469,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["401",{"_index":476,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["403",{"_index":478,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/RegisterComponent.html":{}}}],["404",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"miscellaneous/variables.html":{}}}],["406",{"_index":480,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["409",{"_index":481,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["499px",{"_index":677,"title":{},"body":{"components/NavComponent.html":{}}}],["5.0.2",{"_index":1072,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":834,"title":{},"body":{"components/RegisterComponent.html":{}}}],["500",{"_index":482,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["500px",{"_index":270,"title":{},"body":{"components/AuthComponent.html":{},"components/NavComponent.html":{}}}],["6",{"_index":733,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["6.6.0",{"_index":1074,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1041,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["8",{"_index":1149,"title":{},"body":{"overview.html":{}}}],["80",{"_index":1027,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["abstractcontrol",{"_index":976,"title":{},"body":{"classes/Validation.html":{}}}],["accept",{"_index":574,"title":{},"body":{"interfaces/JwtTokenDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["access",{"_index":521,"title":{},"body":{"components/ForbiddenComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/PhoneConfirmationComponent.html":{}}}],["access_token",{"_index":293,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accesstoken",{"_index":291,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/RegistrationResponseDto.html":{},"miscellaneous/variables.html":{}}}],["account",{"_index":555,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["activatedroute",{"_index":509,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["activatedroutesnapshot",{"_index":22,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["actual_component",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["add",{"_index":1134,"title":{},"body":{"index.html":{}}}],["address",{"_index":824,"title":{},"body":{"components/RegisterComponent.html":{}}}],["address1",{"_index":347,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["address2",{"_index":348,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["adminguard",{"_index":1,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["administrator",{"_index":1084,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["align",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["align:center",{"_index":636,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["alloweddomains",{"_index":956,"title":{},"body":{"modules/SharedModule.html":{}}}],["allowing",{"_index":586,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["already",{"_index":822,"title":{},"body":{"components/RegisterComponent.html":{}}}],["angular",{"_index":872,"title":{},"body":{"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"index.html":{}}}],["angular/animations",{"_index":1062,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1064,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":898,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["angular/compiler",{"_index":1067,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":942,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1070,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":903,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/card",{"_index":907,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/checkbox",{"_index":911,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/core",{"_index":926,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/datepicker",{"_index":909,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/form",{"_index":913,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/grid",{"_index":915,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/icon",{"_index":918,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/input",{"_index":920,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/list",{"_index":922,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/menu",{"_index":924,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/progress",{"_index":928,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/select",{"_index":931,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/sidenav",{"_index":933,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tabs",{"_index":935,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/toolbar",{"_index":937,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tooltip",{"_index":939,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/platform",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":32,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{},"dependencies.html":{}}}],["api",{"_index":394,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["api/accounts/forgotpassword",{"_index":1161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/accounts/login",{"_index":1162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/accounts/phoneconfirmation",{"_index":1160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/accounts/phoneverification",{"_index":1165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/accounts/registration",{"_index":1163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/accounts/resetpassword",{"_index":1164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/tokens/refresh",{"_index":1166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_accounts_confirm",{"_index":1001,"title":{},"body":{"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_accounts_forgot_password",{"_index":539,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_accounts_login",{"_index":612,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_accounts_registration",{"_index":772,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_accounts_reset_password",{"_index":844,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_accounts_verification",{"_index":1000,"title":{},"body":{"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_tokens_refresh",{"_index":295,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":441,"title":{},"body":{"injectables/EnvironmentUrlService.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["app.component",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["app.constants",{"_index":245,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["app.please",{"_index":737,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["appcomponent",{"_index":52,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":162,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":170,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":1119,"title":{},"body":{"index.html":{}}}],["async",{"_index":280,"title":{},"body":{"guards/AuthGuard.html":{}}}],["auth",{"_index":256,"title":{},"body":{"components/AuthComponent.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["auth'},{'name",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["auth.component.html",{"_index":258,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":257,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth0/angular",{"_index":404,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["authchanged",{"_index":359,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authchangesubject",{"_index":360,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authcomponent",{"_index":127,"title":{"components/AuthComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authentication",{"_index":584,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["authentication/authentication.service",{"_index":302,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavComponent.html":{}}}],["authenticationdto",{"_index":338,"title":{"interfaces/AuthenticationDto.html":{}},"body":{"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"coverage.html":{}}}],["authenticationservice",{"_index":73,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["authguard",{"_index":233,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authguard,adminguard",{"_index":248,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authorizationservice",{"_index":12,"title":{"injectables/AuthorizationService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["authresponsedto",{"_index":300,"title":{"interfaces/AuthResponseDto.html":{}},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/RegistrationResponseDto.html":{},"coverage.html":{}}}],["authservice",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["authservice:authenticationservice",{"_index":663,"title":{},"body":{"components/NavComponent.html":{}}}],["auto",{"_index":273,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["automatically",{"_index":1112,"title":{},"body":{"index.html":{}}}],["available",{"_index":1147,"title":{},"body":{"modules.html":{}}}],["await",{"_index":307,"title":{},"body":{"guards/AuthGuard.html":{}}}],["back",{"_index":580,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["backend",{"_index":397,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/JwtTokenDto.html":{}}}],["bar",{"_index":929,"title":{},"body":{"modules/SharedModule.html":{}}}],["basicauthenticationservice",{"_index":655,"title":{},"body":{"components/NavComponent.html":{}}}],["baskerville",{"_index":682,"title":{},"body":{"components/NavComponent.html":{}}}],["before",{"_index":1100,"title":{},"body":{"index.html":{}}}],["behaviorsubject",{"_index":964,"title":{},"body":{"injectables/UrlService.html":{}}}],["behaviorsubject(null",{"_index":965,"title":{},"body":{"injectables/UrlService.html":{}}}],["beta.34",{"_index":1069,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":499,"title":{},"body":{"components/FooterComponent.html":{},"components/NavComponent.html":{}}}],["blame",{"_index":874,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["block",{"_index":638,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["body",{"_index":390,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["boolean",{"_index":28,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{}}}],["bootstrap",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["bottom",{"_index":952,"title":{},"body":{"modules/SharedModule.html":{}}}],["bottom:10px",{"_index":567,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["branch",{"_index":1012,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["break",{"_index":475,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["browse",{"_index":1145,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":901,"title":{},"body":{"modules/SharedModule.html":{}}}],["browseranimationsmodule",{"_index":900,"title":{},"body":{"modules/SharedModule.html":{}}}],["browsermodule",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1118,"title":{},"body":{"index.html":{}}}],["button",{"_index":828,"title":{},"body":{"components/RegisterComponent.html":{}}}],["canactivate",{"_index":9,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":21,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["capabilities",{"_index":1136,"title":{},"body":{"index.html":{}}}],["card",{"_index":559,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["case",{"_index":468,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catch(ex",{"_index":330,"title":{},"body":{"guards/AuthGuard.html":{}}}],["catcherror",{"_index":462,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror(error",{"_index":464,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["caught",{"_index":1099,"title":{},"body":{"index.html":{}}}],["cdk",{"_index":940,"title":{},"body":{"modules/SharedModule.html":{}}}],["center",{"_index":561,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["change",{"_index":673,"title":{},"body":{"components/NavComponent.html":{},"index.html":{}}}],["changed",{"_index":267,"title":{},"body":{"components/AuthComponent.html":{}}}],["characters",{"_index":826,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["check",{"_index":787,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["checkcontrol",{"_index":979,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol.errors",{"_index":981,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol.errors.matching",{"_index":982,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol.value",{"_index":984,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrolname",{"_index":973,"title":{},"body":{"classes/Validation.html":{}}}],["choice",{"_index":1132,"title":{},"body":{"index.html":{}}}],["chrome",{"_index":876,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["church's",{"_index":735,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["church\\'s",{"_index":736,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["city",{"_index":349,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["class",{"_index":37,"title":{"classes/Validation.html":{}},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":969,"title":{},"body":{"classes/Validation.html":{}}}],["cli",{"_index":1103,"title":{},"body":{"index.html":{}}}],["client",{"_index":1092,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":355,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["codelength",{"_index":990,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["color",{"_index":683,"title":{},"body":{"components/NavComponent.html":{}}}],["column",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["command",{"_index":1133,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":897,"title":{},"body":{"modules/SharedModule.html":{}}}],["compare",{"_index":810,"title":{},"body":{"components/RegisterComponent.html":{}}}],["complete",{"_index":1024,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["component",{"_index":51,"title":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["components",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"overview.html":{}}}],["config",{"_index":955,"title":{},"body":{"modules/SharedModule.html":{}}}],["confirm",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["confirmation",{"_index":719,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"miscellaneous/variables.html":{}}}],["confirmation'},{'name",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["confirmation.component",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["confirmation.component.html",{"_index":721,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["confirmation.component.scss",{"_index":720,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["confirmation.component.ts",{"_index":718,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"coverage.html":{}}}],["confirmation.component.ts:11",{"_index":726,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["confirmation.component.ts:12",{"_index":724,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["confirmation.component.ts:16",{"_index":725,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["confirmation/phone",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PhoneConfirmationComponent.html":{},"coverage.html":{}}}],["confirmpassword",{"_index":344,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["congratulations",{"_index":261,"title":{},"body":{"components/AuthComponent.html":{}}}],["console.log(\"previous",{"_index":1011,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["console.log(error",{"_index":489,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/VerifyPhoneComponent.html":{}}}],["console.log(this.validationerrors",{"_index":631,"title":{},"body":{"components/LoginComponent.html":{}}}],["const",{"_index":246,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["constructor",{"_index":10,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["constructor(authorizationservice",{"_index":11,"title":{},"body":{"guards/AdminGuard.html":{}}}],["constructor(authservice",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["constructor(http",{"_index":371,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["constructor(private",{"_index":39,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["constructor(public",{"_index":654,"title":{},"body":{"components/NavComponent.html":{}}}],["constructor(router",{"_index":449,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{}}}],["constructor(toastr",{"_index":699,"title":{},"body":{"injectables/NotificationService.html":{}}}],["contact",{"_index":672,"title":{},"body":{"components/NavComponent.html":{}}}],["contain",{"_index":756,"title":{},"body":{"components/RegisterComponent.html":{}}}],["container",{"_index":268,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["content",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/NavComponent.html":{}}}],["context",{"_index":1057,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":808,"title":{},"body":{"components/RegisterComponent.html":{},"classes/Validation.html":{}}}],["control.value",{"_index":983,"title":{},"body":{"classes/Validation.html":{}}}],["controller",{"_index":395,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["controlname",{"_index":615,"title":{},"body":{"components/LoginComponent.html":{},"classes/Validation.html":{}}}],["controls",{"_index":977,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(checkcontrolname",{"_index":980,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(checkcontrolname)?.seterrors",{"_index":985,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(controlname",{"_index":978,"title":{},"body":{"classes/Validation.html":{}}}],["core/authentication/authentication.service",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["core/footer/footer.component",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["core/guards",{"_index":1102,"title":{},"body":{"index.html":{}}}],["core/guards/admin.guard",{"_index":235,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/guards/auth.guard",{"_index":234,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/header/nav.component",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["core/interceptors/error.interceptor",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["core/interceptors/error.interceptor.ts",{"_index":1098,"title":{},"body":{"index.html":{}}}],["core/services/url.service",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["correct",{"_index":884,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["coverage",{"_index":1033,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createcompleteroute",{"_index":361,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["currenturl",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["dashboard",{"_index":433,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["dashboard.component.html",{"_index":435,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":434,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":129,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":549,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["declarations",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["decodedtoken",{"_index":426,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["decodedtoken[identity_roles",{"_index":429,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["decoration:none",{"_index":685,"title":{},"body":{"components/NavComponent.html":{}}}],["default",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":14,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["dependencies",{"_index":164,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":393,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/JwtTokenDto.html":{}}}],["dev",{"_index":877,"title":{},"body":{"components/ServerErrorComponent.html":{},"index.html":{}}}],["development",{"_index":1106,"title":{},"body":{"index.html":{}}}],["different",{"_index":519,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["direction",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["directive",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["directives",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1117,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1122,"title":{},"body":{"index.html":{}}}],["disallowedroutes",{"_index":958,"title":{},"body":{"modules/SharedModule.html":{}}}],["disappear",{"_index":868,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["display",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{}}}],["display:block",{"_index":1029,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["dist",{"_index":1121,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1034,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["driver",{"_index":1085,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dynamic",{"_index":1071,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1130,"title":{},"body":{"index.html":{}}}],["element",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["email",{"_index":343,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/NavComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["end",{"_index":497,"title":{},"body":{"components/FooterComponent.html":{},"components/NavComponent.html":{},"components/ServerErrorComponent.html":{},"index.html":{}}}],["enter",{"_index":550,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["enumerations",{"_index":1080,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["envaddress",{"_index":416,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["envaddress}/${route",{"_index":417,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["environment",{"_index":425,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":443,"title":{},"body":{"injectables/EnvironmentUrlService.html":{}}}],["environmenturlservice",{"_index":285,"title":{"injectables/EnvironmentUrlService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"coverage.html":{}}}],["envurl",{"_index":284,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["error",{"_index":465,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["error'},{'name",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["error.component",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["error.component.html",{"_index":860,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.component.scss",{"_index":859,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.component.ts",{"_index":858,"title":{},"body":{"components/ServerErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:10",{"_index":861,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.component.ts:17",{"_index":862,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.details",{"_index":895,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.error",{"_index":483,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error.message",{"_index":869,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.status",{"_index":467,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/RegisterComponent.html":{}}}],["error.statustext",{"_index":474,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error/server",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ServerErrorComponent.html":{},"coverage.html":{}}}],["errorinterceptor",{"_index":172,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["errorname",{"_index":618,"title":{},"body":{"components/LoginComponent.html":{}}}],["errors",{"_index":337,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/RegistrationResponseDto.html":{},"index.html":{}}}],["errors.join",{"_index":472,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errorsasstring",{"_index":471,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["event",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"injectables/UrlService.html":{}}}],["event.url",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["examine",{"_index":882,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["execute",{"_index":1127,"title":{},"body":{"index.html":{}}}],["expired",{"_index":591,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["export",{"_index":36,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["exports",{"_index":254,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["extends",{"_index":340,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["false",{"_index":48,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":681,"title":{},"body":{"components/NavComponent.html":{}}}],["fb",{"_index":750,"title":{},"body":{"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["fb.group",{"_index":778,"title":{},"body":{"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["field",{"_index":637,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["files",{"_index":1114,"title":{},"body":{"index.html":{}}}],["filter",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["first",{"_index":755,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["firstname",{"_index":345,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["flex",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/NavComponent.html":{}}}],["flexlayoutmodule",{"_index":941,"title":{},"body":{"modules/SharedModule.html":{}}}],["following",{"_index":890,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["font",{"_index":563,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/NavComponent.html":{}}}],["footer",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["footer'},{'name",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["footer.component.html",{"_index":493,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":492,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":131,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forbidden",{"_index":505,"title":{},"body":{"components/ForbiddenComponent.html":{},"miscellaneous/variables.html":{}}}],["forbidden'},{'name",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["forbidden.component.html",{"_index":507,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["forbidden.component.scss",{"_index":506,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["forbiddencomponent",{"_index":133,"title":{"components/ForbiddenComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgot",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["forgotpassword",{"_index":362,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["forgotpasswordcomponent",{"_index":135,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgotpasswordform",{"_index":527,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotpasswordform.phone",{"_index":545,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["form",{"_index":634,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formattedphone",{"_index":722,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["formbuilder",{"_index":751,"title":{},"body":{"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["formcontrol",{"_index":536,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["formgroup",{"_index":532,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["formgroup.get('confirmpassword')?.seterrors",{"_index":812,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formgroup.get('confirmpassword')?.value",{"_index":809,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formgroup.get('password')?.value",{"_index":807,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["formvalue",{"_index":853,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["formvalue.password",{"_index":854,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["formvalues",{"_index":793,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.address1.trim",{"_index":801,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.address2",{"_index":802,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.address2.trim",{"_index":803,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.city.trim",{"_index":804,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.confirmpassword",{"_index":795,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.email",{"_index":798,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.email.trim",{"_index":799,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.firstname.trim",{"_index":796,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.lastname.trim",{"_index":797,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.password",{"_index":794,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.phone",{"_index":800,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.zipcode.trim",{"_index":805,"title":{},"body":{"components/RegisterComponent.html":{}}}],["forth",{"_index":581,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["found",{"_index":688,"title":{},"body":{"components/NotFoundComponent.html":{},"index.html":{}}}],["found'},{'name",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["found.component",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.html",{"_index":690,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":689,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":687,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":692,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":691,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["front",{"_index":889,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["full",{"_index":252,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":947,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{}}}],["functions",{"_index":1086,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1137,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1116,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1104,"title":{},"body":{"index.html":{}}}],["getemailerror",{"_index":746,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getfirstnameerror",{"_index":747,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getlastnameerror",{"_index":748,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getting",{"_index":1088,"title":{"index.html":{}},"body":{}}],["go",{"_index":1140,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1146,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["guard",{"_index":0,"title":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"overview.html":{}}}],["half",{"_index":833,"title":{},"body":{"components/RegisterComponent.html":{}}}],["handling",{"_index":1095,"title":{},"body":{"index.html":{}}}],["haserror",{"_index":596,"title":{},"body":{"components/LoginComponent.html":{}}}],["header",{"_index":562,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["height",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["height:auto",{"_index":503,"title":{},"body":{"components/FooterComponent.html":{}}}],["help",{"_index":1138,"title":{},"body":{"index.html":{}}}],["hide",{"_index":528,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["hide=true",{"_index":773,"title":{},"body":{"components/RegisterComponent.html":{}}}],["hideconfirm",{"_index":741,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["hideconfirm=true",{"_index":774,"title":{},"body":{"components/RegisterComponent.html":{}}}],["history.state.data",{"_index":728,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["home",{"_index":693,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["html",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["http",{"_index":282,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["http://localhost:4200",{"_index":1111,"title":{},"body":{"index.html":{}}}],["http://schemas.microsoft.com/ws/2008/06/identity/claims/role",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":283,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["httpclientmodule",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":457,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httphandler",{"_index":454,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpinterceptor",{"_index":458,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httprequest",{"_index":453,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["https://localhost:5001",{"_index":1172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconfig",{"_index":538,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["identifier",{"_index":1035,"title":{},"body":{"coverage.html":{}}}],["identity_roles",{"_index":422,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["if(!accesstoken",{"_index":319,"title":{},"body":{"guards/AuthGuard.html":{}}}],["img",{"_index":501,"title":{},"body":{"components/FooterComponent.html":{}}}],["implements",{"_index":38,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["import",{"_index":29,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["imports",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["injectable",{"_index":30,"title":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"injectables/NotificationService.html":{},"injectables/UrlService.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"injectables/UrlService.html":{},"coverage.html":{}}}],["injectables",{"_index":356,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"injectables/NotificationService.html":{},"injectables/UrlService.html":{},"overview.html":{}}}],["inspet",{"_index":879,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["instanceof",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["intercept",{"_index":448,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["intercept(request",{"_index":452,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptor",{"_index":445,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":446,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interface",{"_index":331,"title":{"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"coverage.html":{}}}],["interfaces",{"_index":332,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"overview.html":{}}}],["internal",{"_index":867,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["investigation",{"_index":893,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["isauthenticated:boolean",{"_index":410,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isauthsuccessful",{"_index":334,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["isrefreshsuccess",{"_index":306,"title":{},"body":{"guards/AuthGuard.html":{}}}],["issuccessfulregistration",{"_index":336,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["issue",{"_index":264,"title":{},"body":{"components/AuthComponent.html":{},"components/ServerErrorComponent.html":{}}}],["isuniqueemail",{"_index":742,"title":{},"body":{"components/RegisterComponent.html":{}}}],["isuniqueemail=true",{"_index":776,"title":{},"body":{"components/RegisterComponent.html":{}}}],["isuseradmin",{"_index":419,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["isuserauthenticated",{"_index":363,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/NavComponent.html":{}}}],["isuserauthenticated:boolean",{"_index":653,"title":{},"body":{"components/NavComponent.html":{}}}],["items",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["jacob",{"_index":668,"title":{},"body":{"components/NavComponent.html":{}}}],["justify",{"_index":496,"title":{},"body":{"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/NavComponent.html":{}}}],["jwt",{"_index":405,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["jwthelper",{"_index":372,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["jwthelperservice",{"_index":373,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["jwtmodule",{"_index":946,"title":{},"body":{"modules/SharedModule.html":{}}}],["jwtmodule.forroot",{"_index":954,"title":{},"body":{"modules/SharedModule.html":{}}}],["jwttoken",{"_index":320,"title":{},"body":{"guards/AuthGuard.html":{}}}],["jwttoken).topromise",{"_index":323,"title":{},"body":{"guards/AuthGuard.html":{}}}],["jwttokendto",{"_index":297,"title":{"interfaces/JwtTokenDto.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/JwtTokenDto.html":{},"coverage.html":{}}}],["karma",{"_index":1129,"title":{},"body":{"index.html":{}}}],["large",{"_index":565,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["last",{"_index":759,"title":{},"body":{"components/RegisterComponent.html":{}}}],["lastname",{"_index":346,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["layout",{"_index":943,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["leaving",{"_index":1101,"title":{},"body":{"index.html":{}}}],["legend",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["letter",{"_index":1030,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["letters",{"_index":757,"title":{},"body":{"components/RegisterComponent.html":{}}}],["list",{"_index":916,"title":{},"body":{"modules/SharedModule.html":{}}}],["literal",{"_index":1170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lived",{"_index":578,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["localhost:5001",{"_index":957,"title":{},"body":{"modules/SharedModule.html":{}}}],["localstorage.getitem(access_token",{"_index":305,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"modules/SharedModule.html":{}}}],["localstorage.getitem(refresh_token",{"_index":318,"title":{},"body":{"guards/AuthGuard.html":{}}}],["localstorage.removeitem(access_token",{"_index":407,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.removeitem(refresh_token",{"_index":408,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem(access_token",{"_index":328,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["localstorage.setitem(refresh_token",{"_index":329,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["log",{"_index":518,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PhoneConfirmationComponent.html":{}}}],["logic",{"_index":1096,"title":{},"body":{"index.html":{}}}],["login",{"_index":593,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["login.component.html",{"_index":595,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":594,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.password",{"_index":623,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.username",{"_index":622,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":138,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":597,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginformvalue",{"_index":620,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginuser",{"_index":364,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{}}}],["logo",{"_index":680,"title":{},"body":{"components/NavComponent.html":{}}}],["logout",{"_index":365,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/NavComponent.html":{}}}],["long",{"_index":587,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["mail",{"_index":821,"title":{},"body":{"components/RegisterComponent.html":{}}}],["main",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["make",{"_index":552,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ServerErrorComponent.html":{}}}],["manage",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["managetemplatescomponent",{"_index":140,"title":{"components/ManageTemplatesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["margin",{"_index":271,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["margin:5",{"_index":1028,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["mask",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{},"dependencies.html":{}}}],["mat",{"_index":558,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["matbuttonmodule",{"_index":902,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbuttontogglemodule",{"_index":904,"title":{},"body":{"modules/SharedModule.html":{}}}],["matcardmodule",{"_index":906,"title":{},"body":{"modules/SharedModule.html":{}}}],["match",{"_index":789,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Validation.html":{}}}],["match(controlname",{"_index":972,"title":{},"body":{"classes/Validation.html":{}}}],["matcheckboxmodule",{"_index":910,"title":{},"body":{"modules/SharedModule.html":{}}}],["matching",{"_index":50,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":908,"title":{},"body":{"modules/SharedModule.html":{}}}],["material",{"_index":899,"title":{},"body":{"modules/SharedModule.html":{}}}],["matformfieldmodule",{"_index":912,"title":{},"body":{"modules/SharedModule.html":{}}}],["matgridlistmodule",{"_index":914,"title":{},"body":{"modules/SharedModule.html":{}}}],["maticonmodule",{"_index":917,"title":{},"body":{"modules/SharedModule.html":{}}}],["matinputmodule",{"_index":919,"title":{},"body":{"modules/SharedModule.html":{}}}],["matlistmodule",{"_index":921,"title":{},"body":{"modules/SharedModule.html":{}}}],["matmenumodule",{"_index":923,"title":{},"body":{"modules/SharedModule.html":{}}}],["matnativedatemodule",{"_index":925,"title":{},"body":{"modules/SharedModule.html":{}}}],["matprogressbarmodule",{"_index":927,"title":{},"body":{"modules/SharedModule.html":{}}}],["matselectmodule",{"_index":930,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsidenavmodule",{"_index":932,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattabsmodule",{"_index":934,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattoolbarmodule",{"_index":936,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattooltipmodule",{"_index":938,"title":{},"body":{"modules/SharedModule.html":{}}}],["max",{"_index":275,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["media",{"_index":274,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{}}}],["menu",{"_index":674,"title":{},"body":{"components/NavComponent.html":{}}}],["message",{"_index":708,"title":{},"body":{"injectables/NotificationService.html":{}}}],["messages",{"_index":705,"title":{},"body":{"injectables/NotificationService.html":{}}}],["metadata",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["methods",{"_index":8,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["min",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["miscellaneous",{"_index":1079,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":161,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}},"body":{}}],["modules",{"_index":163,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/account/auth/auth.component",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/account/auth/login/login.component",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/account/auth/register/register.component",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/account/password/forgot",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/account/password/reset",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/account/phone/phone",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/account/phone/verify",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/church",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/dashboard/pages/dashboard/dashboard.component",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/errors/pages/forbidden/forbidden.component",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/errors/pages/not",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/errors/pages/server",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["more",{"_index":1139,"title":{},"body":{"index.html":{}}}],["multi",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":18,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["nav",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["nav'},{'name",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["nav.component.html",{"_index":649,"title":{},"body":{"components/NavComponent.html":{}}}],["nav.component.scss",{"_index":648,"title":{},"body":{"components/NavComponent.html":{}}}],["navbar",{"_index":675,"title":{},"body":{"components/NavComponent.html":{}}}],["navcomponent",{"_index":143,"title":{"components/NavComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":1110,"title":{},"body":{"index.html":{}}}],["navigatetologin",{"_index":508,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["navigation",{"_index":863,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["navigation?.extras?.state?.error",{"_index":866,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["navigationend",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"injectables/UrlService.html":{}}}],["navigationextras",{"_index":461,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["navigationurl",{"_index":1010,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["need",{"_index":1016,"title":{},"body":{"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["needs",{"_index":1015,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["network",{"_index":880,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["new",{"_index":377,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UrlService.html":{},"coverage.html":{},"index.html":{}}}],["newrefreshtoken",{"_index":326,"title":{},"body":{"guards/AuthGuard.html":{}}}],["newtoken",{"_index":324,"title":{},"body":{"guards/AuthGuard.html":{}}}],["next",{"_index":26,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/ServerErrorComponent.html":{}}}],["next.handle(request).pipe",{"_index":463,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":1108,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["ngoninit",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["ngx",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/VerifyPhoneComponent.html":{},"dependencies.html":{}}}],["ngxmaskmodule",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxmaskmodule.forroot",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["none",{"_index":679,"title":{},"body":{"components/NavComponent.html":{}}}],["nopasswordmatch",{"_index":813,"title":{},"body":{"components/RegisterComponent.html":{}}}],["not_found",{"_index":236,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["note",{"_index":870,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["notfoundcomponent",{"_index":145,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notifications",{"_index":944,"title":{},"body":{"modules/SharedModule.html":{}}}],["notificationservice",{"_index":450,"title":{"injectables/NotificationService.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/NotificationService.html":{},"coverage.html":{}}}],["null",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthorizationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["number",{"_index":551,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["object",{"_index":573,"title":{},"body":{"interfaces/JwtTokenDto.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["object.values(error.error",{"_index":470,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["observable",{"_index":414,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/UrlService.html":{}}}],["ocurred",{"_index":820,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["one",{"_index":830,"title":{},"body":{"components/RegisterComponent.html":{}}}],["oninit",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["open",{"_index":875,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["optional",{"_index":20,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["options",{"_index":541,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1141,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owner",{"_index":554,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["package",{"_index":1061,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":500,"title":{},"body":{"components/FooterComponent.html":{},"components/NavComponent.html":{}}}],["page",{"_index":516,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/NotFoundComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["param",{"_index":413,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["parameters",{"_index":16,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["partial",{"_index":542,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["pass",{"_index":575,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["passed",{"_index":579,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["password",{"_index":266,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["password'},{'name",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["password.component",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["password.component.html",{"_index":526,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":525,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":524,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["password.component.ts:16",{"_index":842,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":533,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:18",{"_index":534,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:19",{"_index":530,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:20",{"_index":841,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:21",{"_index":840,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:22",{"_index":838,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":531,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:27",{"_index":839,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:33",{"_index":535,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:44",{"_index":843,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/forgot",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["password/reset",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwordmatchvalidator",{"_index":749,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwordmatchvalidator(formgroup",{"_index":761,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwordminlength",{"_index":743,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwords",{"_index":811,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["path",{"_index":247,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":389,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["persisting",{"_index":588,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["phone",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["phone.component",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["phone.component.html",{"_index":989,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.scss",{"_index":988,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts",{"_index":987,"title":{},"body":{"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["phone.component.ts:18",{"_index":999,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:19",{"_index":995,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:20",{"_index":998,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:21",{"_index":996,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:22",{"_index":997,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:23",{"_index":992,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:35",{"_index":993,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:47",{"_index":994,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone/verify",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["phoneconfirmationcomponent",{"_index":147,"title":{"components/PhoneConfirmationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["phonenumber",{"_index":351,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["phonenumberdto",{"_index":341,"title":{"interfaces/PhoneNumberDto.html":{}},"body":{"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["phoneverificationdto",{"_index":354,"title":{"interfaces/PhoneVerificationDto.html":{}},"body":{"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["phoneverificationdto.phonenumber",{"_index":1022,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["platform",{"_index":1131,"title":{},"body":{"index.html":{}}}],["please",{"_index":517,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["positionclass",{"_index":950,"title":{},"body":{"modules/SharedModule.html":{}}}],["postman",{"_index":886,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["previous",{"_index":1014,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["previousurl",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["private",{"_index":40,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["probably",{"_index":873,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["production",{"_index":1171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1091,"title":{},"body":{"index.html":{}}}],["promise",{"_index":292,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properties",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["property",{"_index":1005,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["provide",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":34,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"injectables/NotificationService.html":{},"injectables/UrlService.html":{}}}],["providedin:'root",{"_index":613,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["providers",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":358,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["queryparams",{"_index":45,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/ForbiddenComponent.html":{}}}],["reactiveformsmodule",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["receives",{"_index":392,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["redirectto",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1142,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":316,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/JwtTokenDto.html":{}}}],["refresh_token",{"_index":294,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refreshauthentication",{"_index":366,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["refreshing",{"_index":313,"title":{},"body":{"guards/AuthGuard.html":{},"components/ServerErrorComponent.html":{}}}],["refreshtoken",{"_index":317,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/RegistrationResponseDto.html":{},"miscellaneous/variables.html":{}}}],["register",{"_index":670,"title":{},"body":{"components/NavComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["register.component.html",{"_index":740,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":739,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":149,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":263,"title":{},"body":{"components/AuthComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["registerform",{"_index":744,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerformvalue",{"_index":792,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registeruser",{"_index":367,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registration",{"_index":1023,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["registrationresponsedto",{"_index":335,"title":{"interfaces/RegistrationResponseDto.html":{}},"body":{"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/RegistrationResponseDto.html":{},"coverage.html":{}}}],["reload",{"_index":1113,"title":{},"body":{"index.html":{}}}],["renewed",{"_index":589,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["represent",{"_index":415,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["represents",{"_index":576,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["reproduce",{"_index":885,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["request",{"_index":456,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/ServerErrorComponent.html":{}}}],["requested",{"_index":522,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["require",{"_index":1058,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":556,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["reset",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"injectables/AuthenticationService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["resetpassword",{"_index":368,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["resetpasswordcomponent",{"_index":151,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetpassworddto",{"_index":353,"title":{"interfaces/ResetPasswordDto.html":{}},"body":{"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["resetpasswordform",{"_index":836,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordformvalue",{"_index":852,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetting",{"_index":265,"title":{},"body":{"components/AuthComponent.html":{}}}],["response",{"_index":321,"title":{},"body":{"guards/AuthGuard.html":{},"components/ServerErrorComponent.html":{}}}],["response.accesstoken",{"_index":325,"title":{},"body":{"guards/AuthGuard.html":{}}}],["response.refreshtoken",{"_index":327,"title":{},"body":{"guards/AuthGuard.html":{}}}],["responsedata",{"_index":837,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["result",{"_index":666,"title":{},"body":{"components/NavComponent.html":{}}}],["result.accesstoken",{"_index":626,"title":{},"body":{"components/LoginComponent.html":{}}}],["result.refreshtoken",{"_index":627,"title":{},"body":{"components/LoginComponent.html":{}}}],["results",{"_index":49,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":42,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"classes/Validation.html":{}}}],["returned",{"_index":1097,"title":{},"body":{"index.html":{}}}],["returns",{"_index":27,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["returnurl",{"_index":46,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["right",{"_index":953,"title":{},"body":{"modules/SharedModule.html":{}}}],["rock",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/PhoneConfirmationComponent.html":{}}}],["rock's",{"_index":1094,"title":{},"body":{"index.html":{}}}],["role",{"_index":428,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/NavComponent.html":{}}}],["roles",{"_index":423,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/RegisterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["roles.administrator",{"_index":430,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["roles.superadmin",{"_index":431,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["root",{"_index":35,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"injectables/NotificationService.html":{},"injectables/UrlService.html":{}}}],["root'},{'name",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["route",{"_index":391,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["router",{"_index":13,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["routermodule",{"_index":231,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":24,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["routes",{"_index":232,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":230,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing_auth",{"_index":237,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/PhoneConfirmationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing_confirm_phone",{"_index":238,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing_forbidden",{"_index":239,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing_forgot_password",{"_index":240,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing_manage_templates",{"_index":241,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing_reset_password",{"_index":242,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing_verify_phone",{"_index":243,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":1107,"title":{},"body":{"index.html":{}}}],["running",{"_index":1123,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":403,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/UrlService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["same",{"_index":888,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scaffolding",{"_index":1115,"title":{},"body":{"index.html":{}}}],["see",{"_index":887,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["seeing",{"_index":871,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["selector",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["send",{"_index":1017,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["sendauthstatechangenotification",{"_index":369,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sends",{"_index":388,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/VerifyPhoneComponent.html":{}}}],["sent",{"_index":396,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["serve",{"_index":1109,"title":{},"body":{"index.html":{}}}],["server",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["server_error",{"_index":244,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["servererrorcomponent",{"_index":153,"title":{"components/ServerErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["services/authorization.service",{"_index":33,"title":{},"body":{"guards/AdminGuard.html":{}}}],["services/environment",{"_index":303,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{}}}],["services/manage",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ManageTemplatesComponent.html":{},"coverage.html":{}}}],["services/notification.service",{"_index":460,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["setpreviousurl",{"_index":960,"title":{},"body":{"injectables/UrlService.html":{}}}],["setpreviousurl(previousurl",{"_index":962,"title":{},"body":{"injectables/UrlService.html":{}}}],["shared/shared.module",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":171,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["short",{"_index":577,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["show",{"_index":678,"title":{},"body":{"components/NavComponent.html":{}}}],["showerror",{"_index":695,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showerror(messages",{"_index":703,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showinfo",{"_index":696,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showinfo(message",{"_index":706,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showsuccess",{"_index":697,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showsuccess(message",{"_index":709,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showwarning",{"_index":698,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showwarning(message",{"_index":711,"title":{},"body":{"injectables/NotificationService.html":{}}}],["shrink",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["side",{"_index":1093,"title":{},"body":{"index.html":{}}}],["size",{"_index":564,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/NavComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["space",{"_index":498,"title":{},"body":{"components/FooterComponent.html":{},"components/NavComponent.html":{}}}],["spacing",{"_index":1031,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["spec\\.ts",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.constants.ts",{"_index":1152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../forgot",{"_index":1158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../login.component.ts",{"_index":1156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../register.component.ts",{"_index":1157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.ts",{"_index":1081,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../shared.module.ts",{"_index":1087,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../test.ts",{"_index":1153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../verify",{"_index":1159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":229,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.constants",{"_index":296,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["src/app/app.constants.ts",{"_index":1038,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.module.ts",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/authentication/authentication.service",{"_index":540,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["src/app/core/authentication/authentication.service.ts",{"_index":357,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/core/authentication/authentication.service.ts:15",{"_index":374,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:21",{"_index":379,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:22",{"_index":376,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:24",{"_index":386,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:28",{"_index":383,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:32",{"_index":384,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:38",{"_index":398,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:42",{"_index":382,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:48",{"_index":385,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:52",{"_index":399,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:56",{"_index":381,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:66",{"_index":387,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:70",{"_index":380,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/footer/footer.component.ts",{"_index":491,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/core/footer/footer.component.ts:12",{"_index":495,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/core/footer/footer.component.ts:8",{"_index":494,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/core/guards/admin.guard.ts",{"_index":6,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/admin.guard.ts:12",{"_index":25,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/admin.guard.ts:8",{"_index":15,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":279,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/auth.guard.ts:13",{"_index":286,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:20",{"_index":287,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:37",{"_index":290,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/header/nav.component.ts",{"_index":647,"title":{},"body":{"components/NavComponent.html":{},"coverage.html":{}}}],["src/app/core/header/nav.component.ts:11",{"_index":650,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/core/header/nav.component.ts:32",{"_index":651,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/core/header/nav.component.ts:39",{"_index":652,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/core/interceptors/error.interceptor.ts",{"_index":447,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/core/interceptors/error.interceptor.ts:15",{"_index":451,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/core/interceptors/error.interceptor.ts:20",{"_index":455,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/core/services/authorization.service.ts",{"_index":418,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["src/app/core/services/authorization.service.ts:11",{"_index":420,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/core/services/authorization.service.ts:17",{"_index":421,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/core/services/environment",{"_index":439,"title":{},"body":{"injectables/EnvironmentUrlService.html":{},"coverage.html":{}}}],["src/app/core/services/notification.service.ts",{"_index":694,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/core/services/notification.service.ts:11",{"_index":710,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:15",{"_index":704,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:20",{"_index":707,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:24",{"_index":712,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:7",{"_index":701,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/url.service",{"_index":845,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["src/app/core/services/url.service.ts",{"_index":959,"title":{},"body":{"injectables/UrlService.html":{},"coverage.html":{}}}],["src/app/core/services/url.service.ts:10",{"_index":961,"title":{},"body":{"injectables/UrlService.html":{}}}],["src/app/core/services/url.service.ts:14",{"_index":963,"title":{},"body":{"injectables/UrlService.html":{}}}],["src/app/core/services/url.service.ts:9",{"_index":966,"title":{},"body":{"injectables/UrlService.html":{}}}],["src/app/modules/account/auth/auth.component.ts",{"_index":255,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/modules/account/auth/auth.component.ts:12",{"_index":260,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/modules/account/auth/auth.component.ts:8",{"_index":259,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts",{"_index":592,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:20",{"_index":606,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:21",{"_index":609,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:22",{"_index":608,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:23",{"_index":605,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:24",{"_index":611,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:25",{"_index":603,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:26",{"_index":601,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:32",{"_index":602,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:40",{"_index":610,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:43",{"_index":604,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:47",{"_index":607,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts",{"_index":738,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:104",{"_index":758,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:21",{"_index":769,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:22",{"_index":771,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:23",{"_index":766,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:24",{"_index":763,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:25",{"_index":764,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:26",{"_index":770,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:27",{"_index":765,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:28",{"_index":767,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:29",{"_index":752,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:51",{"_index":760,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:54",{"_index":768,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:81",{"_index":762,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:90",{"_index":753,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:97",{"_index":754,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/password/forgot",{"_index":523,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/account/password/reset",{"_index":835,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/modules/account/phone/phone",{"_index":717,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"coverage.html":{}}}],["src/app/modules/account/phone/verify",{"_index":986,"title":{},"body":{"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/church",{"_index":640,"title":{},"body":{"components/ManageTemplatesComponent.html":{},"coverage.html":{}}}],["src/app/modules/dashboard/pages/dashboard/dashboard.component.ts",{"_index":432,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/modules/dashboard/pages/dashboard/dashboard.component.ts:12",{"_index":437,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/modules/dashboard/pages/dashboard/dashboard.component.ts:8",{"_index":436,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/modules/errors/pages/forbidden/forbidden.component.ts",{"_index":504,"title":{},"body":{"components/ForbiddenComponent.html":{},"coverage.html":{}}}],["src/app/modules/errors/pages/forbidden/forbidden.component.ts:11",{"_index":510,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["src/app/modules/errors/pages/forbidden/forbidden.component.ts:15",{"_index":511,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["src/app/modules/errors/pages/forbidden/forbidden.component.ts:19",{"_index":512,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["src/app/modules/errors/pages/not",{"_index":686,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/modules/errors/pages/server",{"_index":857,"title":{},"body":{"components/ServerErrorComponent.html":{},"coverage.html":{}}}],["src/app/shared/directives/validation",{"_index":847,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["src/app/shared/directives/validation.ts",{"_index":970,"title":{},"body":{"classes/Validation.html":{},"coverage.html":{}}}],["src/app/shared/directives/validation.ts:4",{"_index":974,"title":{},"body":{"classes/Validation.html":{}}}],["src/app/shared/models/account",{"_index":400,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["src/app/shared/models/account.ts",{"_index":339,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"coverage.html":{}}}],["src/app/shared/models/jwt",{"_index":298,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/JwtTokenDto.html":{},"coverage.html":{}}}],["src/app/shared/models/phone",{"_index":401,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/shared/models/response",{"_index":301,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{}}}],["src/app/shared/models/response.ts",{"_index":333,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{},"coverage.html":{}}}],["src/app/shared/models/roles",{"_index":424,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/RegisterComponent.html":{}}}],["src/app/shared/models/roles.ts",{"_index":1082,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/shared.module.ts",{"_index":896,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/environments/environment",{"_index":444,"title":{},"body":{"injectables/EnvironmentUrlService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1054,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1055,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1056,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":891,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["start",{"_index":894,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["started",{"_index":1089,"title":{"index.html":{}},"body":{}}],["state",{"_index":23,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["state.url",{"_index":47,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["statements",{"_index":1036,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":971,"title":{},"body":{"classes/Validation.html":{}}}],["storageservice",{"_index":656,"title":{},"body":{"components/NavComponent.html":{}}}],["stored",{"_index":1120,"title":{},"body":{"index.html":{}}}],["stretch",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["string",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["styleurls",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["subject",{"_index":378,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["submit",{"_index":529,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["submitted",{"_index":745,"title":{},"body":{"components/RegisterComponent.html":{}}}],["submitted=false",{"_index":775,"title":{},"body":{"components/RegisterComponent.html":{}}}],["subscribe",{"_index":547,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["subscribe((event:event",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(result",{"_index":625,"title":{},"body":{"components/LoginComponent.html":{},"components/NavComponent.html":{}}}],["subtitle",{"_index":568,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["successfully",{"_index":262,"title":{},"body":{"components/AuthComponent.html":{},"components/PhoneConfirmationComponent.html":{}}}],["superadmin",{"_index":1083,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["support",{"_index":1143,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":553,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ServerErrorComponent.html":{}}}],["svg",{"_index":1144,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":466,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["tab",{"_index":881,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["table",{"_index":1060,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1059,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["templates",{"_index":642,"title":{},"body":{"components/ManageTemplatesComponent.html":{},"miscellaneous/variables.html":{}}}],["templates'},{'name",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["templates.component",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["templates.component.html",{"_index":644,"title":{},"body":{"components/ManageTemplatesComponent.html":{}}}],["templates.component.scss",{"_index":643,"title":{},"body":{"components/ManageTemplatesComponent.html":{}}}],["templates.component.ts",{"_index":641,"title":{},"body":{"components/ManageTemplatesComponent.html":{},"coverage.html":{}}}],["templates.component.ts:12",{"_index":646,"title":{},"body":{"components/ManageTemplatesComponent.html":{}}}],["templates.component.ts:8",{"_index":645,"title":{},"body":{"components/ManageTemplatesComponent.html":{}}}],["templates/manage",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ManageTemplatesComponent.html":{},"coverage.html":{}}}],["templateurl",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["test",{"_index":1126,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1135,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1125,"title":{},"body":{"index.html":{}}}],["text",{"_index":560,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["thereby",{"_index":585,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["third",{"_index":831,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authchangesubject.asobservable",{"_index":375,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authchangesubject.next(isauthenticated",{"_index":411,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authorizationservice.isuseradmin",{"_index":41,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.authservice.authchanged",{"_index":664,"title":{},"body":{"components/NavComponent.html":{}}}],["this.authservice.forgotpassword(api_accounts_forgot_password",{"_index":546,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.authservice.isuserauthenticated",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{}}}],["this.authservice.loginuser(api_accounts_login",{"_index":624,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":667,"title":{},"body":{"components/NavComponent.html":{}}}],["this.authservice.refreshauthentication(api_tokens_refresh",{"_index":322,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.registeruser(api_accounts_registration",{"_index":806,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.resetpassword(api_accounts_reset_password",{"_index":855,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authservice.sendauthstatechangenotification(false",{"_index":309,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.sendauthstatechangenotification(isrefreshsuccess",{"_index":311,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.sendauthstatechangenotification(result.isauthsuccessful",{"_index":628,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.sendauthstatechangenotification(true",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.verifyphone(apiurl",{"_index":1020,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.currenturl",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["this.error",{"_index":865,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["this.forgotpasswordform",{"_index":543,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.formattedphone",{"_index":729,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["this.http.post(this.createcompleteroute(this.envurl.apiurl",{"_index":406,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.isuserauthenticated",{"_index":665,"title":{},"body":{"components/NavComponent.html":{}}}],["this.jwthelper.decodetoken(accesstoken",{"_index":427,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.jwthelper.istokenexpired(accesstoken",{"_index":412,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.loginform",{"_index":614,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls[controlname].haserror(errorname",{"_index":619,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls[controlname].invalid",{"_index":616,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls[controlname].touched",{"_index":617,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.name",{"_index":660,"title":{},"body":{"components/NavComponent.html":{}}}],["this.notificationservice.showerror(\"something",{"_index":485,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.notificationservice.showerror(error.error",{"_index":477,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.notificationservice.showerror(errorsasstring",{"_index":473,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.passwordmatchvalidator",{"_index":791,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.phonenumber",{"_index":1006,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.previousurl",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.previousurl.asobservable",{"_index":967,"title":{},"body":{"injectables/UrlService.html":{}}}],["this.previousurl.next(previousurl",{"_index":968,"title":{},"body":{"injectables/UrlService.html":{}}}],["this.previousurl?.includes(routing_auth",{"_index":1018,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.previousurl?.includes(routing_forgot_password",{"_index":1019,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.registerform",{"_index":777,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['email'].haserror('email",{"_index":815,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['email'].haserror('required",{"_index":814,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['firstname'].haserror('pattern",{"_index":817,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['firstname'].haserror('required",{"_index":816,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['lastname'].haserror('pattern",{"_index":819,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['lastname'].haserror('required",{"_index":818,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.resetpasswordform",{"_index":849,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.responsedata",{"_index":848,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.responsedata?.phonenumber",{"_index":1007,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.returnurl",{"_index":513,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.role",{"_index":662,"title":{},"body":{"components/NavComponent.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":514,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.router.events",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.getcurrentnavigation",{"_index":864,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["this.router.navigate",{"_index":856,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/auth",{"_index":515,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/NavComponent.html":{}}}],["this.router.navigate(['/forbidden",{"_index":44,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.router.navigate([navigationurl",{"_index":1021,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.router.navigate([routing_auth",{"_index":310,"title":{},"body":{"guards/AuthGuard.html":{},"components/PhoneConfirmationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.router.navigate([routing_verify_phone",{"_index":548,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate([this.returnurl",{"_index":629,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigatebyurl(not_found",{"_index":479,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.router.navigatebyurl(server_error",{"_index":484,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.sendauthstatechangenotification(false",{"_index":409,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.storageservice.watchstorageitem(authenticated_user).subscribe(data",{"_index":657,"title":{},"body":{"components/NavComponent.html":{}}}],["this.storageservice.watchstorageitem(first_name).subscribe(data",{"_index":659,"title":{},"body":{"components/NavComponent.html":{}}}],["this.storageservice.watchstorageitem(user_role).subscribe(data",{"_index":661,"title":{},"body":{"components/NavComponent.html":{}}}],["this.toastr.error(messages",{"_index":714,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.toastr.info(message",{"_index":715,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.toastr.success(message",{"_index":713,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.toastr.warning(message",{"_index":716,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.tryrefreshingtokens(accesstoken",{"_index":308,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.urlservice.previousurl$.subscribe((previousurl",{"_index":1008,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.urlservice.setpreviousurl(this.previousurl",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["this.username",{"_index":658,"title":{},"body":{"components/NavComponent.html":{}}}],["this.userphone",{"_index":727,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["this.userphone.substring(0",{"_index":730,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["this.userphone.substring(3",{"_index":732,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["this.userphone.substring(6",{"_index":734,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["this.validationerrors",{"_index":630,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.verifyphoneform",{"_index":1002,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.verifyphoneform.value.verifycode",{"_index":1009,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["throwerror",{"_index":459,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(error",{"_index":490,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["title",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"injectables/NotificationService.html":{}}}],["toast",{"_index":951,"title":{},"body":{"modules/SharedModule.html":{}}}],["toastr",{"_index":702,"title":{},"body":{"injectables/NotificationService.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["toastrmodule",{"_index":945,"title":{},"body":{"modules/SharedModule.html":{}}}],["toastrmodule.forroot",{"_index":949,"title":{},"body":{"modules/SharedModule.html":{}}}],["toastrservice",{"_index":700,"title":{},"body":{"injectables/NotificationService.html":{}}}],["toggle",{"_index":905,"title":{},"body":{"modules/SharedModule.html":{}}}],["token",{"_index":299,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["token.ts",{"_index":571,"title":{},"body":{"interfaces/JwtTokenDto.html":{},"coverage.html":{}}}],["tokengetter",{"_index":948,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tokens",{"_index":314,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/JwtTokenDto.html":{}}}],["tools",{"_index":878,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["top:5px",{"_index":566,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["trace",{"_index":892,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["transfer",{"_index":572,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["transportation",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/PhoneConfirmationComponent.html":{},"index.html":{}}}],["transportationclient",{"_index":1090,"title":{},"body":{"index.html":{}}}],["tree",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["true",{"_index":43,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":312,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tryrefreshingtokens",{"_index":281,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tryrefreshingtokens(accesstoken",{"_index":289,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tslib",{"_index":1075,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":19,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":352,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"injectables/AuthorizationService.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["unexpected",{"_index":486,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["unit",{"_index":1124,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":288,"title":{},"body":{"guards/AuthGuard.html":{}}}],["until",{"_index":1025,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["update",{"_index":671,"title":{},"body":{"components/NavComponent.html":{}}}],["url",{"_index":883,"title":{},"body":{"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["url.service",{"_index":304,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["url.service.ts",{"_index":440,"title":{},"body":{"injectables/EnvironmentUrlService.html":{},"coverage.html":{}}}],["url.service.ts:9",{"_index":442,"title":{},"body":{"injectables/EnvironmentUrlService.html":{}}}],["urlservice",{"_index":74,"title":{"injectables/UrlService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ResetPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["use",{"_index":823,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["useclass",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":520,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/enumerations.html":{}}}],["user's",{"_index":583,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["userforauthdto",{"_index":621,"title":{},"body":{"components/LoginComponent.html":{}}}],["userforregistrationdto",{"_index":342,"title":{"interfaces/UserForRegistrationDto.html":{}},"body":{"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"coverage.html":{}}}],["username",{"_index":598,"title":{},"body":{"components/LoginComponent.html":{},"components/NavComponent.html":{}}}],["userphone",{"_index":723,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["using",{"_index":315,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["valid",{"_index":590,"title":{},"body":{"interfaces/JwtTokenDto.html":{},"components/RegisterComponent.html":{}}}],["validatecontrol",{"_index":599,"title":{},"body":{"components/LoginComponent.html":{}}}],["validation",{"_index":846,"title":{"classes/Validation.html":{}},"body":{"components/ResetPasswordComponent.html":{},"classes/Validation.html":{},"coverage.html":{}}}],["validation.match('password",{"_index":851,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["validationerrors",{"_index":600,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["validator",{"_index":790,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validatorfn",{"_index":975,"title":{},"body":{"classes/Validation.html":{}}}],["validators",{"_index":537,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["validators.compose",{"_index":784,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.compose([validators.email",{"_index":783,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.compose([validators.maxlength(20",{"_index":779,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.compose([validators.maxlength(this.codelength",{"_index":1004,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["validators.compose([validators.minlength(3",{"_index":786,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.compose([validators.required",{"_index":785,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(this.passwordminlength",{"_index":850,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["validators.pattern('[a",{"_index":780,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":544,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["value",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["variable",{"_index":1039,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1151,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification",{"_index":402,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["verified",{"_index":1026,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["verify",{"_index":582,"title":{},"body":{"interfaces/JwtTokenDto.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["verifycode",{"_index":1003,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["verifyphone",{"_index":370,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["verifyphonecomponent",{"_index":156,"title":{"components/VerifyPhoneComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["verifyphoneform",{"_index":991,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["version",{"_index":1105,"title":{},"body":{"index.html":{}}}],["via",{"_index":1128,"title":{},"body":{"index.html":{}}}],["visibility",{"_index":633,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["visibility_off",{"_index":632,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["void",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["w",{"_index":829,"title":{},"body":{"components/RegisterComponent.html":{}}}],["way",{"_index":1013,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["webb",{"_index":669,"title":{},"body":{"components/NavComponent.html":{}}}],["went",{"_index":487,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["whether",{"_index":788,"title":{},"body":{"components/RegisterComponent.html":{}}}],["white",{"_index":684,"title":{},"body":{"components/NavComponent.html":{}}}],["width",{"_index":269,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["width:100",{"_index":639,"title":{},"body":{"components/LoginComponent.html":{}}}],["width:50",{"_index":502,"title":{},"body":{"components/FooterComponent.html":{}}}],["width:500px",{"_index":276,"title":{},"body":{"components/AuthComponent.html":{},"components/LoginComponent.html":{}}}],["width:75",{"_index":635,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["width:90",{"_index":827,"title":{},"body":{"components/RegisterComponent.html":{}}}],["works",{"_index":438,"title":{},"body":{"components/DashboardComponent.html":{},"components/ManageTemplatesComponent.html":{}}}],["wrong",{"_index":488,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["z",{"_index":782,"title":{},"body":{"components/RegisterComponent.html":{}}}],["za",{"_index":781,"title":{},"body":{"components/RegisterComponent.html":{}}}],["zip",{"_index":825,"title":{},"body":{"components/RegisterComponent.html":{}}}],["zipcode",{"_index":350,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["zone.js",{"_index":1077,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/admin.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authorizationService: AuthorizationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/admin.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/admin.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { AuthorizationService } from '../services/authorization.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n  constructor(private authorizationService: AuthorizationService, private router: Router) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.authorizationService.isUserAdmin())\n      return true;\n\n    this.router.navigate(['/forbidden']), { queryParams: { returnUrl: state.url }};\n      return false;\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUrl\n                            \n                            \n                                previousUrl\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, urlService: UrlService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        urlService\n                                                  \n                                                        \n                                                                        UrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Rock Transportation'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { AuthenticationService } from './core/authentication/authentication.service';\nimport { UrlService } from './core/services/url.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'Rock Transportation';\n  previousUrl: string | null = null;\n  currentUrl: string | null = null;\n\n  constructor(private authService: AuthenticationService,\n    private urlService: UrlService,\n    private router: Router) {}\n\n  ngOnInit(): void {\n    if (this.authService.isUserAuthenticated()) {\n      this.authService.sendAuthStateChangeNotification(true);\n    }\n\n    this.router.events \n      .subscribe((event:Event) => {\n        if (event instanceof NavigationEnd) {\n          this.previousUrl = this.currentUrl;\n          this.currentUrl = event.url;\n          this.urlService.setPreviousUrl(this.previousUrl);\n        }\n      })\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n    \n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                content {\n    min-height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n}\n\nmain {\n    flex-grow: 1;\n}\n\napp-nav, main, app-footer {\n    flex-shrink: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAppModule -->\n\nAuthComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nForbiddenComponent\n\nForbiddenComponent\n\nAppModule -->\n\nForbiddenComponent->AppModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAppModule -->\n\nForgotPasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nManageTemplatesComponent\n\nManageTemplatesComponent\n\nAppModule -->\n\nManageTemplatesComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nPhoneConfirmationComponent\n\nPhoneConfirmationComponent\n\nAppModule -->\n\nPhoneConfirmationComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nServerErrorComponent\n\nServerErrorComponent\n\nAppModule -->\n\nServerErrorComponent->AppModule\n\n\n\n\n\nVerifyPhoneComponent\n\nVerifyPhoneComponent\n\nAppModule -->\n\nVerifyPhoneComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nUrlService\n\nUrlService\n\nAppModule -->\n\nUrlService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AuthComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            ForbiddenComponent\n                        \n                        \n                            ForgotPasswordComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            ManageTemplatesComponent\n                        \n                        \n                            NavComponent\n                        \n                        \n                            NotFoundComponent\n                        \n                        \n                            PhoneConfirmationComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            ResetPasswordComponent\n                        \n                        \n                            ServerErrorComponent\n                        \n                        \n                            VerifyPhoneComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ErrorInterceptor\n                        \n                        \n                            UrlService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { NavComponent } from './core/header/nav.component';\n\nimport { SharedModule } from './shared/shared.module';\nimport { FooterComponent } from './core/footer/footer.component';\nimport { NotFoundComponent } from './modules/errors/pages/not-found/not-found.component';\nimport { ServerErrorComponent } from './modules/errors/pages/server-error/server-error.component';\nimport { AuthComponent } from './modules/account/auth/auth.component';\nimport { RegisterComponent } from './modules/account/auth/register/register.component';\nimport { LoginComponent } from './modules/account/auth/login/login.component';\n\nimport { NgxMaskModule } from 'ngx-mask';\nimport { ErrorInterceptor } from './core/interceptors/error.interceptor';\nimport { VerifyPhoneComponent } from './modules/account/phone/verify-phone/verify-phone.component';\nimport { ForgotPasswordComponent } from './modules/account/password/forgot-password/forgot-password.component';\nimport { DashboardComponent } from './modules/dashboard/pages/dashboard/dashboard.component';\nimport { ManageTemplatesComponent } from './modules/church-services/manage-templates/manage-templates.component';\nimport { ForbiddenComponent } from './modules/errors/pages/forbidden/forbidden.component';\nimport { ResetPasswordComponent } from './modules/account/password/reset-password/reset-password.component';\nimport { PhoneConfirmationComponent } from './modules/account/phone/phone-confirmation/phone-confirmation.component';\n\nimport { UrlService } from './core/services/url.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    FooterComponent,\n    NotFoundComponent,\n    ServerErrorComponent,\n    AuthComponent,\n    RegisterComponent,\n    LoginComponent,\n    VerifyPhoneComponent,\n    ForgotPasswordComponent,\n    DashboardComponent,\n    ManageTemplatesComponent,\n    ForbiddenComponent,\n    ResetPasswordComponent,\n    PhoneConfirmationComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgxMaskModule.forRoot()\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true\n    },  \n    UrlService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NotFoundComponent } from './modules/errors/pages/not-found/not-found.component';\nimport { AuthComponent } from './modules/account/auth/auth.component';\nimport { ServerErrorComponent } from './modules/errors/pages/server-error/server-error.component';\nimport { VerifyPhoneComponent } from './modules/account/phone/verify-phone/verify-phone.component';\nimport { PhoneConfirmationComponent } from './modules/account/phone/phone-confirmation/phone-confirmation.component';\nimport { ForgotPasswordComponent } from './modules/account/password/forgot-password/forgot-password.component';\nimport { DashboardComponent } from './modules/dashboard/pages/dashboard/dashboard.component';\nimport { AuthGuard } from './core/guards/auth.guard';\nimport { ManageTemplatesComponent } from './modules/church-services/manage-templates/manage-templates.component';\nimport { ForbiddenComponent } from './modules/errors/pages/forbidden/forbidden.component';\nimport { AdminGuard } from './core/guards/admin.guard';\nimport { ResetPasswordComponent } from './modules/account/password/reset-password/reset-password.component';\nimport { NOT_FOUND, ROUTING_AUTH, ROUTING_CONFIRM_PHONE, ROUTING_FORBIDDEN, ROUTING_FORGOT_PASSWORD, ROUTING_MANAGE_TEMPLATES, ROUTING_RESET_PASSWORD, ROUTING_VERIFY_PHONE, SERVER_ERROR } from './app.constants';\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: ROUTING_AUTH, component: AuthComponent },\n  { path: ROUTING_FORBIDDEN, component: ForbiddenComponent },\n  { path: ROUTING_VERIFY_PHONE, component: VerifyPhoneComponent },\n  { path: ROUTING_CONFIRM_PHONE, component: PhoneConfirmationComponent },\n  { path: ROUTING_FORGOT_PASSWORD, component: ForgotPasswordComponent },\n  { path: ROUTING_RESET_PASSWORD, component: ResetPasswordComponent },\n  { path: ROUTING_MANAGE_TEMPLATES, component: ManageTemplatesComponent, canActivate: [AuthGuard,AdminGuard] },\n  { path: NOT_FOUND, component: NotFoundComponent },\n  { path: SERVER_ERROR, component: ServerErrorComponent },\n  { path: '**', redirectTo: '/404', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/auth/auth.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                styleUrls\n                ./auth.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/auth/auth.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/auth/auth.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n  Congratulations! You were successfully registered!\n  There was an issue resetting your password\n  You have successfully changed your password\n  -->\n\n  \n    \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./auth.component.scss\n                \n                .auth-container\n{\n  width: 500px;\n  margin: 2% auto;\n}\n@media( max-width:500px )\n{\n  .auth-container\n  {\n    width: 300px;\n  }\n}\n@media ( max-width: 300px )\n{\n  .auth-container\n  {\n    width: 250px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Congratulations! You were successfully registered!  There was an issue resetting your password  You have successfully changed your password  -->                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                    Async\n                                tryRefreshingTokens\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, http: HttpClient, envUrl: EnvironmentUrlService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        envUrl\n                                                  \n                                                        \n                                                                        EnvironmentUrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/auth.guard.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        tryRefreshingTokens\n                        \n                    \n                \n            \n            \n                \n                    \n                    tryRefreshingTokens(accessToken: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/auth.guard.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accessToken\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { ACCESS_TOKEN, REFRESH_TOKEN, API_TOKENS_REFRESH, ROUTING_AUTH } from 'src/app/app.constants';\nimport { JwtTokenDto } from 'src/app/shared/models/jwt-token';\nimport { AuthResponseDto } from 'src/app/shared/models/response';\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { EnvironmentUrlService } from '../services/environment-url.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthenticationService, \n    private router: Router,\n    private http: HttpClient,\n    private envUrl: EnvironmentUrlService){}\n\n  async canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.authService.isUserAuthenticated()) {\n      return true;\n    }\n\n    const accessToken = localStorage.getItem(ACCESS_TOKEN);\n\n    const isRefreshSuccess = await this.tryRefreshingTokens(accessToken);\n    if (!isRefreshSuccess) {\n      this.authService.sendAuthStateChangeNotification(false);\n      this.router.navigate([ROUTING_AUTH], { queryParams: { returnUrl: state.url }});\n    }\n\n    this.authService.sendAuthStateChangeNotification(isRefreshSuccess);\n    return isRefreshSuccess;\n  }\n\n  private async tryRefreshingTokens(accessToken: string | null): Promise {\n    // Try refreshing tokens using refresh token\n    const refreshToken: string | null = localStorage.getItem(REFRESH_TOKEN);\n\n    if(!accessToken || !refreshToken) return false;\n\n    var jwtToken: JwtTokenDto = {accessToken: accessToken, refreshToken: refreshToken}; \n\n    let isRefreshSuccess: boolean;\n\n    try {\n      const response = await this.authService.refreshAuthentication(API_TOKENS_REFRESH, jwtToken).toPromise();\n\n      const newToken = response.accessToken;\n      const newRefreshToken = response.refreshToken;\n\n      localStorage.setItem(ACCESS_TOKEN, newToken);\n      localStorage.setItem(REFRESH_TOKEN, newRefreshToken);\n      isRefreshSuccess = true;\n    } catch(ex) {\n      isRefreshSuccess = false;\n    }\n\n    return isRefreshSuccess;\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthResponseDto.html":{"url":"interfaces/AuthResponseDto.html","title":"interface - AuthResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            isAuthSuccessful\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAuthSuccessful\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isAuthSuccessful:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RegistrationResponseDto {\n    isSuccessfulRegistration: boolean;\n    errors: string[];\n}\n\nexport interface AuthResponseDto {\n  isAuthSuccessful: boolean;\n  accessToken: string;\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthenticationDto.html":{"url":"interfaces/AuthenticationDto.html","title":"interface - AuthenticationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthenticationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/account.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PhoneNumberDto\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserForRegistrationDto extends AuthenticationDto {\n  email: string | null;\n  confirmPassword: string;\n  firstName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  city: string;\n  zipCode: string;\n}\n\nexport interface PhoneNumberDto {\n  phoneNumber: string | null | undefined;\n}\n\nexport interface AuthenticationDto extends PhoneNumberDto {\n  password: string;\n}\n\nexport interface ResetPasswordDto extends AuthenticationDto {\n  token: string;\n}\n\nexport interface PhoneVerificationDto extends PhoneNumberDto {\n  code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/authentication/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authChanged\n                            \n                            \n                                    Private\n                                authChangeSubject\n                            \n                            \n                                    Private\n                                createCompleteRoute\n                            \n                            \n                                    Public\n                                forgotPassword\n                            \n                            \n                                    Public\n                                isUserAuthenticated\n                            \n                            \n                                    Public\n                                loginUser\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                refreshAuthentication\n                            \n                            \n                                    Public\n                                registerUser\n                            \n                            \n                                    Public\n                                resetPassword\n                            \n                            \n                                    Public\n                                sendAuthStateChangeNotification\n                            \n                            \n                                    Public\n                                verifyPhone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, envUrl: EnvironmentUrlService, jwtHelper: JwtHelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/authentication.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        envUrl\n                                                  \n                                                        \n                                                                        EnvironmentUrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtHelper\n                                                  \n                                                        \n                                                                    JwtHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authChanged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.authChangeSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authChangeSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createCompleteRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        forgotPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isUserAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loginUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        refreshAuthentication\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        registerUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resetPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:66\n                        \n                    \n\n            \n                \n                     resetPassword sends a payload of body to the route and receives a password reset token.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    route\n                                                    \n                                                            The route to the api controller.\n\n                                                    \n                                            \n                                            \n                                                    body\n                                                    \n                                                            Payload of type ResetPasswordDto sent to the api controller on the backend\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendAuthStateChangeNotification\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        verifyPhone\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:52\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { AuthenticationDto, PhoneNumberDto, ResetPasswordDto, UserForRegistrationDto } from 'src/app/shared/models/account';\nimport { AuthResponseDto, RegistrationResponseDto } from 'src/app/shared/models/response';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { EnvironmentUrlService } from '../services/environment-url.service';\nimport { PhoneVerificationDto } from 'src/app/shared/models/phone-verification';\nimport { Subject } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { ACCESS_TOKEN, REFRESH_TOKEN } from 'src/app/app.constants';\nimport { JwtTokenDto } from 'src/app/shared/models/jwt-token';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n    constructor(private http: HttpClient,\n      private envUrl: EnvironmentUrlService, \n      private jwtHelper: JwtHelperService) { }\n\n    private authChangeSubject = new Subject()\n    public authChanged = this.authChangeSubject.asObservable();\n\n    public registerUser = (route: string, body: UserForRegistrationDto) => {\n      return this.http.post(this.createCompleteRoute(this.envUrl.apiUrl, route), body);\n    }\n\n    public loginUser = (route: string, body: AuthenticationDto) => {\n      return this.http.post(this.createCompleteRoute(this.envUrl.apiUrl, route), body);\n    }\n\n    public logout = () => {\n      localStorage.removeItem(ACCESS_TOKEN);\n      localStorage.removeItem(REFRESH_TOKEN);\n      this.sendAuthStateChangeNotification(false);\n    }\n\n    public sendAuthStateChangeNotification = (isAuthenticated:boolean) => {\n      this.authChangeSubject.next(isAuthenticated);\n    }\n\n    public isUserAuthenticated = () => {\n      const accessToken = localStorage.getItem(ACCESS_TOKEN);\n\n      return accessToken && !this.jwtHelper.isTokenExpired(accessToken);\n    }\n\n    public refreshAuthentication = (route: string, body: JwtTokenDto) => {\n      return this.http.post(this.createCompleteRoute(this.envUrl.apiUrl, route), body);\n    }\n\n    public verifyPhone = (route: string, body: PhoneVerificationDto) => {\n      return this.http.post(this.createCompleteRoute(this.envUrl.apiUrl, route), body);\n    }\n\n    public forgotPassword = (route: string, body: PhoneNumberDto) => {\n      return this.http.post(this.createCompleteRoute(this.envUrl.apiUrl, route), body);\n    }\n    \n    /**\n     *  resetPassword sends a payload of body to the route and receives a password reset token.\n     * @param route The route to the api controller.\n     * @param body Payload of type ResetPasswordDto sent to the api controller on the backend\n     * @returns Observable of type string. This string should represent a password reset token\n     */\n    public resetPassword = (route: string, body: ResetPasswordDto) => {\n      return this.http.post(this.createCompleteRoute(this.envUrl.apiUrl, route), body);\n    }\n\n    private createCompleteRoute = (envAddress: string, route: string) => {\n      return `${envAddress}/${route}`;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isUserAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, envUrl: EnvironmentUrlService, jwtHelper: JwtHelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/authorization.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        envUrl\n                                                  \n                                                        \n                                                                        EnvironmentUrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtHelper\n                                                  \n                                                        \n                                                                    JwtHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isUserAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/authorization.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { ACCESS_TOKEN, IDENTITY_ROLES } from 'src/app/app.constants';\nimport { Roles } from 'src/app/shared/models/roles';\nimport { EnvironmentUrlService } from './environment-url.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizationService {\n\n  constructor(private http: HttpClient,\n    private envUrl: EnvironmentUrlService, \n    private jwtHelper: JwtHelperService) { }\n\n  public isUserAdmin = () => {\n    const accessToken = localStorage.getItem(ACCESS_TOKEN);\n    const decodedToken = accessToken !== null ? this.jwtHelper.decodeToken(accessToken) : undefined;\n    const role = decodedToken[IDENTITY_ROLES];\n    return role === Roles.administrator || Roles.superAdmin;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/dashboard/pages/dashboard/dashboard.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/dashboard/pages/dashboard/dashboard.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/dashboard/pages/dashboard/dashboard.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        dashboard works!\n\n    \n\n    \n                \n                    ./dashboard.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'dashboard works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EnvironmentUrlService.html":{"url":"injectables/EnvironmentUrlService.html","title":"injectable - EnvironmentUrlService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EnvironmentUrlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/environment-url.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/environment-url.service.ts:9\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.apiUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/environment-url.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnvironmentUrlService {\n\n    public apiUrl: string = environment.apiUrl;\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptors/error.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/interceptors/error.interceptor.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/interceptors/error.interceptor.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { NotificationService } from '../services/notification.service';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { catchError } from 'rxjs/operators';\nimport { NOT_FOUND, SERVER_ERROR } from 'src/app/app.constants';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router,\n    private notificationService: NotificationService) {}\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(request).pipe(\n      catchError(error => {\n        if (error) {\n          switch (error.status) {\n            case 400:\n              let errors: string[] = Object.values(error.error);\n              let errorsAsString = errors.join(\"\")\n              this.notificationService.showError(errorsAsString, error.statusText);\n              break;\n            case 401:\n              this.notificationService.showError(error.error, error.statusText);\n              break;\n            case 403: \n              this.notificationService.showError(error.error);\n              break;\n            case 404:\n              this.router.navigateByUrl(NOT_FOUND);\n              break;\n            case 406: \n              this.notificationService.showError(error.error);\n              break;\n            case 409:\n              this.notificationService.showError(error.error);\n              break;\n            case 500:\n              const navigationExtras: NavigationExtras = {state: {error: error.error}};\n              this.router.navigateByUrl(SERVER_ERROR, navigationExtras);\n              break;\n            default:\n              //this.notificationService.showError(\"Something unexpected went wrong\");\n              console.log(error);\n              break;\n          }\n        }\n        return throwError(error);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/footer/footer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/footer/footer.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n      \n    \n    \n \n    \n    \n  \n    \n\n    \n                \n                    ./footer.component.scss\n                \n                app-footer\n{\n    justify-content: flex-end;\n    justify-content: space-between;\n    padding: 0 2% 0 2%;\n}\nimg\n{\n    width:50%;\n    height:auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForbiddenComponent.html":{"url":"components/ForbiddenComponent.html","title":"component - ForbiddenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForbiddenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/errors/pages/forbidden/forbidden.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forbidden\n            \n\n            \n                styleUrls\n                ./forbidden.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forbidden.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                navigateToLogin\n                            \n                            \n                                    Private\n                                returnUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/errors/pages/forbidden/forbidden.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/errors/pages/forbidden/forbidden.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        navigateToLogin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/errors/pages/forbidden/forbidden.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/errors/pages/forbidden/forbidden.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forbidden',\n  templateUrl: './forbidden.component.html',\n  styleUrls: ['./forbidden.component.scss']\n})\nexport class ForbiddenComponent implements OnInit {\n\n  private returnUrl: string | undefined;\n\n  constructor(private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl']||'';\n  }\n\n  public navigateToLogin = () => {\n    this.router.navigate(['/auth'], { queryParams: { returnUrl: this.returnUrl }});\n  }\n\n}\n\n    \n\n    \n        Forbidden\n\n    This page is forbidden for you. Please log in with a different user\n    to access the requested page.\n\n\n    \n\n    \n                \n                    ./forbidden.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Forbidden    This page is forbidden for you. Please log in with a different user    to access the requested page.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForbiddenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/password/forgot-password/forgot-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                styleUrls\n                ./forgot-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forgotPasswordForm\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Private\n                                returnUrl\n                            \n                            \n                                    Public\n                                submit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/password/forgot-password/forgot-password.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/password/forgot-password/forgot-password.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        forgotPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/forgot-password/forgot-password.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/forgot-password/forgot-password.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/forgot-password/forgot-password.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        submit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/forgot-password/forgot-password.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IConfig } from 'ngx-mask';\nimport { API_ACCOUNTS_FORGOT_PASSWORD, ROUTING_VERIFY_PHONE } from 'src/app/app.constants';\nimport { AuthenticationService } from 'src/app/core/authentication/authentication.service';\nimport { ResetPasswordDto, PhoneNumberDto } from 'src/app/shared/models/account';\n\nexport let options: Partial | (() => Partial);\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  public forgotPasswordForm!: FormGroup;\n  public hide: boolean = true;\n  private returnUrl: string | undefined = undefined;\n\n  constructor(private authService: AuthenticationService,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.forgotPasswordForm = new FormGroup({\n      phone: new FormControl(\"\", [Validators.required])\n    })\n\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '';\n  }\n\n  public submit = (forgotPasswordForm: any) => {\n    var phoneNumberDto: PhoneNumberDto = { phoneNumber: forgotPasswordForm.phone}\n\n    this.authService.forgotPassword(API_ACCOUNTS_FORGOT_PASSWORD, phoneNumberDto)\n    .subscribe(() => {\n      this.router.navigate([ROUTING_VERIFY_PHONE], {state: {data: phoneNumberDto}});\n    })\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Enter your phone number\n      \n      \n        A verification code will be sent to your \n        phone to make sure you are the owner of this account. \n      \n      \n        \n          \n            Phone Number:\n            \n            phone\n            Required\n          \n\n          \n            Submit\n          \n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./forgot-password.component.scss\n                \n                .container {\n  margin: 20px auto 0;\n}\nmat-card {\n  text-align: center;\n  margin: 0 auto;\n}\nmat-card-header {\n  font-size: large;\n  justify-content: center;\n  margin-top:5px;\n  margin-bottom:10px;\n}\nmat-card-subtitle {\n  margin: 10px auto 10px;\n}\n\n@media ( max-width: 300px )\n{\n  .container\n  {\n    width: 240px;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Enter your phone number                    A verification code will be sent to your         phone to make sure you are the owner of this account.                                           Phone Number:                        phone            Required                                Submit                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtTokenDto.html":{"url":"interfaces/JwtTokenDto.html","title":"interface - JwtTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/jwt-token.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object to accept and pass tokens to the backend\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The access token represents the short-lived token passed back and forth\nto the backend to verify a user's authentication, thereby allowing access.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The refresh token represents the long-lived token persisting in the user's\naccount allowing for renewed access tokens as long as it is valid and not expired.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface JwtTokenDto {\n  /**\n   * The access token represents the short-lived token passed back and forth \n   * to the backend to verify a user's authentication, thereby allowing access. \n   */\n  accessToken: string;\n\n  /**\n   * The refresh token represents the long-lived token persisting in the user's \n   * account allowing for renewed access tokens as long as it is valid and not expired.\n   */\n  refreshToken: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/auth/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                    Public\n                                hasError\n                            \n                            \n                                hide\n                            \n                            \n                                    Public\n                                loginForm\n                            \n                            \n                                    Public\n                                loginUser\n                            \n                            \n                                password\n                            \n                            \n                                    Private\n                                returnUrl\n                            \n                            \n                                username\n                            \n                            \n                                    Public\n                                validateControl\n                            \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/auth/login/login.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/auth/login/login.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hasError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loginUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        validateControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Injectable, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { IConfig } from 'ngx-mask';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core/authentication/authentication.service';\nimport { AuthenticationDto } from 'src/app/shared/models/account';\nimport { ACCESS_TOKEN, API_ACCOUNTS_LOGIN, REFRESH_TOKEN } from 'src/app/app.constants';\n\nexport let options: Partial | (() => Partial);\n\n@Injectable({\n  providedIn:'root'\n})\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  public loginForm!: FormGroup;\n  username!: string;\n  password!: string;\n  hide: boolean = true;\n  validationErrors: string[] = [];\n  error: boolean = false;\n  private returnUrl: string | undefined;\n\n  constructor(private authService: AuthenticationService,\n    private router: Router, \n    private route: ActivatedRoute) {}\n\n    ngOnInit(): void {\n      this.loginForm = new FormGroup({\n        username: new FormControl(\"\", [Validators.required]),\n        password: new FormControl(\"\", [Validators.required])\n      })\n\n      this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '';\n    }\n    public validateControl = (controlName: string) => {\n      return this.loginForm.controls[controlName].invalid && this.loginForm.controls[controlName].touched\n    }\n    public hasError = (controlName: string, errorName: string) => {\n      return this.loginForm.controls[controlName].hasError(errorName)\n    }\n\n    public loginUser = (loginFormValue: any) => {\n      const login = {...loginFormValue};\n      const userForAuthDto: AuthenticationDto = {\n        phoneNumber: login.username,\n        password: login.password\n      }\n\n      this.authService.loginUser(API_ACCOUNTS_LOGIN, userForAuthDto)\n      .subscribe(result => {\n        localStorage.setItem(ACCESS_TOKEN, result.accessToken);\n        localStorage.setItem(REFRESH_TOKEN, result.refreshToken);\n        this.authService.sendAuthStateChangeNotification(result.isAuthSuccessful);\n        this.router.navigate([this.returnUrl]);\n      }, error => {\n        this.validationErrors = error;\n        console.log(this.validationErrors);\n      })\n    }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            Phone Number:\n            \n            phone\n            Required\n          \n\n          \n            Password\n            \n            {{hide ? 'visibility_off' : 'visibility'}}\n            Required\n          \n          \n            Log In\n          \n        \n        \n        \n          \n            Forgot Password?\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .login-form\n{\n  width:75%;\n  margin: 0 auto;\n}\n.center\n{\n  text-align:center;\n}\nmat-form-field\n{\n  display: block;\n  width:100%;\n}\nmat-card-footer\n{\n  margin: 10px auto 0;\n  text-align:center;\n}\n@media (max-width:500px)\n{\n  .container\n  {\n    width:100%;\n    margin: 10px auto;\n  }\n  .login-form\n  {\n    width:100%;\n    margin: 0 auto;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Phone Number:                        phone            Required                                Password                        {{hide ? \\'visibility_off\\' : \\'visibility\\'}}            Required                                Log In                                                        Forgot Password?                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageTemplatesComponent.html":{"url":"components/ManageTemplatesComponent.html","title":"component - ManageTemplatesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ManageTemplatesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/church-services/manage-templates/manage-templates.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manage-templates\n            \n\n            \n                styleUrls\n                ./manage-templates.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./manage-templates.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/church-services/manage-templates/manage-templates.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/church-services/manage-templates/manage-templates.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manage-templates',\n  templateUrl: './manage-templates.component.html',\n  styleUrls: ['./manage-templates.component.scss']\n})\nexport class ManageTemplatesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        manage-templates works!\n\n    \n\n    \n                \n                    ./manage-templates.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'manage-templates works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManageTemplatesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavComponent.html":{"url":"components/NavComponent.html","title":"component - NavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/header/nav.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav\n            \n\n            \n                styleUrls\n                ./nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isUserAuthenticated\n                            \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/header/nav.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/header/nav.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isUserAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/header/nav.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/header/nav.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../authentication/authentication.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent {\n  public isUserAuthenticated:boolean | undefined;\n/*\n  userName: string;\n  role: string;\n  name: string;\n  email: string;\n\n  constructor(public basicAuthenticationService: BasicAuthenticationService,\n              private storageService: StorageService) {\n    this.storageService.watchStorageItem(AUTHENTICATED_USER).subscribe(data => this.userName = data);\n    this.storageService.watchStorageItem(FIRST_NAME).subscribe(data => this.name = data);\n    this.storageService.watchStorageItem(USER_ROLE).subscribe(data => this.role = data);\n  }\n  */\n constructor(private authService:AuthenticationService, private router: Router){\n   this.authService.authChanged\n   .subscribe(result => {\n     this.isUserAuthenticated = result;\n   })\n }\n\n  ngOnInit(): void {\n    this.authService.authChanged\n    .subscribe(result =>{\n      this.isUserAuthenticated = result;\n    })\n  }\n\n  public logout = () => {\n    this.authService.logout();\n    this.router.navigate(['/auth']);\n  }\n}\n\n    \n\n    \n        \n    \n      Jacob Webb -->\n      \n        Log In / Register\n        Logout\n        \n          \n          \n            Update Contact Info\n            Change Password\n            Logout\n          \n        \n      \n      \n        menu\n        \n          \n          Log in / Register\n          \n        \n      \n     \n  \n  \n\n    \n\n    \n                \n                    ./nav.component.scss\n                \n                .navbar\n{\n  justify-content: flex-end;\n  // justify-content: space-between;\n  padding: 0 2% 0 1%;\n}\n\n.navbar a\n{\n  font-size: 0.9em;\n}\n\n@media (max-width: 499px){\n  .nav-menu-show\n  {\n    display: none;\n  }\n}\n@media (min-width: 500px){\n  .nav-menu-hide\n  {\n    display: none;\n  }\n}\n.logo\n{\n  font-family: 'Baskerville';\n  color: white;\n  text-decoration:none;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Jacob Webb -->              Log In / Register        Logout                                        Update Contact Info            Change Password            Logout                                      menu                            Log in / Register                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/errors/pages/not-found/not-found.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                styleUrls\n                ./not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/errors/pages/not-found/not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/errors/pages/not-found/not-found.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    Not Found\n    Return to home page\n\n    \n\n    \n                \n                    ./not-found.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Not Found    Return to home page'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showError\n                            \n                            \n                                showInfo\n                            \n                            \n                                showSuccess\n                            \n                            \n                                showWarning\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/notification.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(messages: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/notification.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    messages\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"\"\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInfo\n                        \n                    \n                \n            \n            \n                \nshowInfo(message: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/notification.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(message: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/notification.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showWarning\n                        \n                    \n                \n            \n            \n                \nshowWarning(message: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/notification.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(private toastr: ToastrService) { }\n\n  showSuccess(message: string, title: string) {\n    this.toastr.success(message, title);\n  }\n\n  showError(messages: string, title: string = \"\") {\n    this.toastr.error(messages, title);\n    \n  }\n\n  showInfo(message: string, title: string) {\n    this.toastr.info(message, title);\n  }\n\n  showWarning(message: string, title: string) {\n    this.toastr.warning(message, title);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhoneConfirmationComponent.html":{"url":"components/PhoneConfirmationComponent.html","title":"component - PhoneConfirmationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PhoneConfirmationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/phone/phone-confirmation/phone-confirmation.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirmation\n            \n\n            \n                styleUrls\n                ./phone-confirmation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./phone-confirmation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formattedPhone\n                            \n                            \n                                userPhone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/phone/phone-confirmation/phone-confirmation.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/phone/phone-confirmation/phone-confirmation.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formattedPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/phone-confirmation/phone-confirmation.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/phone-confirmation/phone-confirmation.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ROUTING_AUTH } from 'src/app/app.constants';\n\n@Component({\n  selector: 'app-confirmation',\n  templateUrl: './phone-confirmation.component.html',\n  styleUrls: ['./phone-confirmation.component.scss']\n})\nexport class PhoneConfirmationComponent implements OnInit {\n  userPhone: string = '';\n  formattedPhone: string | null = null;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.userPhone = history.state.data;\n    if (this.userPhone == '' || this.userPhone == undefined) \n      this.router.navigate([ROUTING_AUTH]);\n\n      this.formattedPhone = \"(\" + this.userPhone.substring(0, 3) + \")\" + this.userPhone.substring(3, 6) + \"-\" + this.userPhone.substring(6);\n  }\n\n}\n\n    \n\n    \n        The phone number {{formattedPhone}} was successfully registered for The Rock Church's Transportation app.\nPlease Log In to access the app.\n\n\n    \n\n    \n                \n                    ./phone-confirmation.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'The phone number {{formattedPhone}} was successfully registered for The Rock Church\\'s Transportation app.Please Log In to access the app.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhoneConfirmationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PhoneNumberDto.html":{"url":"interfaces/PhoneNumberDto.html","title":"interface - PhoneNumberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PhoneNumberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/account.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:     string | null | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserForRegistrationDto extends AuthenticationDto {\n  email: string | null;\n  confirmPassword: string;\n  firstName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  city: string;\n  zipCode: string;\n}\n\nexport interface PhoneNumberDto {\n  phoneNumber: string | null | undefined;\n}\n\nexport interface AuthenticationDto extends PhoneNumberDto {\n  password: string;\n}\n\nexport interface ResetPasswordDto extends AuthenticationDto {\n  token: string;\n}\n\nexport interface PhoneVerificationDto extends PhoneNumberDto {\n  code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PhoneVerificationDto.html":{"url":"interfaces/PhoneVerificationDto.html","title":"interface - PhoneVerificationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PhoneVerificationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/account.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PhoneNumberDto\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserForRegistrationDto extends AuthenticationDto {\n  email: string | null;\n  confirmPassword: string;\n  firstName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  city: string;\n  zipCode: string;\n}\n\nexport interface PhoneNumberDto {\n  phoneNumber: string | null | undefined;\n}\n\nexport interface AuthenticationDto extends PhoneNumberDto {\n  password: string;\n}\n\nexport interface ResetPasswordDto extends AuthenticationDto {\n  token: string;\n}\n\nexport interface PhoneVerificationDto extends PhoneNumberDto {\n  code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/auth/register/register.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                hide\n                            \n                            \n                                hideConfirm\n                            \n                            \n                                isUniqueEmail\n                            \n                            \n                                passwordMinLength\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                registerForm\n                            \n                            \n                                submitted\n                            \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEmailError\n                            \n                            \n                                getFirstNameError\n                            \n                            \n                                getLastNameError\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                passwordMatchValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/auth/register/register.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getEmailError\n                        \n                    \n                \n            \n            \n                \ngetEmailError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/auth/register/register.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     \"You must enter a value\" | \"Not a valid email\" | \"\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFirstNameError\n                        \n                    \n                \n            \n            \n                \ngetFirstNameError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/auth/register/register.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         \"\" | \"First name is required\" | \"Name can only contain letters\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLastNameError\n                        \n                    \n                \n            \n            \n                \ngetLastNameError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/auth/register/register.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         \"\" | \"Name can only contain letters\" | \"Last name is required\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/auth/register/register.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(formGroup: FormGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/auth/register/register.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formGroup\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideConfirm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUniqueEmail\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMinLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        register\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Injectable, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { IConfig } from 'ngx-mask';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core/authentication/authentication.service';\nimport { UserForRegistrationDto } from 'src/app/shared/models/account';\nimport { API_ACCOUNTS_REGISTRATION, ROUTING_VERIFY_PHONE } from 'src/app/app.constants';\nimport { Roles } from 'src/app/shared/models/roles';\n\nexport let options: Partial | (() => Partial);\n\n@Injectable({\n  providedIn:'root'\n})\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n    public registerForm: FormGroup;\n    validationErrors: string[] = [];\n    passwordMinLength = 3;\n    hide=true;\n    hideConfirm=true;\n    submitted=false;\n    isUniqueEmail=true;\n    phoneNumber = '';\n    error: boolean = false;\n\n  constructor(private authService: AuthenticationService,\n    private router: Router,\n    fb: FormBuilder) { \n        this.registerForm = fb.group({\n            'firstName':['', Validators.compose([Validators.maxLength(20), Validators.pattern('[a-zA-Z ]*'), Validators.required])],\n            'lastName':['', Validators.compose([Validators.maxLength(20), Validators.pattern('[a-zA-Z ]*'), Validators.required])],\n            'email':['', Validators.compose([Validators.email])],\n            'phoneNumber':['', Validators.compose([])],\n            'address1': ['', Validators.compose([Validators.required])],\n            'address2': [],\n            'city':['', Validators.compose([Validators.required])],\n            'zipCode':['', Validators.compose([Validators.required])],\n            'password':['', Validators.compose([Validators.minLength(3), Validators.required])],\n            'confirmPassword':['', Validators.compose([Validators.minLength(3), Validators.required])]\n        },{\n            // check whether or not our password and confirm password match\n            validator: this.passwordMatchValidator\n        })\n    }\n\n  ngOnInit(): void {\n  }\n\n  public register = (registerFormValue: any) => {\n\n    const formValues = { ...registerFormValue };\n    const user: UserForRegistrationDto = {\n      password: formValues.password,\n      confirmPassword: formValues.confirmPassword,\n      firstName: formValues.firstName.trim(),\n      lastName: formValues.lastName.trim(),\n      email: formValues.email !== '' ? formValues.email.trim() : null,\n      phoneNumber: formValues.phone,\n      address1: formValues.address1.trim(),\n      address2: formValues.address2 !== null ? formValues.address2.trim() : null,\n      city: formValues.city.trim(),\n      zipCode: formValues.zipCode.trim()\n    }\n\n    this.authService.registerUser(API_ACCOUNTS_REGISTRATION, user)\n      .subscribe(() => {\n        this.router.navigate([ROUTING_VERIFY_PHONE], {state: {data: user}});\n      }, error => {\n        if (error.status == 403) {\n          this.router.navigate([ROUTING_VERIFY_PHONE], {state: {data: formValues}});\n        }\n        this.validationErrors = error;\n      })\n  }\n\n  passwordMatchValidator(formGroup: FormGroup) {\n      const password: string = formGroup.get('password')?.value                 // get password from our password form control\n      const confirmPassword: string = formGroup.get('confirmPassword')?.value   // get password from our confirmPassword form control \n      // compare if the passwords match\n      if (password !== confirmPassword) {\n          formGroup.get('confirmPassword')?.setErrors({ NoPasswordMatch: true });\n      }\n  }\n\n  getEmailError() {\n      if (this.registerForm.controls['email'].hasError('required')) {\n          return 'You must enter a value';\n      }\n      return this.registerForm.controls['email'].hasError('email') ? 'Not a valid email' : '';\n  }\n\n  getFirstNameError() {\n    if (this.registerForm.controls['firstName'].hasError('required')) {\n      return 'First name is required';\n    }\n    return this.registerForm.controls['firstName'].hasError('pattern') ? 'Name can only contain letters' : '';\n  }\n\n  getLastNameError() {\n    if (this.registerForm.controls['lastName'].hasError('required')) {\n      return 'Last name is required';\n    }\n    return this.registerForm.controls['lastName'].hasError('pattern') ? 'Name can only contain letters' : '';\n  }\n\n}\n\n    \n\n    \n        \n    An unexpected error ocurred.\n    \n      \n        \n          \n  \n            \n              \n                First Name:\n                \n                {{getFirstNameError()}}\n              \n              \n                Last Name:\n                \n                {{getLastNameError()}}\n              \n            \n  \n            \n              \n                Email:\n                \n                mail\n                {{getEmailError()}}\n                This email is already in use\n              \n              \n                Phone:\n                \n                phone\n              \n            \n\n            \n\n              \n                Address 1:\n                \n              \n\n              \n                Address 2:\n                \n              \n\n              \n              \n                City:\n                \n              \n              \n                Zip Code:\n                \n              \n              \n              \n            \n  \n            \n              \n                Password:\n                \n                {{hide ? 'visibility_off' : 'visibility'}}\n                Password must be at least {{passwordMinLength}} characters\n              \n  \n              \n                Confirm Password:\n                \n                {{hideConfirm ? 'visibility_off' : 'visibility'}}\n                Passwords must match\n              \n            \n\n            \n              Register\n            \n\n          \n        \n      \n    \n  \n    \n\n    \n                \n                    ./register.component.scss\n                \n                .register-form\n{\n  width:90%;\n  margin: 0 auto;\n}\nbutton\n{\n  width:75%;\n}\n.w-one-third\n{\n  width: 33%;\n}\n.w-half\n{\n  width: 50%;\n}\nmat-form-field\n{\n  display: block;\n}\nmat-card-footer\n{\n  text-align:center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    An unexpected error ocurred.                                                                        First Name:                                {{getFirstNameError()}}                                            Last Name:                                {{getLastNameError()}}                                                                      Email:                                mail                {{getEmailError()}}                This email is already in use                                            Phone:                                phone                                                                    Address 1:                                                            Address 2:                                                                          City:                                                            Zip Code:                                                                                                                  Password:                                {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                Password must be at least {{passwordMinLength}} characters                                              Confirm Password:                                {{hideConfirm ? \\'visibility_off\\' : \\'visibility\\'}}                Passwords must match                                                    Register                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegistrationResponseDto.html":{"url":"interfaces/RegistrationResponseDto.html","title":"interface - RegistrationResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegistrationResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errors\n                                        \n                                \n                                \n                                        \n                                            isSuccessfulRegistration\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSuccessfulRegistration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isSuccessfulRegistration:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RegistrationResponseDto {\n    isSuccessfulRegistration: boolean;\n    errors: string[];\n}\n\nexport interface AuthResponseDto {\n  isAuthSuccessful: boolean;\n  accessToken: string;\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/password/reset-password/reset-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                styleUrls\n                ./reset-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Public\n                                hideConfirm\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                passwordMinLength\n                            \n                            \n                                    Public\n                                resetPasswordForm\n                            \n                            \n                                    Private\n                                responseData\n                            \n                            \n                                    Public\n                                submit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hideConfirm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        passwordMinLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resetPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        responseData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        submit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { API_ACCOUNTS_RESET_PASSWORD, ROUTING_AUTH } from 'src/app/app.constants';\nimport { AuthenticationService } from 'src/app/core/authentication/authentication.service';\nimport { UrlService } from 'src/app/core/services/url.service';\nimport Validation from 'src/app/shared/directives/validation';\nimport { ResetPasswordDto } from 'src/app/shared/models/account';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n  public resetPasswordForm!: FormGroup;\n  public password: string | null = null;\n  public passwordMinLength = 3;\n  public hide: boolean = true;\n  public hideConfirm: boolean = true;\n  public error: boolean = false;\n  private responseData: string | null = null;\n\n  constructor(private router: Router,\n    private authService: AuthenticationService) { }\n\n  ngOnInit(): void {\n    this.responseData = history.state.data;\n    if (this.responseData == '' || this.responseData == null) \n      this.router.navigate([ROUTING_AUTH]); \n\n    this.resetPasswordForm = new FormGroup({\n      password: new FormControl(\"\", [\n        Validators.required, \n        Validators.minLength(this.passwordMinLength)\n      ]),\n      confirmPassword: new FormControl(\"\", [Validators.required])\n    },\n    {\n      validators: [Validation.match('password', 'confirmPassword')]\n    });\n  }\n\n  public submit = (resetPasswordFormValue: any) => {\n    const formValue = { ...resetPasswordFormValue };\n    const resetPasswordDto: ResetPasswordDto = {\n      phoneNumber: this.responseData != null ? this.responseData : '',\n      password: formValue.password,\n      token: ''\n    }\n\n    this.authService.resetPassword(API_ACCOUNTS_RESET_PASSWORD, resetPasswordDto)\n      .subscribe(() => {\n        this.router.navigate([]);\n      })\n  }\n\n}\n\n    \n\n    \n        \n  An unexpected error ocurred.\n  \n    \n      \n        \n\n          \n            \n              Password:\n              \n              {{hide ? 'visibility_off' : 'visibility'}}\n              Password must be at least {{passwordMinLength}} characters\n            \n\n            \n              Confirm Password:\n              \n              {{hideConfirm ? 'visibility_off' : 'visibility'}}\n              Passwords must match\n            \n          \n\n          \n            Submit\n          \n\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./reset-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  An unexpected error ocurred.                                                        Password:                            {{hide ? \\'visibility_off\\' : \\'visibility\\'}}              Password must be at least {{passwordMinLength}} characters                                      Confirm Password:                            {{hideConfirm ? \\'visibility_off\\' : \\'visibility\\'}}              Passwords must match                                            Submit                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResetPasswordDto.html":{"url":"interfaces/ResetPasswordDto.html","title":"interface - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/account.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthenticationDto\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserForRegistrationDto extends AuthenticationDto {\n  email: string | null;\n  confirmPassword: string;\n  firstName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  city: string;\n  zipCode: string;\n}\n\nexport interface PhoneNumberDto {\n  phoneNumber: string | null | undefined;\n}\n\nexport interface AuthenticationDto extends PhoneNumberDto {\n  password: string;\n}\n\nexport interface ResetPasswordDto extends AuthenticationDto {\n  token: string;\n}\n\nexport interface PhoneVerificationDto extends PhoneNumberDto {\n  code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerErrorComponent.html":{"url":"components/ServerErrorComponent.html","title":"component - ServerErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ServerErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/errors/pages/server-error/server-error.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-server-error\n            \n\n            \n                styleUrls\n                ./server-error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./server-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/errors/pages/server-error/server-error.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/errors/pages/server-error/server-error.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/errors/pages/server-error/server-error.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.scss']\n})\nexport class ServerErrorComponent implements OnInit {\n  error: any;\n\n  constructor(private router: Router) { \n    const navigation = this.router.getCurrentNavigation();\n    this.error = navigation?.extras?.state?.error;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Internal server error - refreshing the page will make the error disappear!\n\n  Error: {{error.message}}\n  Note: If you are seeing this then Angular is probably not to blame\n  What to do next?\n  \n    Open the Chrome dev tools\n    Inspet the network tab\n    Examine the request URL - make sure it is correct\n    Reproduce the error in Postman - if we see the same response, then the issue is not with the Front End\n  \n  Following is the stack trace - this is where your investigation should start!\n  {{error.details}}\n\n\n    \n\n    \n                \n                    ./server-error.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Internal server error - refreshing the page will make the error disappear!  Error: {{error.message}}  Note: If you are seeing this then Angular is probably not to blame  What to do next?      Open the Chrome dev tools    Inspet the network tab    Examine the request URL - make sure it is correct    Reproduce the error in Postman - if we see the same response, then the issue is not with the Front End    Following is the stack trace - this is where your investigation should start!  {{error.details}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ServerErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Angular Material imports\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule } from '@angular/material/core'\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n// Angular CDK imports\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n// Toastr Notifications\nimport { ToastrModule } from 'ngx-toastr';\n\n// JWT \nimport { JwtModule } from '@auth0/angular-jwt';\nimport { ACCESS_TOKEN } from '../app.constants';\n\nexport function tokenGetter() {\n  return localStorage.getItem(ACCESS_TOKEN);\n}\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatProgressBarModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    FlexLayoutModule,\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right'\n    }),\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        allowedDomains: [\"localhost:5001\"],\n        disallowedRoutes: []\n      }\n    })\n  ],\n  exports: [\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatProgressBarModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    FlexLayoutModule,\n    ToastrModule\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UrlService.html":{"url":"injectables/UrlService.html","title":"injectable - UrlService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UrlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/url.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                previousUrl\n                            \n                            \n                                    Public\n                                previousUrl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setPreviousUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/url.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setPreviousUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPreviousUrl(previousUrl: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/url.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    previousUrl\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        previousUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/url.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        previousUrl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.previousUrl.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/url.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UrlService {\n  private previousUrl: BehaviorSubject = new BehaviorSubject(null);\n  public previousUrl$: Observable = this.previousUrl.asObservable();\n\n  constructor() {}\n\n  public setPreviousUrl(previousUrl: string | null) {\n    this.previousUrl.next(previousUrl);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserForRegistrationDto.html":{"url":"interfaces/UserForRegistrationDto.html","title":"interface - UserForRegistrationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserForRegistrationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/account.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthenticationDto\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address1\n                                        \n                                \n                                \n                                        \n                                            address2\n                                        \n                                \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            confirmPassword\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            zipCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address2:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zipCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserForRegistrationDto extends AuthenticationDto {\n  email: string | null;\n  confirmPassword: string;\n  firstName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  city: string;\n  zipCode: string;\n}\n\nexport interface PhoneNumberDto {\n  phoneNumber: string | null | undefined;\n}\n\nexport interface AuthenticationDto extends PhoneNumberDto {\n  password: string;\n}\n\nexport interface ResetPasswordDto extends AuthenticationDto {\n  token: string;\n}\n\nexport interface PhoneVerificationDto extends PhoneNumberDto {\n  code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Validation.html":{"url":"classes/Validation.html","title":"class - Validation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Validation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/validation.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                match\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        match\n                        \n                    \n                \n            \n            \n                \n                    \n                    match(controlName: string, checkControlName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/validation.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checkControlName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl, ValidatorFn } from \"@angular/forms\";\n\nexport default class Validation {\n  static match(controlName: string, checkControlName: string): ValidatorFn {\n    return (controls: AbstractControl) => {\n      const control = controls.get(controlName);\n      const checkControl = controls.get(checkControlName);\n\n      if (control == null || checkControl == null) {\n        return null; \n      }\n\n      if (checkControl.errors && !checkControl.errors.matching) {\n        return null;\n      }\n\n      if (control.value !== checkControl.value) {\n        controls.get(checkControlName)?.setErrors({ matching: true });\n        return { matching: true };\n      } else {\n        return null;\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VerifyPhoneComponent.html":{"url":"components/VerifyPhoneComponent.html","title":"component - VerifyPhoneComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VerifyPhoneComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/phone/verify-phone/verify-phone.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-phone\n            \n\n            \n                styleUrls\n                ./verify-phone.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./verify-phone.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                codeLength\n                            \n                            \n                                    Private\n                                phoneNumber\n                            \n                            \n                                    Private\n                                previousUrl\n                            \n                            \n                                    Private\n                                responseData\n                            \n                            \n                                validationErrors\n                            \n                            \n                                    Public\n                                verifyPhoneForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, urlService: UrlService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        urlService\n                                                  \n                                                        \n                                                                        UrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        verify\n                        \n                    \n                \n            \n            \n                \n                    \n                    verify()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        codeLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        previousUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        responseData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PhoneNumberDto | ResetPasswordDto | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        verifyPhoneForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IConfig } from 'ngx-mask';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthenticationService } from 'src/app/core/authentication/authentication.service';\nimport { API_ACCOUNTS_VERIFICATION, API_ACCOUNTS_CONFIRM, ROUTING_AUTH, ROUTING_CONFIRM_PHONE, ROUTING_FORGOT_PASSWORD, ROUTING_RESET_PASSWORD } from 'src/app/app.constants';\nimport { UrlService } from 'src/app/core/services/url.service';\nimport { PhoneNumberDto, PhoneVerificationDto, ResetPasswordDto } from 'src/app/shared/models/account';\n\nexport let options: Partial | (() => Partial);\n\n@Component({\n  selector: 'app-confirm-phone',\n  templateUrl: './verify-phone.component.html',\n  styleUrls: ['./verify-phone.component.scss']\n})\nexport class VerifyPhoneComponent implements OnInit {\n  public verifyPhoneForm: FormGroup;\n  codeLength: number = 6;\n  validationErrors: string[] = [];\n  private phoneNumber: string | null | undefined;\n  private responseData: PhoneNumberDto | ResetPasswordDto | null = null;\n  private previousUrl: string | null = null;\n\n  constructor(private authService: AuthenticationService,\n    private router: Router,\n    private urlService: UrlService,\n    fb: FormBuilder) { \n      this.verifyPhoneForm = fb.group ({\n        'verifyCode':['', Validators.compose([Validators.maxLength(this.codeLength), Validators.required])]\n      })\n    }\n\n    // Should accept an object with a phoneNumber property\n  ngOnInit(): void {\n    this.responseData = history.state.data;\n    if (this.responseData == null || this.responseData == undefined) \n      this.router.navigate([ROUTING_AUTH]); \n\n    this.phoneNumber = this.responseData?.phoneNumber;\n\n    this.urlService.previousUrl$.subscribe((previousUrl: string | null) => {\n      this.previousUrl = previousUrl;\n    })\n  }\n\n  public verify() {\n    const phoneVerificationDto: PhoneVerificationDto = {\n      code: this.verifyPhoneForm.value.verifyCode,\n      phoneNumber: this.phoneNumber\n    }\n\n    let apiUrl = '';\n    let navigationUrl = '';\n    console.log(\"Previous Url: \" + this.previousUrl)\n\n    /** \n    *  Branch which way verify phone sends its code. \n    *  If the previous page was the auth page, the user has registered and needs to verify and confirm the phone number.\n    *  If the previous page was the forgot-password page, we need to verify to and send a reset password token.\n    */\n    if (this.previousUrl?.includes(ROUTING_AUTH)) {\n      apiUrl = API_ACCOUNTS_CONFIRM;\n      navigationUrl = ROUTING_CONFIRM_PHONE;\n    } else if (this.previousUrl?.includes(ROUTING_FORGOT_PASSWORD)) {\n      apiUrl = API_ACCOUNTS_VERIFICATION;\n      navigationUrl = ROUTING_RESET_PASSWORD;\n    }\n  \n    this.authService.verifyPhone(apiUrl, phoneVerificationDto)\n    .subscribe(() => {\n      this.router.navigate([navigationUrl], {state: {data: phoneVerificationDto.phoneNumber}});\n    }, error => {\n      console.log(error);\n      this.validationErrors = error;\n    })\n  }\n}\n\n    \n\n    \n        \n \n    \n      \n\n        \n          Phone Verification\n        \n        Please enter the verification code that was sent to you to confirm your phone number.\n        Your account registration will not be complete until your phone number has been verified.\n        \n          Verification Code:\n          \n          Your verification code is required\n        \n\n        \n          Verify\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./verify-phone.component.scss\n                \n                mat-card {\n  text-align:center;\n  max-width: 80%;\n  margin:5% auto;\n}\nmat-card-header {\n  display:block;\n}\n\nmat-card-footer {\n  margin: 0 auto 10px;\n}\n#phone-verification {\n  text-align:center;\n  letter-spacing: 18px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                             Phone Verification                Please enter the verification code that was sent to you to confirm your phone number.        Your account registration will not be complete until your phone number has been verified.                  Verification Code:                    Your verification code is required                          Verify                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VerifyPhoneComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            ACCESS_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            API_ACCOUNTS_CONFIRM\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            API_ACCOUNTS_FORGOT_PASSWORD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            API_ACCOUNTS_LOGIN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            API_ACCOUNTS_REGISTRATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            API_ACCOUNTS_RESET_PASSWORD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            API_ACCOUNTS_VERIFICATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            API_TOKENS_REFRESH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            IDENTITY_ROLES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            NOT_FOUND\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            REFRESH_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            ROUTING_AUTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            ROUTING_CONFIRM_PHONE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            ROUTING_FORBIDDEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            ROUTING_FORGOT_PASSWORD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            ROUTING_MANAGE_TEMPLATES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            ROUTING_RESET_PASSWORD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            ROUTING_VERIFY_PHONE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            SERVER_ERROR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/app/core/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/header/nav.component.ts\n            \n            component\n            NavComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/environment-url.service.ts\n            \n            injectable\n            EnvironmentUrlService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/url.service.ts\n            \n            injectable\n            UrlService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/login/login.component.ts\n            \n            injectable\n            LoginComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/login/login.component.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/register/register.component.ts\n            \n            injectable\n            RegisterComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/register/register.component.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/account/password/forgot-password/forgot-password.component.ts\n            \n            component\n            ForgotPasswordComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/account/password/forgot-password/forgot-password.component.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/account/password/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/modules/account/phone/phone-confirmation/phone-confirmation.component.ts\n            \n            component\n            PhoneConfirmationComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/account/phone/verify-phone/verify-phone.component.ts\n            \n            component\n            VerifyPhoneComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/modules/account/phone/verify-phone/verify-phone.component.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/church-services/manage-templates/manage-templates.component.ts\n            \n            component\n            ManageTemplatesComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/dashboard/pages/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/errors/pages/forbidden/forbidden.component.ts\n            \n            component\n            ForbiddenComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/errors/pages/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/errors/pages/server-error/server-error.component.ts\n            \n            component\n            ServerErrorComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/directives/validation.ts\n            \n            class\n            Validation\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/account.ts\n            \n            interface\n            AuthenticationDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/account.ts\n            \n            interface\n            PhoneNumberDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/account.ts\n            \n            interface\n            PhoneVerificationDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/account.ts\n            \n            interface\n            ResetPasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/account.ts\n            \n            interface\n            UserForRegistrationDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/shared/models/jwt-token.ts\n            \n            interface\n            JwtTokenDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/response.ts\n            \n            interface\n            AuthResponseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/models/response.ts\n            \n            interface\n            RegistrationResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/shared.module.ts\n            \n            function\n            tokenGetter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.0.3\n        \n            @angular/cdk : ^12.2.3\n        \n            @angular/common : ~13.0.2\n        \n            @angular/compiler : ~13.0.2\n        \n            @angular/core : ~13.0.2\n        \n            @angular/flex-layout : ^12.0.0-beta.34\n        \n            @angular/forms : ~13.0.2\n        \n            @angular/material : ^12.2.3\n        \n            @angular/platform-browser : ~13.0.2\n        \n            @angular/platform-browser-dynamic : ~13.0.2\n        \n            @angular/router : ~13.0.2\n        \n            @auth0/angular-jwt : ^5.0.2\n        \n            ngx-mask : ^12.0.0\n        \n            ngx-toastr : ^14.1.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Roles   (src/.../roles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/models/roles.ts\n    \n        \n            \n                \n                    \n                        \n                        Roles\n                    \n                \n                        \n                            \n                                 superAdmin\n                            \n                        \n                        \n                            \n                                Value : SuperAdmin\n                            \n                        \n                        \n                            \n                                 administrator\n                            \n                        \n                        \n                            \n                                Value : Administrator\n                            \n                        \n                        \n                            \n                                 driver\n                            \n                        \n                        \n                            \n                                Value : Driver\n                            \n                        \n                        \n                            \n                                 user\n                            \n                        \n                        \n                            \n                                Value : User\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            tokenGetter   (src/.../shared.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/shared.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tokenGetter\n                        \n                    \n                \n            \n            \n                \ntokenGetter()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTransportationClient\nThis project is the client side for The Rock's Transportation app. \nError Handling\nLogic for handling errors returned from the server can be found at core/interceptors/error.interceptor.ts.\nLogic for handling errors caught before leaving the client side can be found at core/guards/\nUsing Angular CLI\nThis project was generated with Angular CLI version 13.0.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAppModule -->\n\nAuthComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nForbiddenComponent\n\nForbiddenComponent\n\nAppModule -->\n\nForbiddenComponent->AppModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAppModule -->\n\nForgotPasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nManageTemplatesComponent\n\nManageTemplatesComponent\n\nAppModule -->\n\nManageTemplatesComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nPhoneConfirmationComponent\n\nPhoneConfirmationComponent\n\nAppModule -->\n\nPhoneConfirmationComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nServerErrorComponent\n\nServerErrorComponent\n\nAppModule -->\n\nServerErrorComponent->AppModule\n\n\n\n\n\nVerifyPhoneComponent\n\nVerifyPhoneComponent\n\nAppModule -->\n\nVerifyPhoneComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nUrlService\n\nUrlService\n\nAppModule -->\n\nUrlService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        11 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACCESS_TOKEN   (src/.../app.constants.ts)\n                        \n                        \n                            API_ACCOUNTS_CONFIRM   (src/.../app.constants.ts)\n                        \n                        \n                            API_ACCOUNTS_FORGOT_PASSWORD   (src/.../app.constants.ts)\n                        \n                        \n                            API_ACCOUNTS_LOGIN   (src/.../app.constants.ts)\n                        \n                        \n                            API_ACCOUNTS_REGISTRATION   (src/.../app.constants.ts)\n                        \n                        \n                            API_ACCOUNTS_RESET_PASSWORD   (src/.../app.constants.ts)\n                        \n                        \n                            API_ACCOUNTS_VERIFICATION   (src/.../app.constants.ts)\n                        \n                        \n                            API_TOKENS_REFRESH   (src/.../app.constants.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            IDENTITY_ROLES   (src/.../app.constants.ts)\n                        \n                        \n                            NOT_FOUND   (src/.../app.constants.ts)\n                        \n                        \n                            options   (src/.../login.component.ts)\n                        \n                        \n                            options   (src/.../register.component.ts)\n                        \n                        \n                            options   (src/.../forgot-password.component.ts)\n                        \n                        \n                            options   (src/.../verify-phone.component.ts)\n                        \n                        \n                            REFRESH_TOKEN   (src/.../app.constants.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            ROUTING_AUTH   (src/.../app.constants.ts)\n                        \n                        \n                            ROUTING_CONFIRM_PHONE   (src/.../app.constants.ts)\n                        \n                        \n                            ROUTING_FORBIDDEN   (src/.../app.constants.ts)\n                        \n                        \n                            ROUTING_FORGOT_PASSWORD   (src/.../app.constants.ts)\n                        \n                        \n                            ROUTING_MANAGE_TEMPLATES   (src/.../app.constants.ts)\n                        \n                        \n                            ROUTING_RESET_PASSWORD   (src/.../app.constants.ts)\n                        \n                        \n                            ROUTING_VERIFY_PHONE   (src/.../app.constants.ts)\n                        \n                        \n                            SERVER_ERROR   (src/.../app.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ACCESS_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"accessToken\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        API_ACCOUNTS_CONFIRM\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"api/Accounts/PhoneConfirmation\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        API_ACCOUNTS_FORGOT_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"api/Accounts/ForgotPassword\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        API_ACCOUNTS_LOGIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"api/Accounts/Login\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        API_ACCOUNTS_REGISTRATION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"api/Accounts/Registration\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        API_ACCOUNTS_RESET_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"api/Accounts/ResetPassword\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        API_ACCOUNTS_VERIFICATION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"api/Accounts/PhoneVerification\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        API_TOKENS_REFRESH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"api/Tokens/Refresh\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IDENTITY_ROLES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NOT_FOUND\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '404'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REFRESH_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"refreshToken\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROUTING_AUTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'auth'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROUTING_CONFIRM_PHONE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'phone-confirmation'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROUTING_FORBIDDEN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'forbidden'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROUTING_FORGOT_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'forgot-password'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROUTING_MANAGE_TEMPLATES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'manage-templates'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROUTING_RESET_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'reset-password'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROUTING_VERIFY_PHONE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'verify-phone'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SERVER_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'server-error'\n                    \n                \n\n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false, \n  apiUrl: \"https://localhost:5001\"\n}\n                    \n                \n\n\n        \n    \n\n    src/app/modules/account/auth/login/login.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial | \n\n                    \n                \n\n\n        \n    \n\n    src/app/modules/account/auth/register/register.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial | \n\n                    \n                \n\n\n        \n    \n\n    src/app/modules/account/password/forgot-password/forgot-password.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial | \n\n                    \n                \n\n\n        \n    \n\n    src/app/modules/account/phone/verify-phone/verify-phone.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial | \n\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
