var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AccountService.html",[0,0.974,1,2.042]],["body/injectables/AccountService.html",[0,1.344,1,2.819,2,1.926,3,0.229,4,0.202,5,0.202,6,3.066,7,0.202,8,0.892,9,2.632,10,4.733,11,5.311,12,4.733,13,0.656,14,3.066,15,4.5,16,4.194,17,3.436,18,0.957,19,3.596,20,1.132,21,0.023,22,0.55,23,0.724,24,0.883,25,3.692,26,1.443,27,1.527,28,3.596,29,3.596,30,4.167,31,5.956,32,5.846,33,3.483,34,4.887,35,1.811,36,1.077,37,1.917,38,1.482,39,4.5,40,4.5,41,2.456,42,2.441,43,2.617,44,3.596,45,0.757,46,2.248,47,0.505,48,2.074,49,3.066,50,2.143,51,2.015,52,1.926,53,3.066,54,2.717,55,1.796,56,1.681,57,0.229,58,0.373,59,0.989,60,1.242,61,0.937,62,2.155,63,4.733,64,3.692,65,0.656,66,2.717,67,3.596,68,0.015,69,0.015]],["title/guards/AdminGuard.html",[70,2.674,71,2.417]],["body/guards/AdminGuard.html",[0,1.553,3,0.285,4,0.252,5,0.252,7,0.252,13,0.818,18,0.908,20,1.309,21,0.022,22,0.635,23,0.686,24,1.386,45,0.751,47,0.63,55,2.239,56,2.096,57,0.285,58,0.465,59,1.233,60,1.549,62,2.192,65,0.818,68,0.017,69,0.017,71,3.857,72,3.387,73,3.822,74,1.096,75,4.902,76,4.483,77,4.663,78,2.261,79,4.483,80,4.814,81,5.532,82,3.311,83,5.532,84,4.483,85,3.062,86,2.096,87,1.305,88,4.483,89,1.165,90,4.483,91,2.239,92,4.483,93,3.387,94,2.401,95,3.822,96,2.803]],["title/components/AppComponent.html",[97,0.308,98,0.869]],["body/components/AppComponent.html",[3,0.193,4,0.171,5,0.171,7,0.171,8,0.792,13,0.554,18,0.941,20,0.703,21,0.022,22,0.57,23,0.672,24,0.745,26,1.317,27,1.394,36,0.589,45,0.711,47,0.426,56,2.029,57,0.193,58,0.315,59,0.835,60,1.499,61,0.88,65,0.554,68,0.013,69,0.013,74,0.842,78,2.045,87,0.883,89,1.128,97,0.441,98,1.358,99,1.264,100,0.935,101,0.935,102,0.935,103,0.935,104,2.586,105,1.653,106,0.935,107,2.167,108,1.294,109,1.337,110,5.068,111,1.337,112,4.34,113,5.068,114,3.829,115,4.321,116,1.704,117,1.75,118,2.586,119,3.358,120,4.34,121,2.504,122,3.033,123,1.194,124,2.215,125,3.033,126,3.7,127,3.279,128,3.033,129,3.7,130,3.7,131,3.033,132,2.586,133,3.033,134,2.586,135,2.586,136,3.033,137,3.033,138,3.033,139,3.033,140,2.586,141,4.34,142,3.033,143,3.033,144,2.072,145,2.586,146,3.033,147,2.586,148,2.072,149,4.179,150,3.033,151,3.033,152,2.586,153,3.033,154,3.033,155,2.504,156,3.033,157,2.292,158,2.586,159,1.896,160,3.033,161,1.515,162,0.935,163,1.337,164,1.337,165,0.935,166,1.61,167,0.935,168,0.935,169,0.703,170,0.935,171,0.703,172,0.935,173,0.745,174,0.935,175,0.703,176,0.935,177,0.703,178,0.935,179,1.561,180,0.745,181,0.935,182,0.703,183,0.788,184,0.935,185,0.745,186,0.935,187,0.703,188,0.935,189,0.703,190,0.935,191,0.745,192,0.935,193,0.703,194,0.703,195,0.788,196,0.935,197,0.703,198,0.935,199,0.703,200,0.935,201,0.625,202,0.935,203,0.935]],["title/modules/AppModule.html",[204,2.674,205,2.417]],["body/modules/AppModule.html",[3,0.178,4,0.157,5,0.157,21,0.023,36,0.543,45,0.867,46,1.75,47,0.393,57,0.178,58,0.291,68,0.012,69,0.012,91,1.398,98,1.637,108,0.511,119,3.173,134,2.387,169,1.373,171,1.373,173,1.454,175,1.373,177,1.373,180,1.454,182,1.373,185,1.454,187,1.373,189,1.373,191,1.454,193,1.373,194,1.373,197,1.373,199,1.373,205,5.016,206,1.615,207,2.797,208,2.387,209,2.387,210,2.387,211,2.387,212,2.387,213,3.703,214,3.703,215,3.703,216,3.492,217,2.115,218,2.8,219,3.492,220,4.096,221,3.094,222,4.096,223,3.094,224,4.096,225,2.115,226,2.115,227,4.096,228,4.096,229,4.096,230,4.096,231,1.398,232,2.8,233,2.8,234,2.8,235,2.8,236,2.8,237,2.387,238,1.912,239,2.387,240,2.387,241,1.912,242,2.387,243,2.387,244,2.8,245,2.8,246,2.8,247,1.398,248,1.615,249,2.8,250,2.387,251,1.75,252,2.387,253,2.387,254,1.75,255,4.129,256,2.387,257,2.387,258,1.912,259,1.912,260,2.387,261,2.387,262,2.387,263,1.75,264,2.387,265,1.912,266,2.387,267,2.387,268,1.75,269,2.8,270,2.8,271,2.8,272,2.8]],["title/modules/AppRoutingModule.html",[204,2.674,213,2.212]],["body/modules/AppRoutingModule.html",[3,0.227,4,0.2,5,0.2,21,0.023,35,1.802,45,0.865,47,0.501,57,0.227,58,0.37,68,0.015,69,0.015,71,2.434,75,3.67,87,1.038,97,0.601,169,1.126,171,1.126,175,1.126,177,1.126,182,1.126,183,0.926,187,1.126,189,1.126,193,1.126,194,1.126,195,0.926,197,1.126,199,1.126,201,1.001,206,2.056,213,3.036,221,2.692,223,3.67,237,3.038,238,2.434,239,3.038,240,3.038,241,2.434,242,3.038,243,3.038,250,3.038,251,2.228,252,3.038,253,3.038,254,3.036,255,4.711,256,3.038,257,3.038,258,2.434,259,2.434,260,3.038,261,3.038,262,3.038,263,3.036,264,3.038,265,2.434,266,3.038,267,3.038,268,3.036,273,3.564,274,3.564,275,4.857,276,3.454,277,3.318,278,3.564,279,3.564,280,1.666,281,3.038,282,1.469,283,5.977,284,2.434,285,2.692,286,1.666,287,2.692,288,4.857,289,4.857,290,4.857,291,2.692,292,3.564,293,3.67,294,1.666,295,3.564,296,3.038]],["title/components/AuthComponent.html",[97,0.308,169,0.82]],["body/components/AuthComponent.html",[3,0.226,4,0.2,5,0.2,7,0.2,13,1.008,18,0.78,21,0.022,22,0.546,35,1.934,36,0.69,45,0.432,47,0.5,57,0.226,58,0.369,65,0.649,68,0.015,69,0.015,74,0.941,89,1.261,97,0.481,98,0.873,99,1.412,100,1.096,101,1.096,102,1.096,103,1.096,105,1.801,106,1.096,107,2.209,108,1.308,109,1.495,111,1.495,116,1.827,123,1.335,162,1.096,163,1.495,164,1.495,165,1.096,166,1.726,167,1.096,168,1.096,169,1.374,170,1.096,171,0.824,172,1.096,173,0.873,174,1.096,175,0.824,176,1.096,177,0.824,178,1.096,179,1.701,180,0.873,181,1.096,182,0.824,183,0.925,184,1.096,185,0.873,186,1.096,187,0.824,188,1.096,189,0.824,190,1.096,191,0.873,192,1.096,193,0.824,194,0.824,195,0.925,196,1.096,197,0.824,198,1.096,199,0.824,200,1.096,201,0.733,202,1.096,203,1.096,284,4.238,297,3.033,298,5.521,299,4.851,300,3.557,301,3.557,302,4.851,303,2.962,304,4.136,305,4.136,306,4.851,307,4.851,308,4.171,309,3.707,310,3.033,311,2.224,312,2.224,313,2.224,314,3.313,315,3.033,316,3.033,317,4.136,318,3.557]],["title/guards/AuthGuard.html",[70,2.674,277,2.417]],["body/guards/AuthGuard.html",[0,1.276,3,0.212,4,0.187,5,0.187,7,0.187,13,0.608,15,4.357,16,4.03,17,3.327,18,0.857,20,1.236,21,0.023,22,0.6,23,0.648,24,1.309,25,4.03,37,1.602,45,0.798,46,2.083,47,0.468,54,2.517,55,1.664,56,1.557,57,0.212,58,0.346,59,0.917,60,2.168,61,0.867,62,2.239,65,0.846,68,0.014,69,0.014,72,2.517,74,0.9,75,4.357,78,2.1,80,3.954,81,4.917,82,2.857,83,4.917,85,2.276,86,1.557,87,0.97,89,0.866,91,2.316,93,2.517,94,1.785,95,2.841,96,2.899,117,1.922,118,2.696,121,2.675,124,1.992,135,2.841,166,0.97,277,3.167,280,1.557,282,2.588,319,2.841,320,6.277,321,4.637,322,3.332,323,3.332,324,3.332,325,4.637,326,3.332,327,3.605,328,4.637,329,1.664,330,2.034,331,1.557,332,2.484,333,2.276,334,1.922,335,2.841,336,2.841,337,2.841,338,2.276,339,6.439,340,4.637,341,3.332,342,3.332,343,3.332,344,3.332,345,4.637,346,2.841,347,2.517,348,2.083,349,4.357,350,3.332,351,3.332,352,3.332,353,2.276,354,3.332,355,3.332,356,4.637,357,3.332,358,4.637,359,3.332,360,2.841,361,2.841,362,3.332]],["title/interfaces/AuthResponseDto.html",[334,2.042,363,1.03]],["body/interfaces/AuthResponseDto.html",[3,0.277,4,0.244,5,0.244,7,0.244,8,1.011,21,0.022,23,0.528,37,1.501,38,1.792,45,0.528,57,0.352,61,0.654,68,0.017,69,0.017,86,2.999,330,2.428,332,3.264,334,3.194,348,3.461,363,1.612,364,2.032,365,3.284,366,2.23,367,3.043,368,2.672,369,4.183,370,2.588,371,4.721,372,5.775,373,3.436,374,2.966,375,5.47,376,5.47,377,5.195,378,4.603,379,5.47,380,2.508,381,4.162,382,3.706,383,4.162,384,4.721,385,2.969,386,3.706,387,3.706,388,3.706]],["title/interfaces/AuthenticationDto.html",[363,1.03,389,1.654]],["body/interfaces/AuthenticationDto.html",[3,0.195,4,0.172,5,0.172,7,0.172,8,0.797,21,0.023,22,0.492,23,0.372,35,2.164,36,0.848,37,2.029,38,1.262,41,1.262,42,1.529,43,3.597,50,1.343,51,2.29,57,0.374,61,1.049,68,0.013,69,0.013,108,0.559,124,1.919,155,1.766,201,1.259,286,1.431,303,1.529,347,2.313,363,1.71,364,1.431,366,2.15,367,2.934,368,2.576,373,1.64,374,3.146,389,2.596,390,1.766,391,2.592,392,2.313,393,2.731,394,1.916,395,2.731,396,2.731,397,3.184,398,2.731,399,2.731,400,2.731,401,2.731,402,2.731,403,2.731,404,2.731,405,2.731,406,2.34,407,3.139,408,2.731,409,2.731,410,1.914,411,1.914,412,1.914,413,1.64,414,1.914,415,1.914,416,1.343,417,1.509,418,1.914,419,2.34,420,2.745,421,1.914,422,2.182,423,1.914,424,2.731,425,1.914,426,1.914,427,1.914,428,2.182,429,1.766,430,1.766,431,1.766,432,1.766,433,1.766,434,3.14,435,1.766,436,1.914,437,1.431,438,1.64,439,1.766,440,1.766,441,1.766,442,1.914,443,1.914,444,1.64,445,1.914,446,3.205,447,1.766,448,1.914,449,1.914,450,1.914,451,1.766,452,2.52,453,2.731,454,1.766,455,1.914,456,1.914,457,1.914,458,1.766,459,1.766]],["title/injectables/AuthenticationService.html",[0,0.974,118,1.654]],["body/injectables/AuthenticationService.html",[0,1.19,2,1.617,3,0.192,4,0.17,5,0.17,7,0.17,8,0.79,9,2.783,13,0.551,14,2.575,15,4.171,16,3.819,17,3.185,18,1.063,20,0.7,21,0.023,22,0.34,23,0.367,24,0.741,25,3.268,26,1.695,27,1.794,32,5.46,33,3.199,37,1.043,41,1.245,45,0.804,46,1.888,47,0.424,48,1.742,49,2.575,50,1.897,51,1.245,52,1.617,54,2.281,55,1.508,56,1.411,57,0.192,58,0.313,59,0.831,60,2.018,61,0.83,62,2.268,63,4.707,68,0.013,69,0.013,108,0.551,118,2.022,183,0.785,282,1.245,327,2.704,330,1.324,331,1.411,332,2.317,333,2.063,334,1.742,335,2.575,337,2.575,338,2.063,373,1.617,380,1.742,389,2.022,437,2.022,460,2.575,461,5.055,462,5.055,463,4.31,464,4.31,465,4.31,466,4.31,467,5.055,468,5.055,469,5.055,470,4.31,471,4.707,472,3.02,473,4.326,474,3.02,475,2.161,476,5.055,477,3.02,478,3.02,479,3.02,480,3.02,481,3.02,482,3.02,483,3.02,484,3.02,485,2.063,486,2.063,487,3.02,488,3.02,489,3.02,490,3.02,491,3.02,492,3.02,493,3.02,494,3.02]],["title/injectables/AuthorizationService.html",[0,0.974,77,2.417]],["body/injectables/AuthorizationService.html",[0,1.551,2,2.396,3,0.285,4,0.252,5,0.252,7,0.252,8,1.029,9,2.397,13,0.816,18,0.906,20,1.037,21,0.023,22,0.503,23,0.544,24,1.098,26,1.163,27,1.231,45,0.788,47,0.628,55,2.234,56,2.091,57,0.285,58,0.464,59,1.231,62,1.737,68,0.017,69,0.017,77,3.851,124,1.545,282,2.546,327,3.525,330,1.962,331,2.091,338,3.055,380,2.581,417,1.545,470,4.807,471,5.527,486,3.055,495,3.814,496,6.175,497,4.473,498,4.473,499,4.473,500,3.38,501,3.38,502,4.473,503,4.473,504,4.473,505,4.807,506,4.473,507,4.473,508,4.473]],["title/components/DashboardComponent.html",[97,0.308,171,0.82]],["body/components/DashboardComponent.html",[3,0.25,4,0.221,5,0.221,7,0.221,13,1.06,18,0.834,21,0.022,22,0.584,36,0.764,45,0.478,47,0.553,57,0.25,58,0.408,65,0.718,68,0.016,69,0.016,74,1.007,89,1.349,97,0.506,98,0.966,99,1.511,100,1.213,101,1.213,102,1.213,103,1.213,105,1.895,106,1.213,107,2.233,108,1.323,109,1.6,111,1.6,116,1.903,123,1.428,162,1.213,163,1.6,164,1.6,165,1.213,166,1.798,167,1.213,168,1.213,169,0.912,170,1.213,171,1.432,172,1.213,173,0.966,174,1.213,175,0.912,176,1.213,177,0.912,178,1.213,179,1.79,180,0.966,181,1.213,182,0.912,183,1.023,184,1.213,185,0.966,186,1.213,187,0.912,188,1.213,189,0.912,190,1.213,191,0.966,192,1.213,193,0.912,194,0.912,195,1.023,196,1.213,197,0.912,198,1.213,199,0.912,200,1.213,201,0.811,202,1.213,203,1.213,509,3.356,510,6.177,511,5.81,512,5.192,513,3.936,514,3.936,515,4.426]],["title/injectables/EnvironmentUrlService.html",[0,0.974,17,2.042]],["body/injectables/EnvironmentUrlService.html",[0,1.654,2,2.658,3,0.316,4,0.279,5,0.279,7,0.279,8,1.097,9,2.511,13,1.18,17,3.468,18,0.966,21,0.022,23,0.603,26,1.29,27,1.365,45,0.731,47,0.697,53,4.231,55,2.479,56,2.319,57,0.316,58,0.515,61,0.904,68,0.018,69,0.018,516,5.514,517,4.231,518,6.468,519,6.012,520,6.012,521,4.962]],["title/interceptors/ErrorInterceptor.html",[215,2.212,522,3.017]],["body/interceptors/ErrorInterceptor.html",[0,1.403,3,0.244,4,0.215,5,0.215,7,0.215,13,0.699,18,0.819,20,1.182,21,0.022,22,0.574,23,0.62,24,1.252,26,0.995,45,0.812,46,2.394,47,0.538,57,0.244,58,0.397,59,1.054,60,1.323,61,0.576,62,1.98,65,0.699,66,4.331,68,0.015,69,0.015,74,0.989,78,2.134,82,2.051,85,3.915,87,1.115,89,0.995,132,3.266,215,3.187,280,1.79,282,1.579,293,2.894,294,2.383,331,1.79,383,2.616,392,2.894,485,2.616,523,3.83,524,3.266,525,5.099,526,2.21,527,4.562,528,3.83,529,5.099,530,6.111,531,6.111,532,3.83,533,3.83,534,5.099,535,3.83,536,3.83,537,6.111,538,3.83,539,3.83,540,3.83,541,3.83,542,3.266,543,6.679,544,3.83,545,3.83,546,3.83,547,3.83,548,3.83,549,5.099,550,6.784,551,3.83,552,6.111,553,3.266,554,3.83,555,3.83,556,3.83,557,3.83,558,3.83,559,3.83,560,3.83,561,2.894,562,3.83,563,3.83,564,3.83,565,3.83]],["title/components/FooterComponent.html",[97,0.308,173,0.869]],["body/components/FooterComponent.html",[3,0.241,4,0.213,5,0.213,7,0.213,13,1.039,18,0.812,21,0.022,22,0.569,36,0.733,45,0.459,47,0.531,57,0.241,58,0.392,65,0.69,68,0.015,69,0.015,74,0.981,89,1.314,97,0.496,98,0.928,99,1.471,100,1.164,101,1.164,102,1.164,103,1.164,105,1.857,106,1.164,107,2.224,108,1.321,109,1.557,111,1.557,116,1.873,123,1.39,144,3.452,149,2.855,159,3.559,161,2.524,162,1.164,163,1.557,164,1.557,165,1.164,166,1.77,167,1.164,168,1.164,169,0.876,170,1.164,171,0.876,172,1.164,173,1.492,174,1.164,175,0.876,176,1.164,177,0.876,178,1.164,179,1.754,180,0.928,181,1.164,182,0.876,183,0.982,184,1.164,185,0.928,186,1.164,187,0.876,188,1.164,189,0.876,190,1.164,191,0.928,192,1.164,193,0.876,194,0.876,195,0.982,196,1.164,197,0.876,198,1.164,199,0.876,200,1.164,201,0.779,202,1.164,203,1.164,312,3.159,566,3.222,567,5.694,568,5.054,569,3.779,570,3.779,571,3.818,572,2.581,573,3.222,574,2.855,575,3.222,576,3.779,577,3.779,578,3.779]],["title/components/ForbiddenComponent.html",[97,0.308,175,0.82]],["body/components/ForbiddenComponent.html",[3,0.214,4,0.189,5,0.189,7,0.189,8,0.851,9,2.08,13,0.613,18,0.93,20,0.779,21,0.022,22,0.603,23,0.567,24,0.825,26,0.873,27,0.924,33,2.676,36,0.652,45,0.567,47,0.472,57,0.214,58,0.349,59,0.924,60,1.999,61,0.702,65,0.613,68,0.014,69,0.014,74,0.905,78,2.053,87,0.978,89,1.212,93,2.539,94,3.1,97,0.466,98,0.825,99,1.358,100,1.035,101,1.035,102,1.035,103,1.035,105,1.747,106,1.035,107,2.195,108,1.3,109,1.437,111,1.437,116,1.783,123,1.283,162,1.035,163,1.437,164,1.437,165,1.035,166,1.685,167,1.035,168,1.035,169,0.779,170,1.035,171,0.779,172,1.035,173,0.825,174,1.035,175,1.341,176,1.035,177,0.779,178,1.035,179,1.651,180,0.825,181,1.035,182,0.779,183,0.873,184,1.035,185,0.825,186,1.035,187,0.779,188,1.035,189,0.779,190,1.035,191,0.825,192,1.035,193,0.779,194,0.779,195,0.873,196,1.035,197,0.779,198,1.035,199,0.779,200,1.035,201,0.692,202,1.035,203,1.035,285,4.755,370,2.18,417,1.611,428,2.33,526,1.938,579,2.865,580,5.358,581,4.664,582,5.358,583,3.618,584,4.664,585,3.36,586,3.36,587,2.916,588,2.1,589,2.865,590,3.618,591,3.186,592,2.916,593,4.664,594,4.664]],["title/components/ForgotPasswordComponent.html",[97,0.308,177,0.82]],["body/components/ForgotPasswordComponent.html",[1,3.303,3,0.162,4,0.143,5,0.143,7,0.143,8,0.697,9,2.424,13,0.465,18,0.92,20,0.591,21,0.022,22,0.516,23,0.619,24,0.626,26,1.191,27,1.261,33,2.289,35,1.246,36,0.495,42,1.909,45,0.722,47,0.358,51,2.248,52,1.366,57,0.243,58,0.265,59,0.701,60,1.884,61,0.575,65,0.465,68,0.012,69,0.012,74,0.742,78,1.936,82,1.366,86,1.786,87,0.742,89,0.993,91,1.909,94,2.455,97,0.399,98,0.626,99,1.113,100,0.786,101,0.786,102,0.786,103,0.786,105,1.495,106,0.786,107,2.115,108,1.253,109,1.177,111,1.177,116,1.569,123,1.051,144,1.741,152,2.174,161,1.909,162,0.786,163,1.177,164,1.177,165,0.786,166,1.588,167,0.786,168,0.786,169,0.591,170,0.786,171,0.591,172,0.786,173,0.626,174,0.786,175,0.591,176,0.786,177,1.18,178,1.881,179,1.412,180,0.626,181,0.786,182,0.591,183,0.663,184,0.786,185,0.626,186,0.786,187,0.591,188,0.786,189,0.591,190,0.786,191,0.626,192,0.786,193,0.591,194,0.591,195,0.663,196,0.786,197,0.591,198,0.786,199,0.591,200,0.786,201,1.31,202,0.786,203,0.786,231,1.274,247,1.274,248,1.471,254,3.711,280,1.192,308,2.887,309,2.389,311,3.409,313,2.865,314,1.741,315,1.594,317,2.174,329,1.274,331,1.192,366,0.933,391,2.099,394,1.118,407,1.786,416,1.118,417,1.758,419,2.047,420,1.786,475,1.909,571,1.926,583,3.183,587,1.594,588,1.594,595,4.485,596,1.594,597,3.463,598,2.887,599,5.091,600,2.865,601,4.65,602,2.55,603,3.258,604,2.55,605,3.183,606,2.174,607,2.174,608,2.55,609,2.389,610,1.594,611,1.741,612,1.926,613,1.471,614,2.389,615,2.55,616,1.594,617,2.55,618,2.55,619,1.926,620,2.174,621,2.887,622,3.258,623,3.258,624,3.821,625,2.887,626,2.55,627,3.131,628,3.131,629,3.258,630,2.174,631,2.174,632,2.174,633,2.55,634,2.55,635,2.55,636,2.55,637,2.887,638,2.55]],["title/interfaces/JwtTokenDto.html",[332,1.895,363,1.03]],["body/interfaces/JwtTokenDto.html",[3,0.277,4,0.244,5,0.244,7,0.244,8,1.011,21,0.022,23,0.673,37,2.407,38,1.792,43,3.264,57,0.277,61,1.019,68,0.017,69,0.017,286,2.588,327,4.01,330,2.672,332,2.966,333,2.969,348,3.461,349,4.847,363,1.265,364,2.032,366,1.591,367,2.171,368,1.906,369,3.284,370,3.166,373,2.966,413,2.966,434,3.204,458,3.701,625,4.183,639,3.706,640,3.706,641,6.415,642,5.537,643,6.415,644,5.537,645,5.537,646,5.537,647,5.537,648,6.415,649,5.537,650,5.537,651,5.537]],["title/components/LoginComponent.html",[97,0.308,180,0.869]],["body/components/LoginComponent.html",[0,0.973,3,0.147,4,0.13,5,0.13,7,0.13,8,0.646,9,2.482,13,0.42,18,1.028,20,0.534,21,0.023,22,0.485,23,0.719,24,0.565,26,1.431,27,1.514,33,2.151,35,1.979,36,0.447,45,0.697,47,0.323,52,1.233,57,0.225,58,0.239,59,0.634,60,1.801,61,0.948,62,1.373,65,0.42,68,0.011,69,0.011,74,0.686,78,1.87,86,2.259,87,0.67,89,0.919,91,1.767,94,2.307,96,2.211,97,0.375,98,0.565,99,1.03,100,0.71,101,0.71,102,0.71,103,0.71,105,1.405,106,0.71,107,2.082,108,1.233,109,1.09,111,1.09,116,1.489,117,1.328,118,2.259,121,2.041,123,0.973,148,1.573,159,1.439,161,2.151,162,0.71,163,1.09,164,1.09,165,0.71,166,1.407,167,0.71,168,0.71,169,0.534,170,0.71,171,0.534,172,0.71,173,0.565,174,0.71,175,0.534,176,0.71,177,0.534,178,1.327,179,1.327,180,1.186,181,0.71,182,0.534,183,0.599,184,0.71,185,0.565,186,0.71,187,0.534,188,0.71,189,0.534,190,0.71,191,0.565,192,0.71,193,0.534,194,0.534,195,0.599,196,0.71,197,0.534,198,0.71,199,0.534,200,0.71,201,1.075,202,0.71,203,0.71,231,1.15,247,1.15,248,1.328,282,1.458,294,2.437,308,1.74,311,3.021,313,3.021,314,1.573,315,1.439,316,1.963,329,1.15,330,1.01,331,1.076,360,1.963,361,1.963,389,1.653,391,1.458,394,1.551,407,2.259,416,1.01,417,1.222,465,3.672,475,2.151,583,3.021,587,1.439,588,1.439,592,2.211,600,3.26,605,3.021,609,2.692,610,1.439,611,1.573,613,1.328,614,2.211,616,2.211,627,2.416,628,1.573,629,1.963,637,2.672,652,1.74,653,4.446,654,4.307,655,3.537,656,4.307,657,4.307,658,4.12,659,4.307,660,3.672,661,3.537,662,2.303,663,2.303,664,2.303,665,2.303,666,2.303,667,2.303,668,2.303,669,2.303,670,2.303,671,2.303,672,1.74,673,1.963,674,2.303,675,3.016,676,2.303,677,2.303,678,2.303,679,2.303,680,3.537,681,3.537,682,2.303,683,2.303,684,2.303,685,1.963,686,2.303,687,2.303,688,2.303,689,1.74,690,1.963,691,2.303,692,2.672,693,2.672,694,3.672,695,1.963,696,2.672,697,1.74,698,1.963,699,4.307]],["title/components/ManageTemplatesComponent.html",[97,0.308,182,0.82]],["body/components/ManageTemplatesComponent.html",[3,0.241,4,0.213,5,0.213,7,0.213,13,1.041,18,0.814,21,0.022,22,0.57,36,0.736,45,0.461,47,0.533,57,0.241,58,0.394,65,0.692,68,0.015,69,0.015,74,0.983,89,1.317,97,0.497,98,0.931,99,1.475,100,1.169,101,1.169,102,1.169,103,1.169,105,1.861,106,1.169,107,2.224,108,1.318,109,1.561,111,1.561,116,1.876,123,1.394,162,1.169,163,1.561,164,1.561,165,1.169,166,1.772,167,1.169,168,1.169,169,0.879,170,1.169,171,0.879,172,1.169,173,0.931,174,1.169,175,0.879,176,1.169,177,0.879,178,1.169,179,1.758,180,0.931,181,1.169,182,1.411,183,1.8,184,1.169,185,0.931,186,1.169,187,0.879,188,1.169,189,0.879,190,1.169,191,0.931,192,1.169,193,0.879,194,0.879,195,0.986,196,1.169,197,0.879,198,1.169,199,0.879,200,1.169,201,0.782,202,1.169,203,1.169,258,3.896,259,3.896,291,4.599,515,4.32,700,4.864,701,3.235,702,5.705,703,5.067,704,3.794,705,3.794]],["title/components/NavComponent.html",[97,0.308,185,0.869]],["body/components/NavComponent.html",[3,0.311,4,0.16,5,0.16,7,0.16,8,0.755,9,2.311,13,0.518,18,0.862,20,0.658,21,0.023,22,0.604,23,0.503,24,0.697,26,0.738,27,0.781,35,1.35,36,0.551,45,0.593,47,0.399,57,0.181,58,0.295,59,0.781,60,1.429,61,0.807,65,0.518,68,0.013,69,0.013,74,0.803,78,2.004,86,1.327,87,0.827,97,0.425,98,0.697,99,1.205,100,0.875,101,0.875,102,0.875,103,0.875,106,0.875,107,2.148,108,1.272,109,1.275,111,1.275,116,1.653,117,1.638,118,2.282,121,1.638,123,1.138,144,2.826,145,2.421,148,2.826,149,2.145,157,2.145,158,4.574,161,2.067,162,0.875,163,1.275,164,1.275,165,0.875,166,1.562,167,0.875,168,0.875,169,0.658,170,0.875,171,0.658,172,0.875,173,0.697,174,0.875,175,0.658,176,0.875,177,0.658,178,0.875,179,1.504,180,0.697,181,0.875,182,0.658,183,0.738,184,0.875,185,1.317,186,0.875,187,0.658,188,0.875,189,0.658,190,0.875,191,0.697,192,0.875,193,0.658,194,0.658,195,0.738,196,0.875,197,0.658,198,0.875,199,0.658,200,0.875,201,0.585,202,0.875,203,0.875,309,2.587,310,2.421,312,1.775,314,2.826,315,1.775,336,2.421,366,1.787,394,1.245,417,1.429,433,2.387,444,1.521,464,3.528,466,5.239,505,2.421,571,3.126,572,1.939,573,2.421,574,2.145,575,2.421,589,2.421,592,3.353,600,1.775,631,3.528,632,2.421,658,2.421,685,3.528,706,2.421,707,4.882,708,4.138,709,4.138,710,2.84,711,2.84,712,2.84,713,2.84,714,4.138,715,4.138,716,2.84,717,2.84,718,2.84,719,2.84,720,2.84,721,2.84,722,2.84,723,4.138,724,4.138,725,4.138,726,2.84,727,4.138,728,4.138,729,4.574,730,4.138,731,3.528,732,5.365,733,4.138,734,2.84,735,2.84,736,2.84,737,4.138,738,2.84,739,2.84,740,2.84,741,2.84,742,2.84,743,2.84]],["title/components/NotFoundComponent.html",[97,0.308,187,0.82]],["body/components/NotFoundComponent.html",[3,0.245,4,0.216,5,0.216,7,0.216,13,1.048,18,0.822,21,0.022,22,0.575,36,0.746,45,0.467,47,0.54,57,0.245,58,0.399,62,1.985,65,0.702,68,0.015,69,0.015,74,0.992,89,1.329,97,0.5,98,0.944,99,1.488,100,1.185,101,1.185,102,1.185,103,1.185,105,1.873,106,1.185,107,2.228,108,1.319,109,1.575,111,1.575,116,1.886,123,1.406,162,1.185,163,1.575,164,1.575,165,1.185,166,1.782,167,1.185,168,1.185,169,0.891,170,1.185,171,0.891,172,1.185,173,0.944,174,1.185,175,0.891,176,1.185,177,0.891,178,1.185,179,1.769,180,0.944,181,1.185,182,0.891,183,0.999,184,1.185,185,0.944,186,1.185,187,1.418,188,1.185,189,0.891,190,1.185,191,0.944,192,1.185,193,0.891,194,0.891,195,0.999,196,1.185,197,0.891,198,1.185,199,0.891,200,1.185,201,0.792,202,1.185,203,1.185,238,3.922,590,3.196,744,4.896,745,3.278,746,4.18,747,5.743,748,5.112,749,3.845,750,3.845,751,5.112]],["title/injectables/NotificationService.html",[0,0.974,527,2.417]],["body/injectables/NotificationService.html",[0,1.425,2,2.1,3,0.249,4,0.22,5,0.22,7,0.22,13,0.715,18,1.031,20,1.486,21,0.022,22,0.722,23,0.779,24,1.574,26,1.019,27,1.078,45,0.629,47,0.551,55,1.958,56,1.832,57,0.249,58,0.407,59,1.078,61,1.103,65,1.126,68,0.016,69,0.016,74,1.005,115,6.138,123,1.697,247,1.958,527,3.537,752,3.342,753,5.178,754,5.178,755,5.178,756,5.178,757,3.92,758,6.168,759,3.92,760,4.381,761,5.178,762,3.92,763,3.92,764,5.178,765,3.92,766,5.798,767,5.178,768,3.92,769,5.178,770,3.92,771,3.92,772,3.92,773,3.92,774,3.92]],["title/components/PhoneConfirmationComponent.html",[97,0.308,189,0.82]],["body/components/PhoneConfirmationComponent.html",[3,0.204,4,0.18,5,0.18,7,0.18,8,0.824,13,0.586,18,0.912,20,0.744,21,0.022,22,0.588,23,0.635,24,0.788,26,1.174,27,1.243,36,0.623,45,0.549,47,0.451,57,0.204,58,0.333,59,0.883,61,0.853,65,0.586,68,0.014,69,0.014,74,0.876,78,2.023,87,0.934,89,1.174,97,0.455,98,0.788,99,1.315,100,0.989,101,0.989,102,0.989,103,0.989,105,1.705,106,0.989,107,2.182,108,1.306,109,1.392,111,1.392,116,1.748,123,1.243,124,1.959,126,3.851,127,3.413,162,0.989,163,1.392,164,1.392,165,0.989,166,1.652,167,0.989,168,0.989,169,0.744,170,0.989,171,0.744,172,0.989,173,0.788,174,0.989,175,0.744,176,0.989,177,0.744,178,0.989,179,1.611,180,0.788,181,0.989,182,0.744,183,0.834,184,0.989,185,0.788,186,0.989,187,0.744,188,0.989,189,1.315,190,0.989,191,0.788,192,0.989,193,0.744,194,0.744,195,0.834,196,0.989,197,0.744,198,0.989,199,0.744,200,0.989,201,1.341,202,0.989,203,0.989,265,4.084,287,3.413,303,2.256,304,3.851,370,2.111,391,1.862,417,1.108,526,1.851,591,2.192,592,2.823,775,5.098,776,2.736,777,5.227,778,4.517,779,5.979,780,5.227,781,4.517,782,3.209,783,3.209,784,5.227,785,2.192,786,2.192,787,3.209,788,3.209,789,2.192,790,3.209,791,2.736,792,3.209,793,3.209,794,3.209,795,3.209]],["title/interfaces/PhoneNumberDto.html",[51,1.459,363,1.03]],["body/interfaces/PhoneNumberDto.html",[3,0.196,4,0.173,5,0.173,7,0.173,8,0.802,21,0.023,22,0.494,23,0.375,35,1.921,36,0.852,37,2.035,38,1.272,41,1.272,42,1.541,43,3.51,50,1.353,51,2.298,57,0.375,61,1.05,68,0.013,69,0.013,108,0.563,124,2.115,155,1.78,201,1.298,286,1.442,303,1.541,363,1.715,364,1.442,366,2.156,367,2.943,368,2.583,374,2.986,389,2.391,390,1.78,391,2.655,393,1.928,394,1.353,395,1.928,396,1.928,397,3.198,398,1.928,399,1.928,400,1.928,401,1.928,402,1.928,403,1.928,404,1.928,405,1.928,406,1.652,407,3.107,408,3.198,409,3.198,410,2.746,411,2.746,412,2.746,413,2.353,414,2.746,415,2.746,416,2.444,417,1.925,418,1.928,419,2.353,420,2.753,421,1.928,422,2.194,423,1.928,424,2.746,425,1.928,426,1.928,427,1.928,428,2.194,429,1.78,430,1.78,431,1.78,432,1.78,433,1.78,434,3.147,435,1.78,436,1.928,437,1.442,438,1.652,439,1.78,440,1.78,441,1.78,442,1.928,443,1.928,444,1.652,445,1.928,446,3.216,447,1.78,448,1.928,449,1.928,450,1.928,451,1.78,452,2.534,453,2.746,454,1.78,455,1.928,456,1.928,457,1.928,458,1.78,459,1.78]],["title/interfaces/PhoneVerificationDto.html",[50,1.552,363,1.03]],["body/interfaces/PhoneVerificationDto.html",[3,0.197,4,0.174,5,0.174,7,0.174,8,0.803,21,0.023,22,0.495,23,0.376,35,1.924,36,0.854,37,2.037,38,1.276,41,1.276,42,2.199,43,3.513,50,1.931,51,2.301,57,0.375,61,1.045,68,0.013,69,0.013,108,0.565,124,1.928,155,1.785,201,1.328,286,2.058,303,1.546,363,1.717,364,1.446,366,2.159,367,2.946,368,2.586,374,3.159,389,2.395,390,1.785,391,2.704,393,1.934,394,1.357,395,1.934,396,1.934,397,2.752,398,1.934,399,1.934,400,1.934,401,1.934,402,1.934,403,1.934,404,1.934,405,1.934,406,1.657,407,3.109,408,2.752,409,2.752,410,1.934,411,1.934,412,1.934,413,1.657,414,1.934,415,1.934,416,1.357,417,1.521,418,2.752,419,2.99,420,3.145,421,2.752,422,2.56,423,2.752,424,3.203,425,1.934,426,1.934,427,1.934,428,2.199,429,1.785,430,1.785,431,1.785,432,1.785,433,1.785,434,3.15,435,1.785,436,1.934,437,1.446,438,1.657,439,1.785,440,1.785,441,1.785,442,1.934,443,1.934,444,1.657,445,1.934,446,3.22,447,1.785,448,1.934,449,1.934,450,1.934,451,1.785,452,2.54,453,2.752,454,1.785,455,1.934,456,1.934,457,1.934,458,1.785,459,1.785]],["title/components/RegisterComponent.html",[97,0.308,191,0.869]],["body/components/RegisterComponent.html",[0,0.835,3,0.121,4,0.107,5,0.107,7,0.107,8,0.554,9,1.968,13,0.346,18,1.02,20,0.439,21,0.023,22,0.714,23,0.616,24,0.465,26,1.483,27,1.645,35,1.805,36,0.368,45,0.672,47,0.266,52,1.015,57,0.193,58,0.197,59,0.521,60,0.654,61,0.571,62,1.968,65,0.792,68,0.009,69,0.009,74,0.589,78,1.736,82,1.626,86,1.419,87,0.552,89,0.789,91,1.896,96,2.373,97,0.33,98,0.465,99,0.884,100,0.584,101,0.584,102,0.584,103,0.584,105,1.238,106,0.584,107,2.011,108,1.191,109,0.935,111,0.935,116,1.338,117,1.093,118,2.029,121,1.751,123,0.835,124,1.311,148,1.294,157,2.293,159,1.184,161,0.946,162,0.584,163,0.935,164,0.935,165,0.584,166,1.264,167,0.584,168,0.584,169,0.439,170,0.584,171,0.439,172,0.584,173,0.465,174,0.584,175,0.439,176,0.584,177,0.439,178,0.584,179,1.17,180,0.465,181,0.584,182,0.439,183,0.492,184,0.584,185,0.465,186,0.584,187,0.439,188,0.584,189,0.439,190,0.584,191,1.066,192,0.584,193,0.439,194,0.439,195,0.492,196,0.584,197,0.439,198,0.584,199,0.439,200,1.17,201,0.979,202,0.584,203,0.584,231,0.946,247,0.946,248,1.093,280,0.886,282,1.251,294,2.489,309,1.897,311,1.184,312,1.897,313,1.184,329,0.946,331,0.886,353,1.294,366,1.111,391,0.781,394,0.831,406,1.626,407,2.029,413,1.626,416,2.083,420,1.419,422,1.516,428,1.896,437,1.419,438,2.325,439,1.751,440,2.505,441,1.751,444,2.963,446,2.505,447,1.751,451,1.751,452,2.505,454,1.751,459,1.751,475,2.987,542,1.615,553,1.615,561,2.293,600,2.714,605,2.714,609,3.738,610,1.897,611,1.294,613,1.093,614,1.897,616,3.328,620,2.588,621,2.293,627,2.073,628,1.294,660,3.237,672,1.431,673,1.615,690,1.615,692,3.28,693,3.28,694,2.588,695,1.615,696,1.431,697,1.431,698,1.615,729,4.717,789,2.073,796,1.431,797,3.797,798,3.035,799,3.702,800,3.035,801,4.051,802,3.797,803,3.035,804,5.069,805,5.069,806,5.069,807,3.035,808,1.895,809,1.895,810,4.342,811,4.342,812,1.895,813,1.895,814,1.895,815,1.895,816,1.895,817,1.895,818,1.895,819,1.895,820,1.895,821,1.895,822,1.895,823,1.184,824,1.615,825,1.895,826,1.895,827,1.895,828,1.895,829,1.895,830,3.035,831,3.035,832,3.035,833,3.035,834,1.895,835,3.035,836,2.588,837,1.615,838,3.035,839,1.895,840,1.895,841,1.895,842,1.895,843,1.895,844,1.895,845,1.895,846,1.895,847,1.895,848,1.895,849,1.895,850,1.895,851,1.895,852,1.615,853,1.895,854,1.895,855,1.895,856,1.895,857,1.895,858,1.895,859,2.588,860,3.035,861,3.035,862,2.588,863,2.588,864,1.895,865,1.895,866,3.035,867,1.895,868,1.895,869,1.895,870,1.895,871,1.895]],["title/interfaces/RegistrationResponseDto.html",[363,1.03,385,2.417]],["body/interfaces/RegistrationResponseDto.html",[3,0.271,4,0.239,5,0.239,7,0.239,8,0.997,21,0.022,23,0.664,37,1.469,38,1.754,45,0.517,57,0.348,61,0.907,68,0.017,69,0.017,86,2.975,330,1.866,332,2.925,334,2.454,348,2.659,363,1.59,364,1.988,365,3.214,366,2.208,367,3.013,368,2.645,369,3.214,370,1.988,371,3.627,372,5.743,373,2.925,374,2.279,375,3.627,376,5.612,377,5.143,378,4.557,379,5.612,380,2.454,381,4.6,382,4.656,383,4.738,384,5.426,385,3.73,386,5.426,387,4.656,388,4.656]],["title/components/ResetPasswordComponent.html",[97,0.308,193,0.82]],["body/components/ResetPasswordComponent.html",[1,3.302,3,0.146,4,0.129,5,0.129,7,0.129,8,0.643,9,2.665,13,0.418,18,1.012,20,0.531,21,0.022,22,0.483,23,0.736,24,0.563,26,1.487,27,1.574,33,2.145,35,2.109,36,1.146,37,0.792,41,2.265,45,0.696,47,0.322,52,1.228,57,0.146,58,0.238,59,0.631,60,2.04,61,0.725,65,0.418,68,0.011,69,0.011,74,0.684,78,1.792,82,1.228,86,2.568,87,0.667,89,0.916,91,2.408,94,2.3,96,2.203,97,0.374,98,0.563,99,1.026,100,0.706,101,0.706,102,0.706,103,0.706,105,1.401,106,0.706,107,2.08,108,1.232,109,1.086,111,1.086,116,1.485,123,0.97,124,2.093,162,0.706,163,1.086,164,1.086,165,0.706,166,1.404,167,0.706,168,0.706,169,0.531,170,0.706,171,0.531,172,0.706,173,0.563,174,0.706,175,0.531,176,0.706,177,0.531,178,0.706,179,1.323,180,0.563,181,0.706,182,0.531,183,0.596,184,0.706,185,0.563,186,0.706,187,0.531,188,0.706,189,0.531,190,0.706,191,0.563,192,0.706,193,1.117,194,0.531,195,0.596,196,0.706,197,0.531,198,0.706,199,0.531,200,1.323,201,0.472,202,0.706,203,0.706,231,1.145,263,3.992,280,1.071,282,1.453,294,2.568,329,1.145,331,1.071,366,0.839,391,0.945,406,1.888,416,1.005,417,1.483,422,1.761,475,2.145,526,1.322,561,2.663,583,3.014,587,1.433,588,1.433,596,1.433,597,3.245,598,2.663,600,3.253,601,4.437,603,1.954,605,3.014,606,1.954,607,1.954,609,2.685,610,2.203,612,1.732,616,2.203,619,1.732,689,1.732,692,3.642,693,3.642,785,1.566,786,1.566,789,2.407,799,4.437,801,4.437,823,1.433,824,1.954,836,3.005,837,1.954,859,3.005,863,3.005,872,5.445,873,3.245,874,4.295,875,3.525,876,2.292,877,2.292,878,2.292,879,2.292,880,2.292,881,2.292,882,3.245,883,2.292,884,2.292,885,3.525,886,2.292,887,1.954,888,2.292,889,2.292,890,2.292,891,2.292,892,2.292]],["title/interfaces/ResetPasswordDto.html",[41,1.459,363,1.03]],["body/interfaces/ResetPasswordDto.html",[3,0.193,4,0.171,5,0.171,7,0.171,8,0.792,21,0.023,22,0.488,23,0.369,35,2.091,36,1.073,37,2.339,38,1.251,41,1.789,42,1.515,43,3.496,50,1.33,51,2.089,57,0.372,61,1.042,68,0.013,69,0.013,108,0.554,124,2.103,155,1.75,201,1.206,286,1.418,303,2.168,363,1.704,364,1.418,366,2.142,367,2.924,368,2.567,374,3.135,389,2.586,390,1.75,391,2.51,393,1.896,394,1.33,395,1.896,396,1.896,397,2.713,398,1.896,399,1.896,400,1.896,401,1.896,402,1.896,403,1.896,404,1.896,405,1.896,406,1.625,407,3.133,408,2.713,409,2.713,410,1.896,411,1.896,412,1.896,413,1.625,414,1.896,415,1.896,416,1.33,417,1.911,418,1.896,419,2.325,420,2.736,421,1.896,422,2.531,423,1.896,424,3.168,425,2.713,426,2.713,427,2.713,428,2.531,429,2.504,430,2.504,431,2.504,432,2.504,433,2.504,434,3.203,435,1.75,436,1.896,437,1.418,438,1.625,439,1.75,440,1.75,441,1.75,442,1.896,443,1.896,444,1.625,445,1.896,446,3.191,447,1.75,448,1.896,449,1.896,450,1.896,451,1.75,452,2.504,453,2.713,454,1.75,455,1.896,456,1.896,457,1.896,458,1.75,459,1.75]],["title/classes/Routing.html",[48,2.042,58,0.367]],["body/classes/Routing.html",[3,0.289,4,0.255,5,0.255,7,0.255,8,1.038,18,0.729,20,1.051,21,0.022,22,0.51,26,1.478,27,1.247,33,3.42,38,2.344,39,4.694,40,4.694,48,3.584,57,0.289,58,0.471,61,0.935,62,1.76,64,4.296,65,0.828,68,0.017,69,0.017,74,0.88,574,4.296,746,3.884,893,3.426,894,3.866,895,3.866,896,3.866,897,5.297,898,6.213,899,4.534,900,5.687,901,4.848,902,4.848,903,6.213,904,4.694,905,5.687,906,6.213,907,3.866,908,4.534,909,4.534]],["title/components/ServerErrorComponent.html",[97,0.308,194,0.82]],["body/components/ServerErrorComponent.html",[3,0.199,4,0.176,5,0.176,7,0.176,8,0.81,13,0.571,18,0.829,20,0.725,21,0.022,22,0.58,23,0.539,24,0.768,36,0.607,45,0.539,47,0.439,57,0.199,58,0.325,59,0.861,65,0.571,68,0.013,69,0.013,74,0.861,78,2.006,85,3.03,87,0.911,89,1.153,97,0.449,98,0.768,99,1.292,100,0.964,101,0.964,102,0.964,103,0.964,105,1.681,106,0.964,107,2.176,108,1.289,109,1.367,111,1.367,116,1.728,123,1.221,162,0.964,163,1.367,164,1.367,165,0.964,166,1.633,167,0.964,168,0.964,169,0.725,170,0.964,171,0.725,172,0.964,173,0.768,174,0.964,175,0.725,176,0.964,177,0.725,178,0.964,179,1.588,180,0.768,181,0.964,182,0.725,183,0.813,184,0.964,185,0.768,186,0.964,187,0.725,188,0.964,189,0.725,190,0.964,191,0.768,192,0.964,193,0.725,194,1.3,195,1.733,196,0.964,197,0.725,198,0.964,199,0.725,200,0.964,201,0.645,202,0.964,203,0.964,241,3.831,282,1.29,294,3.209,305,3.783,346,3.783,353,3.03,392,3.352,526,1.805,572,3.03,590,2.773,622,4.783,623,3.783,896,2.667,904,3.352,910,4.783,911,2.667,912,5.155,913,4.437,914,4.437,915,3.128,916,3.128,917,3.128,918,3.128,919,3.783,920,4.437,921,4.437,922,4.437,923,4.437,924,3.352,925,4.437,926,4.437,927,4.437,928,4.437,929,3.783,930,4.437,931,4.437,932,4.437,933,4.437,934,4.437,935,4.437,936,4.437,937,4.437,938,4.437,939,4.437,940,4.437,941,4.437,942,4.437,943,4.437,944,4.437,945,4.437,946,4.437]],["title/modules/SharedModule.html",[204,2.674,214,2.212]],["body/modules/SharedModule.html",[3,0.214,4,0.189,5,0.189,21,0.023,37,1.611,45,0.882,47,0.472,57,0.297,58,0.349,62,1.304,65,0.613,68,0.014,69,0.014,206,1.938,214,2.916,219,2.865,221,4.048,223,3.524,225,2.539,247,1.678,281,2.865,296,2.865,330,1.473,338,2.295,370,2.18,373,1.8,380,2.691,434,1.678,486,2.295,697,2.539,760,3.524,924,3.524,947,2.539,948,4.664,949,2.865,950,3.36,951,5.358,952,3.36,953,5.358,954,4.664,955,5.358,956,3.36,957,5.358,958,3.36,959,5.358,960,3.36,961,5.358,962,3.36,963,5.358,964,3.36,965,5.358,966,3.36,967,3.36,968,5.358,969,3.36,970,5.358,971,3.36,972,5.358,973,3.36,974,5.358,975,3.36,976,5.358,977,3.36,978,5.358,979,3.36,980,3.36,981,5.358,982,3.36,983,5.358,984,3.36,985,5.358,986,3.36,987,5.358,988,3.36,989,5.358,990,3.36,991,3.36,992,5.358,993,2.865,994,2.865,995,3.36,996,4.664,997,3.36,998,2.865,999,2.865,1000,3.36,1001,3.36,1002,2.865,1003,4.048,1004,3.36,1005,3.36,1006,3.36,1007,3.36,1008,3.36,1009,3.36,1010,3.36,1011,3.36,1012,3.36,1013,3.36]],["title/components/UpdatedPasswordComponent.html",[97,0.308,197,0.82]],["body/components/UpdatedPasswordComponent.html",[3,0.221,4,0.195,5,0.195,7,0.195,8,0.871,13,0.633,18,0.876,20,0.804,21,0.022,22,0.613,23,0.58,24,0.852,35,1.914,36,0.926,45,0.58,47,0.488,57,0.221,58,0.36,59,0.955,61,0.718,65,0.633,68,0.014,69,0.014,74,0.926,78,2.073,87,1.01,89,1.24,97,0.474,98,0.852,99,1.389,100,1.069,101,1.069,102,1.069,103,1.069,105,1.778,106,1.069,107,2.203,108,1.313,109,1.47,111,1.47,116,1.808,123,1.312,162,1.069,163,1.47,164,1.47,165,1.069,166,1.709,167,1.069,168,1.069,169,0.804,170,1.069,171,0.804,172,1.069,173,0.852,174,1.069,175,0.804,176,1.069,177,0.804,178,1.069,179,1.679,180,0.852,181,1.069,182,0.804,183,0.902,184,1.069,185,0.852,186,1.069,187,0.804,188,1.069,189,0.804,190,1.069,191,0.852,192,1.069,193,0.804,194,0.804,195,0.902,196,1.069,197,1.36,198,2.044,199,0.804,200,1.069,201,0.715,202,1.069,203,1.069,268,3.669,303,2.383,370,2.23,417,1.883,526,2.002,591,2.371,592,2.982,596,2.17,597,4.118,598,3.604,785,2.371,786,2.371,873,4.118,882,4.118,1014,5.004,1015,4.77,1016,3.471,1017,3.471]],["title/injectables/UrlService.html",[0,0.974,119,1.895]],["body/injectables/UrlService.html",[0,1.525,2,2.333,3,0.277,4,0.245,5,0.245,7,0.245,8,1.012,9,2.631,13,1.113,18,1.032,20,1.01,21,0.022,22,0.49,23,0.741,24,1.069,26,1.441,27,1.525,45,0.741,47,0.612,55,2.176,56,2.036,57,0.277,58,0.452,60,2.107,61,0.917,65,0.795,66,4.608,68,0.017,69,0.017,74,1.076,78,1.421,87,1.268,114,5.203,119,2.97,123,1.198,124,2.107,129,3.714,130,3.714,475,2.77,485,2.975,1018,3.714,1019,5.545,1020,5.545,1021,5.545,1022,4.356,1023,6.099,1024,5.545,1025,4.356,1026,5.545,1027,4.356]],["title/interfaces/UserForRegistrationDto.html",[363,1.03,437,1.654]],["body/interfaces/UserForRegistrationDto.html",[3,0.174,4,0.154,5,0.154,7,0.154,8,0.735,21,0.023,22,0.593,23,0.738,35,1.833,36,0.782,37,1.941,38,1.129,41,1.129,42,1.368,43,3.674,50,1.201,51,1.971,57,0.358,61,1.076,68,0.012,69,0.012,108,0.735,124,2.153,155,2.325,201,1.158,286,1.28,303,1.368,363,1.636,364,1.28,366,2.057,367,2.807,368,2.464,374,3.01,389,2.464,390,1.58,391,2.505,393,1.712,394,1.201,395,1.712,396,1.712,397,2.519,398,1.712,399,1.712,400,1.712,401,1.712,402,1.712,403,1.712,404,1.712,405,1.712,406,1.467,407,3.242,408,2.989,409,2.989,410,1.712,411,1.712,412,1.712,413,1.467,414,1.712,415,1.712,416,1.201,417,1.392,418,1.712,419,2.158,420,2.747,421,1.712,422,2.013,423,1.712,424,2.519,425,1.712,426,1.712,427,1.712,428,2.388,429,1.58,430,1.58,431,1.58,432,1.58,433,1.58,434,3.349,435,2.325,436,2.519,437,1.883,438,2.158,439,3.042,440,2.325,441,3.042,442,2.519,443,2.519,444,2.824,445,2.519,446,3.596,447,3.042,448,2.519,449,2.519,450,2.519,451,3.042,452,3.39,453,3.296,454,2.325,455,2.519,456,2.519,457,2.519,458,2.325,459,3.042]],["title/classes/Validation.html",[58,0.367,823,2.212]],["body/classes/Validation.html",[3,0.244,4,0.215,5,0.215,7,0.215,18,0.616,20,0.888,21,0.022,22,0.716,23,0.466,24,0.94,26,0.995,38,2.102,45,0.466,57,0.244,58,0.397,61,0.984,62,2.471,64,3.852,65,1.161,68,0.015,69,0.02,74,1.186,91,3.052,124,2.343,231,1.913,282,2.102,378,3.852,422,2.547,609,3.82,675,5.58,823,3.82,893,2.894,895,4.347,897,4.887,901,4.347,902,4.347,1028,3.266,1029,5.099,1030,5.099,1031,6.544,1032,3.83,1033,5.099,1034,5.099,1035,5.732,1036,5.099,1037,4.347,1038,5.099,1039,5.732,1040,4.347,1041,4.347,1042,5.099,1043,5.099,1044,3.83,1045,5.099,1046,3.83,1047,5.099,1048,3.83,1049,3.83,1050,3.83,1051,3.83,1052,3.83,1053,3.83]],["title/components/VerifyPhoneComponent.html",[97,0.308,199,0.82]],["body/components/VerifyPhoneComponent.html",[1,3.207,3,0.135,4,0.119,5,0.119,7,0.119,8,0.605,9,2.065,13,0.386,18,0.951,20,0.491,21,0.023,22,0.46,23,0.676,24,0.52,26,1.061,27,1.123,30,1.805,33,2.04,36,0.411,41,1.684,42,1.655,45,0.719,47,0.297,50,2.199,51,1.684,52,1.134,57,0.211,58,0.22,59,0.582,60,2.265,61,0.836,65,0.605,68,0.01,69,0.01,74,0.643,78,1.813,82,1.775,87,0.616,89,0.861,94,2.187,97,0.355,98,0.52,99,0.965,100,0.652,101,0.652,102,0.652,103,0.652,105,1.332,106,0.652,107,2.053,108,1.216,109,1.021,111,1.021,114,3.491,116,1.424,117,1.222,118,2.16,119,2.977,121,1.912,123,1.123,124,2.164,140,1.805,159,1.324,161,1.058,162,0.652,163,1.021,164,1.021,165,0.652,166,1.345,167,0.652,168,0.652,169,0.491,170,0.652,171,0.491,172,0.652,173,0.52,174,0.652,175,0.491,176,0.652,177,0.491,178,0.652,179,1.258,180,0.52,181,0.652,182,0.491,183,0.55,184,0.652,185,0.52,186,0.652,187,0.491,188,0.652,189,0.491,190,0.652,191,0.52,192,0.652,193,0.491,194,0.491,195,0.55,196,0.652,197,0.491,198,0.652,199,1.071,200,1.639,201,1.291,202,0.652,203,0.652,231,1.058,247,1.058,248,1.222,251,3.782,280,0.99,282,0.873,284,1.446,286,2.97,294,1.549,309,1.324,311,1.324,313,2.072,315,1.324,329,1.058,331,0.99,353,1.446,366,1.495,368,0.929,381,2.789,391,2.292,394,1.453,407,1.549,416,2.199,417,1.732,419,3.168,420,2.598,435,1.222,583,2.888,587,1.324,588,1.324,590,1.324,591,2.264,605,2.553,610,1.324,611,1.446,612,1.6,613,1.222,614,2.072,616,1.324,619,1.6,621,2.504,625,2.504,627,2.789,628,2.789,630,1.805,637,1.6,640,1.805,672,1.6,689,2.504,696,2.504,785,1.446,786,1.446,791,2.826,852,1.805,873,3.085,882,3.085,887,1.805,904,1.6,907,2.826,1040,1.805,1041,1.805,1054,4.572,1055,1.6,1056,4.084,1057,3.314,1058,4.084,1059,4.084,1060,4.084,1061,4.62,1062,3.314,1063,2.117,1064,2.117,1065,2.117,1066,2.117,1067,2.117,1068,2.117,1069,2.117,1070,2.117,1071,2.117,1072,2.117,1073,2.117,1074,2.117,1075,4.084,1076,2.117,1077,2.117,1078,2.117,1079,2.117,1080,2.117,1081,2.117,1082,2.117,1083,2.117,1084,2.117,1085,2.117,1086,3.314,1087,3.314,1088,2.117,1089,2.117,1090,2.117,1091,2.117,1092,2.117,1093,2.117]],["title/coverage.html",[1094,4.122]],["body/coverage.html",[0,1.767,1,1.761,5,0.172,6,2.602,17,1.761,21,0.022,23,0.371,41,1.258,48,1.761,50,1.338,51,1.258,58,0.452,68,0.013,69,0.013,70,3.293,71,2.085,73,2.602,77,2.085,97,0.607,98,0.749,104,2.602,118,1.427,119,1.635,147,5.91,161,3.627,169,0.707,171,0.707,173,0.749,175,0.707,177,0.707,180,1.07,182,0.707,185,0.749,187,0.707,189,0.707,191,1.07,193,0.707,194,0.707,197,0.707,199,0.707,215,1.908,238,2.085,241,2.085,251,2.725,254,2.725,258,2.085,259,2.085,263,1.908,265,2.085,268,1.908,277,2.085,280,1.427,297,2.602,319,2.602,329,1.524,330,1.338,332,1.635,333,2.085,334,1.761,363,1.87,365,3.293,385,2.085,389,1.427,390,3.385,437,1.427,460,2.602,475,1.524,495,2.602,500,2.306,509,2.602,516,2.602,517,2.602,522,2.602,524,2.602,527,2.085,566,2.602,579,2.602,595,3.293,596,3.467,613,3.2,639,2.602,652,3.842,700,2.602,701,2.602,706,2.602,744,2.602,745,2.602,752,2.602,775,2.602,776,2.602,796,3.842,823,1.908,872,2.602,894,2.602,910,2.602,911,2.602,947,2.306,1002,2.602,1003,2.306,1014,2.602,1018,2.602,1028,2.602,1054,3.293,1055,3.293,1094,2.602,1095,3.052,1096,3.052,1097,3.052,1098,4.359,1099,4.729,1100,6.422,1101,5.867,1102,3.052,1103,6.536,1104,5.085,1105,5.547,1106,3.052,1107,3.052,1108,4.359,1109,5.547,1110,4.359,1111,3.052,1112,3.052,1113,3.052,1114,6.28,1115,3.052,1116,4.359,1117,3.052,1118,3.052]],["title/dependencies.html",[207,2.908,1119,2.518]],["body/dependencies.html",[21,0.022,47,0.69,68,0.018,69,0.018,87,1.43,207,3.356,225,4.515,226,4.515,231,2.454,247,2.985,248,2.834,380,2.834,485,3.356,486,3.356,760,3.712,949,4.189,993,4.189,994,4.189,1120,4.913,1121,4.189,1122,4.913,1123,5.976,1124,7.067,1125,4.913,1126,5.976,1127,4.913,1128,4.913,1129,4.913,1130,4.913,1131,4.913,1132,4.913,1133,4.913,1134,4.913,1135,4.913,1136,4.913]],["title/miscellaneous/enumerations.html",[1137,1.704,1138,3.63]],["body/miscellaneous/enumerations.html",[7,0.304,21,0.022,27,1.902,68,0.019,69,0.019,428,3.16,501,4.779,1137,3.118,1138,4.608,1139,5.405,1140,5.405,1141,6.326,1142,6.326,1143,6.326]],["title/miscellaneous/functions.html",[1137,1.704,1144,3.63]],["body/miscellaneous/functions.html",[7,0.312,21,0.019,37,1.919,68,0.019,69,0.019,370,2.597,373,2.975,434,2.775,947,4.197,998,4.736,1003,5.124,1137,3.205,1144,4.736,1145,5.555]],["title/index.html",[7,0.166,1146,2.953,1147,2.953]],["body/index.html",[4,0.236,21,0.016,22,0.472,68,0.016,69,0.016,89,1.089,97,0.521,108,0.987,127,3.167,195,1.557,217,3.167,294,1.959,347,3.167,383,3.695,420,1.959,432,2.418,438,2.245,475,2.094,572,4.582,590,2.62,731,3.574,746,3.695,862,5.107,924,4.782,929,3.574,999,3.574,1037,3.574,1119,3.574,1121,3.574,1148,4.192,1149,5.99,1150,5.41,1151,5.41,1152,4.192,1153,5.99,1154,5.41,1155,4.192,1156,4.192,1157,4.192,1158,4.192,1159,4.192,1160,4.192,1161,6.329,1162,4.192,1163,4.192,1164,6.552,1165,6.826,1166,4.192,1167,4.192,1168,4.192,1169,4.192,1170,4.192,1171,4.192,1172,4.192,1173,5.99,1174,4.192,1175,6.329,1176,4.192,1177,4.192,1178,4.192,1179,5.41,1180,5.41,1181,6.329,1182,4.192,1183,5.41,1184,5.41,1185,4.192,1186,4.192,1187,4.192,1188,4.192,1189,5.41,1190,4.192,1191,4.192,1192,4.192,1193,4.192,1194,4.192,1195,5.99,1196,4.192,1197,4.192,1198,3.167,1199,4.192]],["title/modules.html",[206,2.789]],["body/modules.html",[21,0.019,68,0.019,69,0.019,205,3.784,206,3.196,213,3.463,214,3.463,226,4.185,1200,5.54,1201,5.54,1202,6.775,1203,6.417,1204,6.417]],["title/overview.html",[1198,3.652]],["body/overview.html",[2,2.138,21,0.022,36,0.774,68,0.016,69,0.016,72,3.015,98,1.656,99,1.162,119,3.133,169,1.356,171,1.356,173,1.436,175,1.356,177,1.356,180,1.436,182,1.356,185,1.436,187,1.356,189,1.356,191,1.436,193,1.356,194,1.356,197,1.356,199,1.356,205,5.1,206,2.302,207,3.578,208,3.403,209,3.403,210,3.403,211,3.403,212,3.403,213,3.656,214,3.656,215,3.656,216,4.467,217,3.015,276,2.495,312,3.275,364,1.865,789,2.726,893,3.015,1198,3.015,1205,3.991,1206,5.239,1207,3.991]],["title/routes.html",[276,3.022]],["body/routes.html",[21,0.02,68,0.02,69,0.02,276,3.592]],["title/miscellaneous/variables.html",[1137,1.704,1208,3.63]],["body/miscellaneous/variables.html",[7,0.223,10,4.45,11,4.45,12,3.382,21,0.022,23,0.831,26,1.611,27,1.705,35,1.702,39,2.997,40,2.997,48,2.289,61,0.597,68,0.016,69,0.016,74,0.77,108,0.952,183,1.031,195,1.031,201,1.075,251,2.48,254,3.262,263,2.48,268,2.48,276,2.48,280,2.439,283,3.382,284,3.564,285,3.943,286,1.854,287,2.997,291,2.997,293,2.997,294,1.854,327,2.48,329,2.607,330,2.558,348,2.48,349,2.997,368,2.558,370,1.854,381,2.71,429,2.289,430,2.289,431,3.011,463,4.45,500,3.943,501,2.997,595,2.997,596,3.262,613,3.944,614,3.873,652,2.997,653,3.382,746,2.71,796,2.997,919,3.382,1054,2.997,1055,3.943,1099,3.382,1137,2.289,1208,5.283,1209,6.196,1210,3.967,1211,3.967,1212,3.967,1213,3.967,1214,3.967,1215,3.967,1216,3.967,1217,3.967,1218,3.967,1219,3.967,1220,3.967,1221,3.967,1222,3.967,1223,3.967,1224,5.832,1225,3.967,1226,3.967,1227,3.967,1228,3.967,1229,3.967,1230,3.967,1231,3.967,1232,3.967,1233,3.967,1234,3.967]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["0.11.4",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["0.9em",{"_index":734,"title":{},"body":{"components/NavComponent.html":{}}}],["0/1",{"_index":1109,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1113,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1102,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1112,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1103,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1104,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1105,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1098,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1111,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{}}}],["1/1",{"_index":1101,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1107,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":411,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["100",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["10px",{"_index":637,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["12.0.0",{"_index":1126,"title":{},"body":{"dependencies.html":{}}}],["12.2.3",{"_index":1123,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":1207,"title":{},"body":{"overview.html":{}}}],["13.0.2",{"_index":1124,"title":{},"body":{"dependencies.html":{}}}],["13.0.3",{"_index":1121,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["14.1.0",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":1205,"title":{},"body":{"overview.html":{}}}],["18px",{"_index":1093,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["2",{"_index":312,"title":{},"body":{"components/AuthComponent.html":{},"components/FooterComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1106,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":626,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["240px",{"_index":638,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["250px",{"_index":318,"title":{},"body":{"components/AuthComponent.html":{}}}],["255",{"_index":405,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["3",{"_index":789,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"overview.html":{}}}],["3/3",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":317,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["33",{"_index":869,"title":{},"body":{"components/RegisterComponent.html":{}}}],["400",{"_index":544,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["401",{"_index":551,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["403",{"_index":553,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/RegisterComponent.html":{}}}],["404",{"_index":293,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"miscellaneous/variables.html":{}}}],["406",{"_index":555,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["409",{"_index":556,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["499px",{"_index":735,"title":{},"body":{"components/NavComponent.html":{}}}],["5",{"_index":456,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["5.0.2",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":871,"title":{},"body":{"components/RegisterComponent.html":{}}}],["500",{"_index":557,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["500px",{"_index":310,"title":{},"body":{"components/AuthComponent.html":{},"components/NavComponent.html":{}}}],["6",{"_index":791,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["6.6.0",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1206,"title":{},"body":{"overview.html":{}}}],["8/8",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1088,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["abstractcontrol",{"_index":1043,"title":{},"body":{"classes/Validation.html":{}}}],["accept",{"_index":640,"title":{},"body":{"interfaces/JwtTokenDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["access",{"_index":370,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"components/ForbiddenComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["accesstoken",{"_index":327,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interfaces/JwtTokenDto.html":{},"miscellaneous/variables.html":{}}}],["account",{"_index":625,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["accountservice",{"_index":1,"title":{"injectables/AccountService.html":{}},"body":{"injectables/AccountService.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["activatedroute",{"_index":583,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["activatedroutesnapshot",{"_index":81,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["actual_component",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["add",{"_index":1191,"title":{},"body":{"index.html":{}}}],["address",{"_index":446,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["address1",{"_index":447,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["address2",{"_index":451,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["adminguard",{"_index":71,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["administrator",{"_index":1142,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["against",{"_index":1038,"title":{},"body":{"classes/Validation.html":{}}}],["align",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["align:center",{"_index":696,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["alloweddomains",{"_index":1011,"title":{},"body":{"modules/SharedModule.html":{}}}],["allowing",{"_index":648,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["along",{"_index":382,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["already",{"_index":861,"title":{},"body":{"components/RegisterComponent.html":{}}}],["angular",{"_index":924,"title":{},"body":{"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"index.html":{}}}],["angular/animations",{"_index":1120,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1122,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":949,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":46,"title":{},"body":{"injectables/AccountService.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["angular/compiler",{"_index":1125,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":47,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":993,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1128,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":954,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/card",{"_index":958,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/checkbox",{"_index":962,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/core",{"_index":977,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/datepicker",{"_index":960,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/form",{"_index":964,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/grid",{"_index":966,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/icon",{"_index":969,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/input",{"_index":971,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/list",{"_index":973,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/menu",{"_index":975,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/progress",{"_index":979,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/select",{"_index":982,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/sidenav",{"_index":984,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tabs",{"_index":986,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/toolbar",{"_index":988,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tooltip",{"_index":990,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/platform",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":87,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{},"dependencies.html":{}}}],["apartment",{"_index":448,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["api",{"_index":39,"title":{},"body":{"injectables/AccountService.html":{},"classes/Routing.html":{},"miscellaneous/variables.html":{}}}],["api's",{"_index":906,"title":{},"body":{"classes/Routing.html":{}}}],["api/accounts/forgotpassword",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/accounts/login",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/accounts/phoneconfirmation",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/accounts/phoneverification",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/accounts/registration",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/accounts/resetpassword",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/accounts/resetpasswordtoken",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/tokens/refresh",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apipaths",{"_index":329,"title":{},"body":{"guards/AuthGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":518,"title":{},"body":{"injectables/EnvironmentUrlService.html":{}}}],["app",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["app.constants",{"_index":281,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["app.please",{"_index":795,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["appcomponent",{"_index":98,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":205,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":213,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":1176,"title":{},"body":{"index.html":{}}}],["asp.net",{"_index":429,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"miscellaneous/variables.html":{}}}],["assigned",{"_index":427,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["associated",{"_index":423,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["async",{"_index":320,"title":{},"body":{"guards/AuthGuard.html":{}}}],["attempt",{"_index":379,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["attempting",{"_index":388,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["auth",{"_index":284,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["auth'},{'name",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["auth.component.html",{"_index":299,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":298,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth0/angular",{"_index":486,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["authchanged",{"_index":461,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authchangesubject",{"_index":462,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authcomponent",{"_index":169,"title":{"components/AuthComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authentication",{"_index":373,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/RegistrationResponseDto.html":{},"modules/SharedModule.html":{},"miscellaneous/functions.html":{}}}],["authentication/authentication.service",{"_index":336,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavComponent.html":{}}}],["authenticationdto",{"_index":389,"title":{"interfaces/AuthenticationDto.html":{}},"body":{"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"coverage.html":{}}}],["authenticationservice",{"_index":118,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["authguard",{"_index":277,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authguard,adminguard",{"_index":292,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authorizationservice",{"_index":77,"title":{"injectables/AuthorizationService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["authresponsedto",{"_index":334,"title":{"interfaces/AuthResponseDto.html":{}},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/RegistrationResponseDto.html":{},"coverage.html":{}}}],["authservice",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["authservice:authenticationservice",{"_index":722,"title":{},"body":{"components/NavComponent.html":{}}}],["auto",{"_index":313,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["automatically",{"_index":1169,"title":{},"body":{"index.html":{}}}],["available",{"_index":1204,"title":{},"body":{"modules.html":{}}}],["await",{"_index":340,"title":{},"body":{"guards/AuthGuard.html":{}}}],["back",{"_index":645,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["backend",{"_index":43,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["bar",{"_index":980,"title":{},"body":{"modules/SharedModule.html":{}}}],["basicauthenticationservice",{"_index":714,"title":{},"body":{"components/NavComponent.html":{}}}],["baskerville",{"_index":740,"title":{},"body":{"components/NavComponent.html":{}}}],["before",{"_index":1158,"title":{},"body":{"index.html":{}}}],["behaviorsubject",{"_index":1023,"title":{},"body":{"injectables/UrlService.html":{}}}],["behaviorsubject(null",{"_index":1024,"title":{},"body":{"injectables/UrlService.html":{}}}],["beta.34",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":574,"title":{},"body":{"components/FooterComponent.html":{},"components/NavComponent.html":{},"classes/Routing.html":{}}}],["blame",{"_index":926,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["block",{"_index":698,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["body",{"_index":32,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{}}}],["boolean",{"_index":86,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{}}}],["bootstrap",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["bottom",{"_index":1007,"title":{},"body":{"modules/SharedModule.html":{}}}],["bottom:10px",{"_index":635,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["branch",{"_index":1078,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["break",{"_index":550,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["browse",{"_index":1202,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":952,"title":{},"body":{"modules/SharedModule.html":{}}}],["browseranimationsmodule",{"_index":951,"title":{},"body":{"modules/SharedModule.html":{}}}],["browsermodule",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1175,"title":{},"body":{"index.html":{}}}],["button",{"_index":865,"title":{},"body":{"components/RegisterComponent.html":{}}}],["canactivate",{"_index":75,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":80,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["capabilities",{"_index":1193,"title":{},"body":{"index.html":{}}}],["capable",{"_index":414,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["card",{"_index":628,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["case",{"_index":543,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catch(ex",{"_index":362,"title":{},"body":{"guards/AuthGuard.html":{}}}],["catcherror",{"_index":538,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror(error",{"_index":540,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["caught",{"_index":1157,"title":{},"body":{"index.html":{}}}],["cdk",{"_index":991,"title":{},"body":{"modules/SharedModule.html":{}}}],["center",{"_index":629,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["change",{"_index":731,"title":{},"body":{"components/NavComponent.html":{},"index.html":{}}}],["changed",{"_index":307,"title":{},"body":{"components/AuthComponent.html":{}}}],["characters",{"_index":406,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["check",{"_index":1037,"title":{},"body":{"classes/Validation.html":{},"index.html":{}}}],["checkcontrol",{"_index":1047,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol.errors",{"_index":1049,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol.errors.matching",{"_index":1050,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol.value",{"_index":1052,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrolname",{"_index":1031,"title":{},"body":{"classes/Validation.html":{}}}],["checks",{"_index":1033,"title":{},"body":{"classes/Validation.html":{}}}],["choice",{"_index":1188,"title":{},"body":{"index.html":{}}}],["chrome",{"_index":928,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["church's",{"_index":793,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["church\\'s",{"_index":794,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["city",{"_index":452,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["class",{"_index":58,"title":{"classes/Routing.html":{},"classes/Validation.html":{}},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["classes",{"_index":893,"title":{},"body":{"classes/Routing.html":{},"classes/Validation.html":{},"overview.html":{}}}],["cli",{"_index":1161,"title":{},"body":{"index.html":{}}}],["client",{"_index":1150,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":420,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["codelength",{"_index":1058,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["collect",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["color",{"_index":741,"title":{},"body":{"components/NavComponent.html":{}}}],["column",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["command",{"_index":1189,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":948,"title":{},"body":{"modules/SharedModule.html":{}}}],["complete",{"_index":907,"title":{},"body":{"classes/Routing.html":{},"components/VerifyPhoneComponent.html":{}}}],["component",{"_index":97,"title":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["components",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"overview.html":{}}}],["concatenates",{"_index":900,"title":{},"body":{"classes/Routing.html":{}}}],["config",{"_index":1010,"title":{},"body":{"modules/SharedModule.html":{}}}],["confirm",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["confirmation",{"_index":287,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PhoneConfirmationComponent.html":{},"miscellaneous/variables.html":{}}}],["confirmation'},{'name",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["confirmation.component",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["confirmation.component.html",{"_index":778,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["confirmation.component.scss",{"_index":777,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["confirmation.component.ts",{"_index":776,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"coverage.html":{}}}],["confirmation.component.ts:10",{"_index":783,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["confirmation.component.ts:11",{"_index":781,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["confirmation.component.ts:15",{"_index":782,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["confirmation/phone",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PhoneConfirmationComponent.html":{},"coverage.html":{}}}],["confirmpassword",{"_index":836,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["confirmphone",{"_index":463,"title":{},"body":{"injectables/AuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["congratulations",{"_index":302,"title":{},"body":{"components/AuthComponent.html":{}}}],["console.log(error",{"_index":564,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["console.log(this.validationerrors",{"_index":691,"title":{},"body":{"components/LoginComponent.html":{}}}],["const",{"_index":282,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["constant",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":13,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["constructor(accountservice",{"_index":602,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["constructor(authorizationservice",{"_index":76,"title":{},"body":{"guards/AdminGuard.html":{}}}],["constructor(authservice",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["constructor(http",{"_index":14,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{}}}],["constructor(jwthelper",{"_index":497,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(private",{"_index":59,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["constructor(public",{"_index":713,"title":{},"body":{"components/NavComponent.html":{}}}],["constructor(router",{"_index":526,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{}}}],["constructor(toastr",{"_index":757,"title":{},"body":{"injectables/NotificationService.html":{}}}],["contact",{"_index":730,"title":{},"body":{"components/NavComponent.html":{}}}],["contain",{"_index":810,"title":{},"body":{"components/RegisterComponent.html":{}}}],["container",{"_index":308,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["content",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/NavComponent.html":{}}}],["control",{"_index":1045,"title":{},"body":{"classes/Validation.html":{}}}],["control.value",{"_index":1051,"title":{},"body":{"classes/Validation.html":{}}}],["controller",{"_index":40,"title":{},"body":{"injectables/AccountService.html":{},"classes/Routing.html":{},"miscellaneous/variables.html":{}}}],["controlname",{"_index":675,"title":{},"body":{"components/LoginComponent.html":{},"classes/Validation.html":{}}}],["controls",{"_index":1044,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(checkcontrolname",{"_index":1048,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(checkcontrolname)?.seterrors",{"_index":1053,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(controlname",{"_index":1046,"title":{},"body":{"classes/Validation.html":{}}}],["core",{"_index":430,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"miscellaneous/variables.html":{}}}],["core/authentication/authentication.service",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["core/footer/footer.component",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["core/guards",{"_index":1160,"title":{},"body":{"index.html":{}}}],["core/guards/admin.guard",{"_index":279,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/guards/auth.guard",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/header/nav.component",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["core/interceptors/error.interceptor",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["core/interceptors/error.interceptor.ts",{"_index":1156,"title":{},"body":{"index.html":{}}}],["core/services/url.service",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["correct",{"_index":935,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["coverage",{"_index":1094,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createcompleteroute",{"_index":898,"title":{},"body":{"classes/Routing.html":{}}}],["currenturl",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["custom",{"_index":895,"title":{},"body":{"classes/Routing.html":{},"classes/Validation.html":{}}}],["dashboard",{"_index":510,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["dashboard.component.html",{"_index":512,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":511,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":171,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":366,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/NavComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["declarations",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["decodedtoken",{"_index":503,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["decodedtoken[identity_roles",{"_index":506,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["decoration:none",{"_index":743,"title":{},"body":{"components/NavComponent.html":{}}}],["default",{"_index":26,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Routing.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":18,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["dependencies",{"_index":207,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":38,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"interfaces/ResetPasswordDto.html":{},"classes/Routing.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{}}}],["dev",{"_index":929,"title":{},"body":{"components/ServerErrorComponent.html":{},"index.html":{}}}],["development",{"_index":1163,"title":{},"body":{"index.html":{}}}],["different",{"_index":593,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["digit",{"_index":412,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["digits",{"_index":457,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["direction",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["directive",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["directives",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1174,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1178,"title":{},"body":{"index.html":{}}}],["disallowedroutes",{"_index":1013,"title":{},"body":{"modules/SharedModule.html":{}}}],["disappear",{"_index":920,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["display",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{}}}],["display:block",{"_index":1090,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["dist",{"_index":1177,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1095,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["driver",{"_index":1143,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dynamic",{"_index":1129,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1186,"title":{},"body":{"index.html":{}}}],["element",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["email",{"_index":444,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/NavComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["encountered",{"_index":384,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["end",{"_index":572,"title":{},"body":{"components/FooterComponent.html":{},"components/NavComponent.html":{},"components/ServerErrorComponent.html":{},"index.html":{}}}],["ensure",{"_index":399,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["enter",{"_index":621,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["enumerations",{"_index":1138,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["envaddress",{"_index":903,"title":{},"body":{"classes/Routing.html":{}}}],["envaddress}/${route",{"_index":909,"title":{},"body":{"classes/Routing.html":{}}}],["environment",{"_index":53,"title":{},"body":{"injectables/AccountService.html":{},"injectables/EnvironmentUrlService.html":{}}}],["environment.apiurl",{"_index":520,"title":{},"body":{"injectables/EnvironmentUrlService.html":{}}}],["environment.ts",{"_index":905,"title":{},"body":{"classes/Routing.html":{}}}],["environmenturlservice",{"_index":17,"title":{"injectables/EnvironmentUrlService.html":{}},"body":{"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/EnvironmentUrlService.html":{},"coverage.html":{}}}],["envurl",{"_index":16,"title":{},"body":{"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{}}}],["equal",{"_index":1034,"title":{},"body":{"classes/Validation.html":{}}}],["equals",{"_index":1042,"title":{},"body":{"classes/Validation.html":{}}}],["error",{"_index":294,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["error'},{'name",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["error.component",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["error.component.html",{"_index":913,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.component.scss",{"_index":912,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.component.ts",{"_index":911,"title":{},"body":{"components/ServerErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:10",{"_index":914,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.component.ts:17",{"_index":915,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.details",{"_index":946,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.error",{"_index":558,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error.message",{"_index":921,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.status",{"_index":542,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/RegisterComponent.html":{}}}],["error.statustext",{"_index":549,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error/server",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ServerErrorComponent.html":{},"coverage.html":{}}}],["errorinterceptor",{"_index":215,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["errorname",{"_index":678,"title":{},"body":{"components/LoginComponent.html":{}}}],["errors",{"_index":383,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/RegistrationResponseDto.html":{},"index.html":{}}}],["errors.join",{"_index":547,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errorsasstring",{"_index":546,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["event",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"injectables/UrlService.html":{}}}],["event.url",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["examine",{"_index":934,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["execute",{"_index":1183,"title":{},"body":{"index.html":{}}}],["expired",{"_index":651,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["export",{"_index":57,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["exports",{"_index":296,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["extends",{"_index":374,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["false",{"_index":96,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["family",{"_index":739,"title":{},"body":{"components/NavComponent.html":{}}}],["fb",{"_index":1060,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["fb.group",{"_index":1072,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["field",{"_index":697,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["files",{"_index":1171,"title":{},"body":{"index.html":{}}}],["filter",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["first",{"_index":438,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"index.html":{}}}],["firstname",{"_index":439,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["flag",{"_index":376,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["flex",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/NavComponent.html":{}}}],["flexlayoutmodule",{"_index":992,"title":{},"body":{"modules/SharedModule.html":{}}}],["following",{"_index":941,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["font",{"_index":631,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/NavComponent.html":{}}}],["footer",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["footer'},{'name",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["footer.component.html",{"_index":568,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":567,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":173,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forbidden",{"_index":285,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ForbiddenComponent.html":{},"miscellaneous/variables.html":{}}}],["forbidden'},{'name",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["forbidden.component.html",{"_index":581,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["forbidden.component.scss",{"_index":580,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["forbiddencomponent",{"_index":175,"title":{"components/ForbiddenComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgot",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["forgotpassword",{"_index":10,"title":{},"body":{"injectables/AccountService.html":{},"miscellaneous/variables.html":{}}}],["forgotpasswordcomponent",{"_index":177,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgotpasswordform",{"_index":599,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotpasswordform.phone",{"_index":617,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["form",{"_index":694,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["form's",{"_index":1036,"title":{},"body":{"classes/Validation.html":{}}}],["formatted",{"_index":442,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["formattedphone",{"_index":779,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["formbuilder",{"_index":1061,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["formcontrol",{"_index":609,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Validation.html":{}}}],["formgroup",{"_index":605,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["forms",{"_index":1029,"title":{},"body":{"classes/Validation.html":{}}}],["formsmodule",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["formvalue",{"_index":886,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["formvalue.password",{"_index":888,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["formvalues",{"_index":839,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.address1.trim",{"_index":846,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.address2",{"_index":847,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.address2.trim",{"_index":848,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.city.trim",{"_index":849,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.email",{"_index":844,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.email.trim",{"_index":845,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.firstname.trim",{"_index":842,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.lastname.trim",{"_index":843,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.password",{"_index":840,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.phonenumber",{"_index":841,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.zipcode.trim",{"_index":850,"title":{},"body":{"components/RegisterComponent.html":{}}}],["forth",{"_index":646,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["found",{"_index":746,"title":{},"body":{"components/NotFoundComponent.html":{},"classes/Routing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["found'},{'name",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["found.component",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.html",{"_index":748,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":747,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":745,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":750,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":749,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["front",{"_index":940,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["full",{"_index":290,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":1002,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{}}}],["functions",{"_index":1144,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1194,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1173,"title":{},"body":{"index.html":{}}}],["generated",{"_index":432,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"index.html":{}}}],["getemailerror",{"_index":804,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getfirstnameerror",{"_index":805,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getlastnameerror",{"_index":806,"title":{},"body":{"components/RegisterComponent.html":{}}}],["gets",{"_index":998,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/functions.html":{}}}],["getting",{"_index":1146,"title":{"index.html":{}},"body":{}}],["go",{"_index":1197,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1203,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["guard",{"_index":70,"title":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":72,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"overview.html":{}}}],["half",{"_index":870,"title":{},"body":{"components/RegisterComponent.html":{}}}],["handling",{"_index":1153,"title":{},"body":{"index.html":{}}}],["haserror",{"_index":656,"title":{},"body":{"components/LoginComponent.html":{}}}],["hashed",{"_index":396,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["hashing",{"_index":400,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["header",{"_index":630,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["height",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["height:auto",{"_index":578,"title":{},"body":{"components/FooterComponent.html":{}}}],["help",{"_index":1195,"title":{},"body":{"index.html":{}}}],["hide",{"_index":600,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["hide=true",{"_index":825,"title":{},"body":{"components/RegisterComponent.html":{}}}],["hideconfirm",{"_index":799,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["hideconfirm=true",{"_index":826,"title":{},"body":{"components/RegisterComponent.html":{}}}],["history.state.data",{"_index":785,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["home",{"_index":751,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["html",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["http",{"_index":25,"title":{},"body":{"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{}}}],["http://localhost:4200",{"_index":1168,"title":{},"body":{"index.html":{}}}],["http://schemas.microsoft.com/ws/2008/06/identity/claims/role",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":15,"title":{},"body":{"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{}}}],["httpclientmodule",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":533,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httphandler",{"_index":531,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpinterceptor",{"_index":534,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httprequest",{"_index":530,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["iconfig",{"_index":611,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["identifier",{"_index":1096,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":431,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"miscellaneous/variables.html":{}}}],["identity_roles",{"_index":500,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["if(!accesstoken",{"_index":351,"title":{},"body":{"guards/AuthGuard.html":{}}}],["img",{"_index":576,"title":{},"body":{"components/FooterComponent.html":{}}}],["implements",{"_index":89,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["import",{"_index":45,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["imports",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["information",{"_index":435,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"injectables/NotificationService.html":{},"injectables/UrlService.html":{}},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"injectables/UrlService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"injectables/NotificationService.html":{},"injectables/UrlService.html":{},"overview.html":{}}}],["inspet",{"_index":931,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["instanceof",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["intercept",{"_index":525,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["intercept(request",{"_index":529,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptor",{"_index":522,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":523,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interface",{"_index":363,"title":{"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"coverage.html":{}}}],["interfaces",{"_index":364,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"overview.html":{}}}],["internal",{"_index":919,"title":{},"body":{"components/ServerErrorComponent.html":{},"miscellaneous/variables.html":{}}}],["investigation",{"_index":944,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["isauthenticated:boolean",{"_index":492,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isauthsuccessful",{"_index":375,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["isrefreshsuccess",{"_index":339,"title":{},"body":{"guards/AuthGuard.html":{}}}],["issuccessfulregistration",{"_index":386,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["issue",{"_index":305,"title":{},"body":{"components/AuthComponent.html":{},"components/ServerErrorComponent.html":{}}}],["isuniqueemail",{"_index":800,"title":{},"body":{"components/RegisterComponent.html":{}}}],["isuniqueemail=true",{"_index":828,"title":{},"body":{"components/RegisterComponent.html":{}}}],["isuseradmin",{"_index":496,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["isuserauthenticated",{"_index":464,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/NavComponent.html":{}}}],["isuserauthenticated:boolean",{"_index":712,"title":{},"body":{"components/NavComponent.html":{}}}],["items",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["jacob",{"_index":727,"title":{},"body":{"components/NavComponent.html":{}}}],["justify",{"_index":571,"title":{},"body":{"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/NavComponent.html":{}}}],["jwt",{"_index":380,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interfaces/RegistrationResponseDto.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["jwthelper",{"_index":470,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["jwthelperservice",{"_index":471,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["jwtmodule",{"_index":997,"title":{},"body":{"modules/SharedModule.html":{}}}],["jwtmodule.forroot",{"_index":1009,"title":{},"body":{"modules/SharedModule.html":{}}}],["jwttoken",{"_index":352,"title":{},"body":{"guards/AuthGuard.html":{}}}],["jwttoken).topromise",{"_index":355,"title":{},"body":{"guards/AuthGuard.html":{}}}],["jwttokendto",{"_index":332,"title":{"interfaces/JwtTokenDto.html":{}},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/RegistrationResponseDto.html":{},"coverage.html":{}}}],["karma",{"_index":1185,"title":{},"body":{"index.html":{}}}],["large",{"_index":633,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["last",{"_index":440,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["lastname",{"_index":441,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["layout",{"_index":994,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["leaving",{"_index":1159,"title":{},"body":{"index.html":{}}}],["legend",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["length",{"_index":404,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["letter",{"_index":1091,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["letters",{"_index":811,"title":{},"body":{"components/RegisterComponent.html":{}}}],["list",{"_index":967,"title":{},"body":{"modules/SharedModule.html":{}}}],["lived",{"_index":643,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["local",{"_index":1000,"title":{},"body":{"modules/SharedModule.html":{}}}],["localhost:5001",{"_index":1012,"title":{},"body":{"modules/SharedModule.html":{}}}],["localstorage.getitem(tokens.access",{"_index":338,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"modules/SharedModule.html":{}}}],["localstorage.getitem(tokens.refresh",{"_index":350,"title":{},"body":{"guards/AuthGuard.html":{}}}],["localstorage.removeitem(tokens.access",{"_index":489,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.removeitem(tokens.refresh",{"_index":490,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem(tokens.access",{"_index":360,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["localstorage.setitem(tokens.refresh",{"_index":361,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["log",{"_index":592,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/UpdatedPasswordComponent.html":{}}}],["logic",{"_index":1154,"title":{},"body":{"index.html":{}}}],["login",{"_index":653,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["login.component.html",{"_index":655,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":654,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.password",{"_index":683,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.username",{"_index":682,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":180,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":657,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginformvalue",{"_index":680,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginuser",{"_index":465,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{}}}],["logo",{"_index":738,"title":{},"body":{"components/NavComponent.html":{}}}],["logout",{"_index":466,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/NavComponent.html":{}}}],["long",{"_index":458,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["mail",{"_index":860,"title":{},"body":{"components/RegisterComponent.html":{}}}],["main",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["make",{"_index":622,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ServerErrorComponent.html":{}}}],["manage",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"injectables/AuthenticationService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["managetemplates",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["managetemplatescomponent",{"_index":182,"title":{"components/ManageTemplatesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["margin",{"_index":311,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["margin:5",{"_index":1089,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["mask",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{},"dependencies.html":{}}}],["mat",{"_index":627,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["matbuttonmodule",{"_index":953,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbuttontogglemodule",{"_index":955,"title":{},"body":{"modules/SharedModule.html":{}}}],["matcardmodule",{"_index":957,"title":{},"body":{"modules/SharedModule.html":{}}}],["match",{"_index":422,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{}}}],["match(controlname",{"_index":1030,"title":{},"body":{"classes/Validation.html":{}}}],["matcheckboxmodule",{"_index":961,"title":{},"body":{"modules/SharedModule.html":{}}}],["matching",{"_index":69,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":959,"title":{},"body":{"modules/SharedModule.html":{}}}],["material",{"_index":950,"title":{},"body":{"modules/SharedModule.html":{}}}],["matformfieldmodule",{"_index":963,"title":{},"body":{"modules/SharedModule.html":{}}}],["matgridlistmodule",{"_index":965,"title":{},"body":{"modules/SharedModule.html":{}}}],["maticonmodule",{"_index":968,"title":{},"body":{"modules/SharedModule.html":{}}}],["matinputmodule",{"_index":970,"title":{},"body":{"modules/SharedModule.html":{}}}],["matlistmodule",{"_index":972,"title":{},"body":{"modules/SharedModule.html":{}}}],["matmenumodule",{"_index":974,"title":{},"body":{"modules/SharedModule.html":{}}}],["matnativedatemodule",{"_index":976,"title":{},"body":{"modules/SharedModule.html":{}}}],["matprogressbarmodule",{"_index":978,"title":{},"body":{"modules/SharedModule.html":{}}}],["matselectmodule",{"_index":981,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsidenavmodule",{"_index":983,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattabsmodule",{"_index":985,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattoolbarmodule",{"_index":987,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattooltipmodule",{"_index":989,"title":{},"body":{"modules/SharedModule.html":{}}}],["max",{"_index":315,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["maximum",{"_index":403,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["media",{"_index":314,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{}}}],["menu",{"_index":732,"title":{},"body":{"components/NavComponent.html":{}}}],["message",{"_index":766,"title":{},"body":{"injectables/NotificationService.html":{}}}],["messages",{"_index":763,"title":{},"body":{"injectables/NotificationService.html":{}}}],["metadata",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["method",{"_index":908,"title":{},"body":{"classes/Routing.html":{}}}],["methods",{"_index":74,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["min",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["miscellaneous",{"_index":1137,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":204,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}},"body":{}}],["modules",{"_index":206,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/account/auth/auth.component",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/account/auth/login/login.component",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/account/auth/register/register.component",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/account/password/forgot",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/account/password/reset",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/account/password/updated",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/account/phone/phone",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/account/phone/verify",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/church",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/dashboard/pages/dashboard/dashboard.component",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/errors/pages/forbidden/forbidden.component",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/errors/pages/not",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/errors/pages/server",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["more",{"_index":1196,"title":{},"body":{"index.html":{}}}],["multi",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":22,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["nav",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["nav'},{'name",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["nav.component.html",{"_index":708,"title":{},"body":{"components/NavComponent.html":{}}}],["nav.component.scss",{"_index":707,"title":{},"body":{"components/NavComponent.html":{}}}],["navbar",{"_index":733,"title":{},"body":{"components/NavComponent.html":{}}}],["navcomponent",{"_index":185,"title":{"components/NavComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":1167,"title":{},"body":{"index.html":{}}}],["navigatetologin",{"_index":582,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["navigation",{"_index":896,"title":{},"body":{"classes/Routing.html":{},"components/ServerErrorComponent.html":{}}}],["navigation?.extras?.state?.error",{"_index":918,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["navigationend",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"injectables/UrlService.html":{}}}],["navigationextras",{"_index":537,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["need",{"_index":1190,"title":{},"body":{"index.html":{}}}],["network",{"_index":932,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["new",{"_index":475,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UrlService.html":{},"coverage.html":{},"index.html":{}}}],["newrefreshtoken",{"_index":358,"title":{},"body":{"guards/AuthGuard.html":{}}}],["newtoken",{"_index":356,"title":{},"body":{"guards/AuthGuard.html":{}}}],["next",{"_index":85,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/ServerErrorComponent.html":{}}}],["next.handle(request).pipe",{"_index":539,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":1165,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["ngoninit",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["ngx",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/VerifyPhoneComponent.html":{},"dependencies.html":{}}}],["ngxmaskmodule",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxmaskmodule.forroot",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["non",{"_index":395,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["none",{"_index":737,"title":{},"body":{"components/NavComponent.html":{}}}],["note",{"_index":922,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["notfound",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notfoundcomponent",{"_index":187,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notifications",{"_index":995,"title":{},"body":{"modules/SharedModule.html":{}}}],["notificationservice",{"_index":527,"title":{"injectables/NotificationService.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/NotificationService.html":{},"coverage.html":{}}}],["null",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthorizationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["number",{"_index":391,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["object",{"_index":368,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["object.values(error.error",{"_index":545,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["observable",{"_index":66,"title":{},"body":{"injectables/AccountService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/UrlService.html":{}}}],["ocurred",{"_index":859,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["one",{"_index":867,"title":{},"body":{"components/RegisterComponent.html":{}}}],["oninit",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["open",{"_index":927,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["optional",{"_index":24,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["options",{"_index":613,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":424,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["otherwise",{"_index":1035,"title":{},"body":{"classes/Validation.html":{}}}],["out",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1198,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owner",{"_index":624,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["package",{"_index":1119,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":575,"title":{},"body":{"components/FooterComponent.html":{},"components/NavComponent.html":{}}}],["page",{"_index":590,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/NotFoundComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["pair",{"_index":421,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["param",{"_index":64,"title":{},"body":{"injectables/AccountService.html":{},"classes/Routing.html":{},"classes/Validation.html":{}}}],["parameters",{"_index":20,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["partial",{"_index":614,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["pass",{"_index":369,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["passed",{"_index":644,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["password",{"_index":35,"title":{},"body":{"injectables/AccountService.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthenticationDto.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/UpdatedPasswordComponent.html":{},"interfaces/UserForRegistrationDto.html":{},"miscellaneous/variables.html":{}}}],["password'},{'name",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["password.component",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["password.component.html",{"_index":598,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatedPasswordComponent.html":{}}}],["password.component.scss",{"_index":597,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatedPasswordComponent.html":{}}}],["password.component.ts",{"_index":596,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatedPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["password.component.ts:10",{"_index":1015,"title":{},"body":{"components/UpdatedPasswordComponent.html":{}}}],["password.component.ts:14",{"_index":1016,"title":{},"body":{"components/UpdatedPasswordComponent.html":{}}}],["password.component.ts:15",{"_index":879,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:16",{"_index":878,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":606,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:18",{"_index":607,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:19",{"_index":603,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:20",{"_index":877,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:21",{"_index":880,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:22",{"_index":875,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":604,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:28",{"_index":876,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:33",{"_index":608,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:47",{"_index":881,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/forgot",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["password/reset",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["password/updated",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/UpdatedPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordminlength",{"_index":801,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwords",{"_index":863,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["path",{"_index":283,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":289,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["paths",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payload",{"_index":31,"title":{},"body":{"injectables/AccountService.html":{}}}],["persisting",{"_index":649,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["phone",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthenticationDto.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["phone.component",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["phone.component.html",{"_index":1057,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.scss",{"_index":1056,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts",{"_index":1055,"title":{},"body":{"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["phone.component.ts:19",{"_index":1069,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:20",{"_index":1065,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:21",{"_index":1066,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:22",{"_index":1067,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:23",{"_index":1068,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:24",{"_index":1062,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:38",{"_index":1063,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:52",{"_index":1064,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone/verify",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["phoneconfirmationcomponent",{"_index":189,"title":{"components/PhoneConfirmationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["phonenumber",{"_index":416,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["phonenumberdto",{"_index":51,"title":{"interfaces/PhoneNumberDto.html":{}},"body":{"injectables/AccountService.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["phoneverification",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phoneverificationdto",{"_index":50,"title":{"interfaces/PhoneVerificationDto.html":{}},"body":{"injectables/AccountService.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["place",{"_index":402,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["plain",{"_index":393,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["platform",{"_index":1187,"title":{},"body":{"index.html":{}}}],["please",{"_index":591,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["portion",{"_index":453,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["positionclass",{"_index":1005,"title":{},"body":{"modules/SharedModule.html":{}}}],["postman",{"_index":937,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["previous",{"_index":1080,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["previousnavigationdata",{"_index":873,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["previousurl",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["private",{"_index":60,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["probably",{"_index":925,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["project",{"_index":1149,"title":{},"body":{"index.html":{}}}],["promise",{"_index":328,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properties",{"_index":8,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["property",{"_index":1040,"title":{},"body":{"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["provide",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":55,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"injectables/NotificationService.html":{},"injectables/UrlService.html":{}}}],["providedin:'root",{"_index":673,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["providers",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":9,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["queryparams",{"_index":93,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/ForbiddenComponent.html":{}}}],["reactiveformsmodule",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["receive",{"_index":409,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["receives",{"_index":34,"title":{},"body":{"injectables/AccountService.html":{}}}],["receiving",{"_index":426,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["recording",{"_index":377,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["records",{"_index":387,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["redirectto",{"_index":288,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1199,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":348,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/RegistrationResponseDto.html":{},"miscellaneous/variables.html":{}}}],["refreshauthentication",{"_index":467,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["refreshing",{"_index":346,"title":{},"body":{"guards/AuthGuard.html":{},"components/ServerErrorComponent.html":{}}}],["refreshtoken",{"_index":349,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/JwtTokenDto.html":{},"miscellaneous/variables.html":{}}}],["refreshtokens",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["register",{"_index":729,"title":{},"body":{"components/NavComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["register.component.html",{"_index":798,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":797,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":191,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":304,"title":{},"body":{"components/AuthComponent.html":{},"components/PhoneConfirmationComponent.html":{}}}],["registerform",{"_index":802,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerformvalue",{"_index":838,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registering",{"_index":436,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["registeruser",{"_index":468,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registration",{"_index":381,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["registrationresponsedto",{"_index":385,"title":{"interfaces/RegistrationResponseDto.html":{}},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{},"coverage.html":{}}}],["reload",{"_index":1170,"title":{},"body":{"index.html":{}}}],["renewed",{"_index":650,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["represent",{"_index":67,"title":{},"body":{"injectables/AccountService.html":{}}}],["representing",{"_index":397,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["represents",{"_index":641,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["reproduce",{"_index":936,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["request",{"_index":392,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interceptors/ErrorInterceptor.html":{},"components/ServerErrorComponent.html":{}}}],["requested",{"_index":594,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["required",{"_index":407,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["reset",{"_index":36,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthenticationDto.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"overview.html":{}}}],["reset.please",{"_index":1017,"title":{},"body":{"components/UpdatedPasswordComponent.html":{}}}],["resetpassword",{"_index":11,"title":{},"body":{"injectables/AccountService.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordcomponent",{"_index":193,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetpassworddto",{"_index":41,"title":{"interfaces/ResetPasswordDto.html":{}},"body":{"injectables/AccountService.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["resetpassworddto.phonenumber",{"_index":892,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordform",{"_index":874,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordformvalue",{"_index":885,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordtoken",{"_index":12,"title":{},"body":{"injectables/AccountService.html":{},"miscellaneous/variables.html":{}}}],["resetting",{"_index":306,"title":{},"body":{"components/AuthComponent.html":{}}}],["response",{"_index":353,"title":{},"body":{"guards/AuthGuard.html":{},"components/RegisterComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["response.accesstoken",{"_index":357,"title":{},"body":{"guards/AuthGuard.html":{}}}],["response.refreshtoken",{"_index":359,"title":{},"body":{"guards/AuthGuard.html":{}}}],["result",{"_index":725,"title":{},"body":{"components/NavComponent.html":{}}}],["result.accesstoken",{"_index":686,"title":{},"body":{"components/LoginComponent.html":{}}}],["result.refreshtoken",{"_index":687,"title":{},"body":{"components/LoginComponent.html":{}}}],["results",{"_index":68,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":62,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"classes/Routing.html":{},"modules/SharedModule.html":{},"classes/Validation.html":{}}}],["returned",{"_index":1155,"title":{},"body":{"index.html":{}}}],["returns",{"_index":65,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["returnurl",{"_index":94,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["right",{"_index":1008,"title":{},"body":{"modules/SharedModule.html":{}}}],["rock",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/PhoneConfirmationComponent.html":{}}}],["rock's",{"_index":1152,"title":{},"body":{"index.html":{}}}],["role",{"_index":505,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/NavComponent.html":{}}}],["roles",{"_index":501,"title":{},"body":{"injectables/AuthorizationService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["roles.administrator",{"_index":507,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["roles.superadmin",{"_index":508,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["root",{"_index":56,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"injectables/NotificationService.html":{},"injectables/UrlService.html":{}}}],["root'},{'name",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["route",{"_index":33,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Routing.html":{},"components/VerifyPhoneComponent.html":{}}}],["router",{"_index":78,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["routermodule",{"_index":275,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":295,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerpaths",{"_index":280,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routerstatesnapshot",{"_index":83,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["routes",{"_index":276,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["routing",{"_index":48,"title":{"classes/Routing.html":{}},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{},"classes/Routing.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing.module",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":274,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.ts",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":1164,"title":{},"body":{"index.html":{}}}],["running",{"_index":1179,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":485,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/UrlService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["same",{"_index":939,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scaffolding",{"_index":1172,"title":{},"body":{"index.html":{}}}],["secondary",{"_index":450,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["security",{"_index":398,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["see",{"_index":938,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["seeing",{"_index":923,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["selector",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["send",{"_index":408,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["sendauthstatechangenotification",{"_index":469,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sending",{"_index":425,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["sends",{"_index":30,"title":{},"body":{"injectables/AccountService.html":{},"components/VerifyPhoneComponent.html":{}}}],["sent",{"_index":42,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/AuthenticationDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["serve",{"_index":1166,"title":{},"body":{"index.html":{}}}],["server",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["servererror",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["servererrorcomponent",{"_index":194,"title":{"components/ServerErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["service",{"_index":487,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["services/authorization.service",{"_index":88,"title":{},"body":{"guards/AdminGuard.html":{}}}],["services/environment",{"_index":337,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{}}}],["services/manage",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ManageTemplatesComponent.html":{},"coverage.html":{}}}],["services/notification.service",{"_index":536,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["set",{"_index":1041,"title":{},"body":{"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["setpreviousurl",{"_index":1019,"title":{},"body":{"injectables/UrlService.html":{}}}],["setpreviousurl(previousurl",{"_index":1021,"title":{},"body":{"injectables/UrlService.html":{}}}],["shared/shared.module",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":214,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["short",{"_index":642,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["show",{"_index":736,"title":{},"body":{"components/NavComponent.html":{}}}],["showerror",{"_index":753,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showerror(messages",{"_index":761,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showinfo",{"_index":754,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showinfo(message",{"_index":764,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showsuccess",{"_index":755,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showsuccess(message",{"_index":767,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showwarning",{"_index":756,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showwarning(message",{"_index":769,"title":{},"body":{"injectables/NotificationService.html":{}}}],["shrink",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["side",{"_index":1151,"title":{},"body":{"index.html":{}}}],["size",{"_index":632,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/NavComponent.html":{}}}],["sms",{"_index":415,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["sometext@moretext.tld",{"_index":443,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["space",{"_index":573,"title":{},"body":{"components/FooterComponent.html":{},"components/NavComponent.html":{}}}],["spacing",{"_index":1092,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["src/.../app.constants.ts",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../forgot",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../login.component.ts",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../register.component.ts",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.ts",{"_index":1139,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../shared.module.ts",{"_index":1145,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../verify",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":273,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.constants",{"_index":331,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["src/app/app.constants.ts",{"_index":1099,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.module.ts",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/authentication/authentication.service",{"_index":672,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["src/app/core/authentication/authentication.service.ts",{"_index":460,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/core/authentication/authentication.service.ts:18",{"_index":472,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:24",{"_index":477,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:25",{"_index":474,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:27",{"_index":483,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:31",{"_index":480,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:35",{"_index":481,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:41",{"_index":484,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:45",{"_index":479,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:51",{"_index":482,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:55",{"_index":478,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/footer/footer.component.ts",{"_index":566,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/core/footer/footer.component.ts:12",{"_index":570,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/core/footer/footer.component.ts:8",{"_index":569,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/core/guards/admin.guard.ts",{"_index":73,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/admin.guard.ts:12",{"_index":84,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/admin.guard.ts:8",{"_index":79,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":319,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/auth.guard.ts:13",{"_index":322,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:20",{"_index":323,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:37",{"_index":326,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/header/nav.component.ts",{"_index":706,"title":{},"body":{"components/NavComponent.html":{},"coverage.html":{}}}],["src/app/core/header/nav.component.ts:11",{"_index":709,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/core/header/nav.component.ts:32",{"_index":710,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/core/header/nav.component.ts:39",{"_index":711,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/core/interceptors/error.interceptor.ts",{"_index":524,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/core/interceptors/error.interceptor.ts:15",{"_index":528,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/core/interceptors/error.interceptor.ts:20",{"_index":532,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/core/services/account.service",{"_index":612,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["src/app/core/services/account.service.ts",{"_index":6,"title":{},"body":{"injectables/AccountService.html":{},"coverage.html":{}}}],["src/app/core/services/account.service.ts:10",{"_index":19,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:16",{"_index":44,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:20",{"_index":28,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:30",{"_index":29,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/authorization.service.ts",{"_index":495,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["src/app/core/services/authorization.service.ts:13",{"_index":499,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/core/services/authorization.service.ts:9",{"_index":498,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/core/services/environment",{"_index":516,"title":{},"body":{"injectables/EnvironmentUrlService.html":{},"coverage.html":{}}}],["src/app/core/services/notification.service.ts",{"_index":752,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/core/services/notification.service.ts:11",{"_index":768,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:15",{"_index":762,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:20",{"_index":765,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:24",{"_index":770,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:7",{"_index":759,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/url.service",{"_index":1070,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["src/app/core/services/url.service.ts",{"_index":1018,"title":{},"body":{"injectables/UrlService.html":{},"coverage.html":{}}}],["src/app/core/services/url.service.ts:10",{"_index":1020,"title":{},"body":{"injectables/UrlService.html":{}}}],["src/app/core/services/url.service.ts:14",{"_index":1022,"title":{},"body":{"injectables/UrlService.html":{}}}],["src/app/core/services/url.service.ts:9",{"_index":1025,"title":{},"body":{"injectables/UrlService.html":{}}}],["src/app/modules/account/auth/auth.component.ts",{"_index":297,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/modules/account/auth/auth.component.ts:12",{"_index":301,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/modules/account/auth/auth.component.ts:8",{"_index":300,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts",{"_index":652,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:20",{"_index":666,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:21",{"_index":669,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:22",{"_index":668,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:23",{"_index":665,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:24",{"_index":671,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:25",{"_index":663,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:26",{"_index":661,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:32",{"_index":662,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:40",{"_index":670,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:43",{"_index":664,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:47",{"_index":667,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts",{"_index":796,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:105",{"_index":812,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:21",{"_index":820,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:22",{"_index":822,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:23",{"_index":817,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:24",{"_index":814,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:25",{"_index":815,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:26",{"_index":821,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:27",{"_index":816,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:28",{"_index":818,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:29",{"_index":807,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:34",{"_index":813,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:65",{"_index":819,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:91",{"_index":808,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:98",{"_index":809,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/password/forgot",{"_index":595,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/account/password/reset",{"_index":872,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/modules/account/password/updated",{"_index":1014,"title":{},"body":{"components/UpdatedPasswordComponent.html":{},"coverage.html":{}}}],["src/app/modules/account/phone/phone",{"_index":775,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"coverage.html":{}}}],["src/app/modules/account/phone/verify",{"_index":1054,"title":{},"body":{"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/church",{"_index":700,"title":{},"body":{"components/ManageTemplatesComponent.html":{},"coverage.html":{}}}],["src/app/modules/dashboard/pages/dashboard/dashboard.component.ts",{"_index":509,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/modules/dashboard/pages/dashboard/dashboard.component.ts:12",{"_index":514,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/modules/dashboard/pages/dashboard/dashboard.component.ts:8",{"_index":513,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/modules/errors/pages/forbidden/forbidden.component.ts",{"_index":579,"title":{},"body":{"components/ForbiddenComponent.html":{},"coverage.html":{}}}],["src/app/modules/errors/pages/forbidden/forbidden.component.ts:11",{"_index":584,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["src/app/modules/errors/pages/forbidden/forbidden.component.ts:15",{"_index":585,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["src/app/modules/errors/pages/forbidden/forbidden.component.ts:19",{"_index":586,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["src/app/modules/errors/pages/not",{"_index":744,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/modules/errors/pages/server",{"_index":910,"title":{},"body":{"components/ServerErrorComponent.html":{},"coverage.html":{}}}],["src/app/shared/directives/routing",{"_index":49,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{}}}],["src/app/shared/directives/routing.ts",{"_index":894,"title":{},"body":{"classes/Routing.html":{},"coverage.html":{}}}],["src/app/shared/directives/routing.ts:11",{"_index":899,"title":{},"body":{"classes/Routing.html":{}}}],["src/app/shared/directives/validation",{"_index":824,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["src/app/shared/directives/validation.ts",{"_index":1028,"title":{},"body":{"classes/Validation.html":{},"coverage.html":{}}}],["src/app/shared/directives/validation.ts:14",{"_index":1032,"title":{},"body":{"classes/Validation.html":{}}}],["src/app/shared/models/account",{"_index":52,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["src/app/shared/models/account.ts",{"_index":390,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"coverage.html":{}}}],["src/app/shared/models/jwt",{"_index":333,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/JwtTokenDto.html":{},"coverage.html":{}}}],["src/app/shared/models/response",{"_index":335,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{}}}],["src/app/shared/models/response.ts",{"_index":365,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{},"coverage.html":{}}}],["src/app/shared/models/roles",{"_index":502,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/shared/models/roles.ts",{"_index":1140,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/shared.module.ts",{"_index":947,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/environments/environment",{"_index":521,"title":{},"body":{"injectables/EnvironmentUrlService.html":{}}}],["stack",{"_index":942,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["start",{"_index":945,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["started",{"_index":1147,"title":{"index.html":{}},"body":{}}],["state",{"_index":82,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["state.url",{"_index":95,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["statements",{"_index":1097,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":897,"title":{},"body":{"classes/Routing.html":{},"classes/Validation.html":{}}}],["storage",{"_index":1001,"title":{},"body":{"modules/SharedModule.html":{}}}],["storageservice",{"_index":715,"title":{},"body":{"components/NavComponent.html":{}}}],["stored",{"_index":999,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["street",{"_index":445,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["stretch",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["strictly",{"_index":410,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["string",{"_index":61,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"classes/Routing.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":902,"title":{},"body":{"classes/Routing.html":{},"classes/Validation.html":{}}}],["styles",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["styleurls",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["subject",{"_index":476,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["submit",{"_index":601,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["submitted",{"_index":803,"title":{},"body":{"components/RegisterComponent.html":{}}}],["submitted=false",{"_index":827,"title":{},"body":{"components/RegisterComponent.html":{}}}],["subscribe",{"_index":619,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["subscribe((event:event",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(response",{"_index":852,"title":{},"body":{"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["subscribe(result",{"_index":685,"title":{},"body":{"components/LoginComponent.html":{},"components/NavComponent.html":{}}}],["subtitle",{"_index":636,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["successful",{"_index":372,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["successfully",{"_index":303,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthenticationDto.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"components/UpdatedPasswordComponent.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["suite",{"_index":449,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["superadmin",{"_index":1141,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["support",{"_index":1200,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":623,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ServerErrorComponent.html":{}}}],["svg",{"_index":1201,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":541,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["tab",{"_index":933,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["table",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":401,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["template",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["templates",{"_index":291,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ManageTemplatesComponent.html":{},"miscellaneous/variables.html":{}}}],["templates'},{'name",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["templates.component",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["templates.component.html",{"_index":703,"title":{},"body":{"components/ManageTemplatesComponent.html":{}}}],["templates.component.scss",{"_index":702,"title":{},"body":{"components/ManageTemplatesComponent.html":{}}}],["templates.component.ts",{"_index":701,"title":{},"body":{"components/ManageTemplatesComponent.html":{},"coverage.html":{}}}],["templates.component.ts:12",{"_index":705,"title":{},"body":{"components/ManageTemplatesComponent.html":{}}}],["templates.component.ts:8",{"_index":704,"title":{},"body":{"components/ManageTemplatesComponent.html":{}}}],["templates/manage",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ManageTemplatesComponent.html":{},"coverage.html":{}}}],["templateurl",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["test",{"_index":1182,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1192,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1181,"title":{},"body":{"index.html":{}}}],["text",{"_index":394,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["thereby",{"_index":647,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["third",{"_index":868,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.accountservice.forgotpassword(apipaths.forgotpassword",{"_index":618,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.accountservice.resetpassword(apipaths.resetpassword",{"_index":890,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.accountservice.resetpasswordtoken(apipaths.resetpasswordtoken",{"_index":1084,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.authchangesubject.asobservable",{"_index":473,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authchangesubject.next(isauthenticated",{"_index":493,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authorizationservice.isuseradmin",{"_index":90,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.authservice.authchanged",{"_index":723,"title":{},"body":{"components/NavComponent.html":{}}}],["this.authservice.confirmphone(apipaths.confirmphone",{"_index":1081,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.authservice.isuserauthenticated",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{}}}],["this.authservice.loginuser(apipaths.login",{"_index":684,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":726,"title":{},"body":{"components/NavComponent.html":{}}}],["this.authservice.refreshauthentication(apipaths.refreshtokens",{"_index":354,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.registeruser(apipaths.registration",{"_index":851,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.sendauthstatechangenotification(false",{"_index":342,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.sendauthstatechangenotification(isrefreshsuccess",{"_index":344,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.sendauthstatechangenotification(result.isauthsuccessful",{"_index":688,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.sendauthstatechangenotification(true",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currenturl",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["this.error",{"_index":917,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["this.forgotpasswordform",{"_index":615,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.formattedphone",{"_index":787,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["this.http.post(routing.createcompleteroute(this.envurl.apiurl",{"_index":63,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{}}}],["this.isuserauthenticated",{"_index":724,"title":{},"body":{"components/NavComponent.html":{}}}],["this.jwthelper.decodetoken(accesstoken",{"_index":504,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.jwthelper.istokenexpired(accesstoken",{"_index":494,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.loginform",{"_index":674,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls[controlname].haserror(errorname",{"_index":679,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls[controlname].invalid",{"_index":676,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls[controlname].touched",{"_index":677,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.name",{"_index":719,"title":{},"body":{"components/NavComponent.html":{}}}],["this.notificationservice.showerror(\"something",{"_index":560,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.notificationservice.showerror(error.error",{"_index":552,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.notificationservice.showerror(errorsasstring",{"_index":548,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.phonenumber",{"_index":1075,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.previousnavigationdata",{"_index":882,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.previousnavigationdata?.phonenumber",{"_index":887,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.previousnavigationdata?.token",{"_index":889,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.previousurl",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.previousurl.asobservable",{"_index":1026,"title":{},"body":{"injectables/UrlService.html":{}}}],["this.previousurl.next(previousurl",{"_index":1027,"title":{},"body":{"injectables/UrlService.html":{}}}],["this.previousurl?.includes(routerpaths.auth",{"_index":1079,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.previousurl?.includes(routerpaths.forgotpassword",{"_index":1083,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.registerform",{"_index":829,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['email'].haserror('email",{"_index":854,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['email'].haserror('required",{"_index":853,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['firstname'].haserror('pattern",{"_index":856,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['firstname'].haserror('required",{"_index":855,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['lastname'].haserror('pattern",{"_index":858,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['lastname'].haserror('required",{"_index":857,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.resetpasswordform",{"_index":883,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.returnurl",{"_index":587,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.role",{"_index":721,"title":{},"body":{"components/NavComponent.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":588,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.router.events",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.getcurrentnavigation",{"_index":916,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["this.router.navigate",{"_index":786,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.router.navigate(['/auth",{"_index":589,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/NavComponent.html":{}}}],["this.router.navigate(['/forbidden",{"_index":92,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.router.navigate([routerpaths.auth",{"_index":343,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate([routerpaths.confirmphone",{"_index":1082,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.router.navigate([routerpaths.resetpassword",{"_index":1085,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.router.navigate([routerpaths.updatedpassword",{"_index":891,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.router.navigate([routerpaths.verifyphone",{"_index":620,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate([this.returnurl",{"_index":689,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.router.navigatebyurl(routerpaths.notfound",{"_index":554,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.router.navigatebyurl(routerpaths.servererror",{"_index":559,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.sendauthstatechangenotification(false",{"_index":491,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.storageservice.watchstorageitem(authenticated_user).subscribe(data",{"_index":716,"title":{},"body":{"components/NavComponent.html":{}}}],["this.storageservice.watchstorageitem(first_name).subscribe(data",{"_index":718,"title":{},"body":{"components/NavComponent.html":{}}}],["this.storageservice.watchstorageitem(user_role).subscribe(data",{"_index":720,"title":{},"body":{"components/NavComponent.html":{}}}],["this.toastr.error(messages",{"_index":772,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.toastr.info(message",{"_index":773,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.toastr.success(message",{"_index":771,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.toastr.warning(message",{"_index":774,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.tryrefreshingtokens(accesstoken",{"_index":341,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.urlservice.previousurl$.subscribe((previousurl",{"_index":1076,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.urlservice.setpreviousurl(this.previousurl",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["this.username",{"_index":717,"title":{},"body":{"components/NavComponent.html":{}}}],["this.userphone",{"_index":784,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["this.userphone.substring(0",{"_index":788,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["this.userphone.substring(3",{"_index":790,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["this.userphone.substring(6",{"_index":792,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["this.validationerrors",{"_index":690,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.verifyphoneform",{"_index":1071,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.verifyphoneform.value.verifycode",{"_index":1077,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["throwerror",{"_index":535,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(error",{"_index":565,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["title",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"injectables/NotificationService.html":{}}}],["toast",{"_index":1006,"title":{},"body":{"modules/SharedModule.html":{}}}],["toastr",{"_index":760,"title":{},"body":{"injectables/NotificationService.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["toastrmodule",{"_index":996,"title":{},"body":{"modules/SharedModule.html":{}}}],["toastrmodule.forroot",{"_index":1004,"title":{},"body":{"modules/SharedModule.html":{}}}],["toastrservice",{"_index":758,"title":{},"body":{"injectables/NotificationService.html":{}}}],["toggle",{"_index":956,"title":{},"body":{"modules/SharedModule.html":{}}}],["token",{"_index":37,"title":{},"body":{"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"modules/SharedModule.html":{},"interfaces/UserForRegistrationDto.html":{},"miscellaneous/functions.html":{}}}],["token.ts",{"_index":639,"title":{},"body":{"interfaces/JwtTokenDto.html":{},"coverage.html":{}}}],["tokengetter",{"_index":1003,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tokens",{"_index":330,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tools",{"_index":930,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["top:5px",{"_index":634,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["trace",{"_index":943,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["transfer",{"_index":367,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["transmit",{"_index":418,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["transportation",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/PhoneConfirmationComponent.html":{},"index.html":{}}}],["transportationclient",{"_index":1148,"title":{},"body":{"index.html":{}}}],["tree",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["true",{"_index":91,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Validation.html":{}}}],["try",{"_index":345,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tryrefreshingtokens",{"_index":321,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tryrefreshingtokens(accesstoken",{"_index":325,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tslib",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":901,"title":{},"body":{"classes/Routing.html":{},"classes/Validation.html":{}}}],["type",{"_index":23,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typically",{"_index":455,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["undefined",{"_index":417,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"injectables/AuthorizationService.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/UpdatedPasswordComponent.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["unexpected",{"_index":561,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["unit",{"_index":1180,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":324,"title":{},"body":{"guards/AuthGuard.html":{}}}],["until",{"_index":1086,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["update",{"_index":433,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/NavComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["updated",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["updatedpassword",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatedpasswordcomponent",{"_index":197,"title":{"components/UpdatedPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["upon",{"_index":371,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["url",{"_index":904,"title":{},"body":{"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["url.service",{"_index":54,"title":{},"body":{"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{}}}],["url.service.ts",{"_index":517,"title":{},"body":{"injectables/EnvironmentUrlService.html":{},"coverage.html":{}}}],["url.service.ts:9",{"_index":519,"title":{},"body":{"injectables/EnvironmentUrlService.html":{}}}],["urlservice",{"_index":119,"title":{"injectables/UrlService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["use",{"_index":862,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["useclass",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":428,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/ForbiddenComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"miscellaneous/enumerations.html":{}}}],["user's",{"_index":434,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"modules/SharedModule.html":{},"interfaces/UserForRegistrationDto.html":{},"miscellaneous/functions.html":{}}}],["userforauthdto",{"_index":681,"title":{},"body":{"components/LoginComponent.html":{}}}],["userforregistrationdto",{"_index":437,"title":{"interfaces/UserForRegistrationDto.html":{}},"body":{"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"coverage.html":{}}}],["username",{"_index":658,"title":{},"body":{"components/LoginComponent.html":{},"components/NavComponent.html":{}}}],["userphone",{"_index":780,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["users",{"_index":488,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["using",{"_index":347,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthenticationDto.html":{},"index.html":{}}}],["valid",{"_index":413,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["validatecontrol",{"_index":659,"title":{},"body":{"components/LoginComponent.html":{}}}],["validation",{"_index":823,"title":{"classes/Validation.html":{}},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Validation.html":{},"coverage.html":{}}}],["validation.match('password",{"_index":837,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validationerrors",{"_index":660,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validatorfn",{"_index":1039,"title":{},"body":{"classes/Validation.html":{}}}],["validators",{"_index":610,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["validators.compose([validators.maxlength(this.codelength",{"_index":1074,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["validators.email",{"_index":834,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.maxlength(20",{"_index":830,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(3",{"_index":835,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(this.passwordminlength",{"_index":884,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["validators.pattern('[a",{"_index":831,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":616,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["value",{"_index":27,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Routing.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["variable",{"_index":1100,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1208,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification",{"_index":419,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["verified",{"_index":1087,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["verify",{"_index":286,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["verifycode",{"_index":1073,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["verifyphone",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["verifyphonecomponent",{"_index":199,"title":{"components/VerifyPhoneComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["verifyphoneform",{"_index":1059,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["version",{"_index":1162,"title":{},"body":{"index.html":{}}}],["via",{"_index":1184,"title":{},"body":{"index.html":{}}}],["visibility",{"_index":693,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["visibility_off",{"_index":692,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["void",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["w",{"_index":866,"title":{},"body":{"components/RegisterComponent.html":{}}}],["webb",{"_index":728,"title":{},"body":{"components/NavComponent.html":{}}}],["went",{"_index":562,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["whether",{"_index":378,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{},"classes/Validation.html":{}}}],["white",{"_index":742,"title":{},"body":{"components/NavComponent.html":{}}}],["width",{"_index":309,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["width:100",{"_index":699,"title":{},"body":{"components/LoginComponent.html":{}}}],["width:50",{"_index":577,"title":{},"body":{"components/FooterComponent.html":{}}}],["width:500px",{"_index":316,"title":{},"body":{"components/AuthComponent.html":{},"components/LoginComponent.html":{}}}],["width:75",{"_index":695,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["width:90",{"_index":864,"title":{},"body":{"components/RegisterComponent.html":{}}}],["works",{"_index":515,"title":{},"body":{"components/DashboardComponent.html":{},"components/ManageTemplatesComponent.html":{}}}],["wrong",{"_index":563,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["z",{"_index":833,"title":{},"body":{"components/RegisterComponent.html":{}}}],["za",{"_index":832,"title":{},"body":{"components/RegisterComponent.html":{}}}],["zip",{"_index":454,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["zipcode",{"_index":459,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["zone.js",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AccountService.html":{"url":"injectables/AccountService.html","title":"injectable - AccountService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/account.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forgotPassword\n                            \n                            \n                                    Public\n                                resetPassword\n                            \n                            \n                                    Public\n                                resetPasswordToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, envUrl: EnvironmentUrlService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/account.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        envUrl\n                                                  \n                                                        \n                                                                        EnvironmentUrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        forgotPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/account.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resetPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/account.service.ts:30\n                        \n                    \n\n            \n                \n                     resetPassword sends a payload of body to the route and receives a password reset token.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    route\n                                                    \n                                                            The route to the api controller.\n\n                                                    \n                                            \n                                            \n                                                    body\n                                                    \n                                                            Payload of type ResetPasswordDto sent to the api controller on the backend\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resetPasswordToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/account.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport Routing from 'src/app/shared/directives/routing';\nimport { PhoneVerificationDto, ResetPasswordDto, PhoneNumberDto } from 'src/app/shared/models/account';\nimport { EnvironmentUrlService } from './environment-url.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  constructor(private http: HttpClient, \n    private envUrl: EnvironmentUrlService\n    ) {}\n\n    public resetPasswordToken = (route: string, body: PhoneVerificationDto) => {\n      return this.http.post(Routing.createCompleteRoute(this.envUrl.apiUrl, route), body);\n    }\n\n    public forgotPassword = (route: string, body: PhoneNumberDto) => {\n      return this.http.post(Routing.createCompleteRoute(this.envUrl.apiUrl, route), body);\n    }\n    \n    /**\n     *  resetPassword sends a payload of body to the route and receives a password reset token.\n     * @param route The route to the api controller.\n     * @param body Payload of type ResetPasswordDto sent to the api controller on the backend\n     * @returns Observable of type string. This string should represent a password reset token\n     */\n    public resetPassword = (route: string, body: ResetPasswordDto) => {\n      return this.http.post(Routing.createCompleteRoute(this.envUrl.apiUrl, route), body);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/admin.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authorizationService: AuthorizationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/admin.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/admin.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { AuthorizationService } from '../services/authorization.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n  constructor(private authorizationService: AuthorizationService, private router: Router) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.authorizationService.isUserAdmin())\n      return true;\n\n    this.router.navigate(['/forbidden']), { queryParams: { returnUrl: state.url }};\n      return false;\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUrl\n                            \n                            \n                                previousUrl\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, urlService: UrlService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        urlService\n                                                  \n                                                        \n                                                                        UrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Rock Transportation'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { AuthenticationService } from './core/authentication/authentication.service';\nimport { UrlService } from './core/services/url.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'Rock Transportation';\n  previousUrl: string | null = null;\n  currentUrl: string | null = null;\n\n  constructor(private authService: AuthenticationService,\n    private urlService: UrlService,\n    private router: Router) {}\n\n  ngOnInit(): void {\n    if (this.authService.isUserAuthenticated()) {\n      this.authService.sendAuthStateChangeNotification(true);\n    }\n\n    this.router.events \n      .subscribe((event:Event) => {\n        if (event instanceof NavigationEnd) {\n          this.previousUrl = this.currentUrl;\n          this.currentUrl = event.url;\n          this.urlService.setPreviousUrl(this.previousUrl);\n        }\n      })\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n    \n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                content {\n    min-height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n}\n\nmain {\n    flex-grow: 1;\n}\n\napp-nav, main, app-footer {\n    flex-shrink: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAppModule -->\n\nAuthComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nForbiddenComponent\n\nForbiddenComponent\n\nAppModule -->\n\nForbiddenComponent->AppModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAppModule -->\n\nForgotPasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nManageTemplatesComponent\n\nManageTemplatesComponent\n\nAppModule -->\n\nManageTemplatesComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nPhoneConfirmationComponent\n\nPhoneConfirmationComponent\n\nAppModule -->\n\nPhoneConfirmationComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nServerErrorComponent\n\nServerErrorComponent\n\nAppModule -->\n\nServerErrorComponent->AppModule\n\n\n\n\n\nUpdatedPasswordComponent\n\nUpdatedPasswordComponent\n\nAppModule -->\n\nUpdatedPasswordComponent->AppModule\n\n\n\n\n\nVerifyPhoneComponent\n\nVerifyPhoneComponent\n\nAppModule -->\n\nVerifyPhoneComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nUrlService\n\nUrlService\n\nAppModule -->\n\nUrlService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AuthComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            ForbiddenComponent\n                        \n                        \n                            ForgotPasswordComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            ManageTemplatesComponent\n                        \n                        \n                            NavComponent\n                        \n                        \n                            NotFoundComponent\n                        \n                        \n                            PhoneConfirmationComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            ResetPasswordComponent\n                        \n                        \n                            ServerErrorComponent\n                        \n                        \n                            UpdatedPasswordComponent\n                        \n                        \n                            VerifyPhoneComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ErrorInterceptor\n                        \n                        \n                            UrlService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { NavComponent } from './core/header/nav.component';\n\nimport { SharedModule } from './shared/shared.module';\nimport { FooterComponent } from './core/footer/footer.component';\nimport { NotFoundComponent } from './modules/errors/pages/not-found/not-found.component';\nimport { ServerErrorComponent } from './modules/errors/pages/server-error/server-error.component';\nimport { AuthComponent } from './modules/account/auth/auth.component';\nimport { RegisterComponent } from './modules/account/auth/register/register.component';\nimport { LoginComponent } from './modules/account/auth/login/login.component';\n\nimport { NgxMaskModule } from 'ngx-mask';\nimport { ErrorInterceptor } from './core/interceptors/error.interceptor';\nimport { VerifyPhoneComponent } from './modules/account/phone/verify-phone/verify-phone.component';\nimport { ForgotPasswordComponent } from './modules/account/password/forgot-password/forgot-password.component';\nimport { DashboardComponent } from './modules/dashboard/pages/dashboard/dashboard.component';\nimport { ManageTemplatesComponent } from './modules/church-services/manage-templates/manage-templates.component';\nimport { ForbiddenComponent } from './modules/errors/pages/forbidden/forbidden.component';\nimport { ResetPasswordComponent } from './modules/account/password/reset-password/reset-password.component';\nimport { PhoneConfirmationComponent } from './modules/account/phone/phone-confirmation/phone-confirmation.component';\n\nimport { UrlService } from './core/services/url.service';\nimport { UpdatedPasswordComponent } from './modules/account/password/updated-password/updated-password.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    FooterComponent,\n    NotFoundComponent,\n    ServerErrorComponent,\n    AuthComponent,\n    RegisterComponent,\n    LoginComponent,\n    VerifyPhoneComponent,\n    ForgotPasswordComponent,\n    DashboardComponent,\n    ManageTemplatesComponent,\n    ForbiddenComponent,\n    ResetPasswordComponent,\n    PhoneConfirmationComponent,\n    UpdatedPasswordComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgxMaskModule.forRoot()\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true\n    },  \n    UrlService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NotFoundComponent } from './modules/errors/pages/not-found/not-found.component';\nimport { AuthComponent } from './modules/account/auth/auth.component';\nimport { ServerErrorComponent } from './modules/errors/pages/server-error/server-error.component';\nimport { VerifyPhoneComponent } from './modules/account/phone/verify-phone/verify-phone.component';\nimport { PhoneConfirmationComponent } from './modules/account/phone/phone-confirmation/phone-confirmation.component';\nimport { ForgotPasswordComponent } from './modules/account/password/forgot-password/forgot-password.component';\nimport { DashboardComponent } from './modules/dashboard/pages/dashboard/dashboard.component';\nimport { AuthGuard } from './core/guards/auth.guard';\nimport { ManageTemplatesComponent } from './modules/church-services/manage-templates/manage-templates.component';\nimport { ForbiddenComponent } from './modules/errors/pages/forbidden/forbidden.component';\nimport { AdminGuard } from './core/guards/admin.guard';\nimport { ResetPasswordComponent } from './modules/account/password/reset-password/reset-password.component';\nimport { UpdatedPasswordComponent } from './modules/account/password/updated-password/updated-password.component';\nimport { routerPaths } from './app.constants';\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'auth', component: AuthComponent },\n  { path: 'forbidden', component: ForbiddenComponent },\n  { path: 'verify-phone', component: VerifyPhoneComponent },\n  { path: 'phone-confirmation', component: PhoneConfirmationComponent },\n  { path: 'password', redirectTo: '/', pathMatch: 'full' },\n  { path: 'password/forgot-password', component: ForgotPasswordComponent },\n  { path: 'password/reset-password', component: ResetPasswordComponent },\n  { path: 'password/updated', component: UpdatedPasswordComponent },\n  { path: 'manage-templates', component: ManageTemplatesComponent, canActivate: [AuthGuard,AdminGuard] },\n  { path: '404', component: NotFoundComponent },\n  { path: 'server-error', component: ServerErrorComponent },\n  { path: '**', redirectTo: '/404', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/auth/auth.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                styleUrls\n                ./auth.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/auth/auth.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/auth/auth.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n  Congratulations! You were successfully registered!\n  There was an issue resetting your password\n  You have successfully changed your password\n  -->\n\n  \n    \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./auth.component.scss\n                \n                .auth-container\n{\n  width: 500px;\n  margin: 2% auto;\n}\n@media( max-width:500px )\n{\n  .auth-container\n  {\n    width: 300px;\n  }\n}\n@media ( max-width: 300px )\n{\n  .auth-container\n  {\n    width: 250px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Congratulations! You were successfully registered!  There was an issue resetting your password  You have successfully changed your password  -->                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                    Async\n                                tryRefreshingTokens\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, http: HttpClient, envUrl: EnvironmentUrlService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        envUrl\n                                                  \n                                                        \n                                                                        EnvironmentUrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/auth.guard.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        tryRefreshingTokens\n                        \n                    \n                \n            \n            \n                \n                    \n                    tryRefreshingTokens(accessToken: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/auth.guard.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accessToken\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { apiPaths, routerPaths, tokens} from 'src/app/app.constants';\nimport { JwtTokenDto } from 'src/app/shared/models/jwt-token';\nimport { AuthResponseDto } from 'src/app/shared/models/response';\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { EnvironmentUrlService } from '../services/environment-url.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthenticationService, \n    private router: Router,\n    private http: HttpClient,\n    private envUrl: EnvironmentUrlService){}\n\n  async canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.authService.isUserAuthenticated()) {\n      return true;\n    }\n\n    const accessToken = localStorage.getItem(tokens.access);\n\n    const isRefreshSuccess = await this.tryRefreshingTokens(accessToken);\n    if (!isRefreshSuccess) {\n      this.authService.sendAuthStateChangeNotification(false);\n      this.router.navigate([routerPaths.auth], { queryParams: { returnUrl: state.url }});\n    }\n\n    this.authService.sendAuthStateChangeNotification(isRefreshSuccess);\n    return isRefreshSuccess;\n  }\n\n  private async tryRefreshingTokens(accessToken: string | null): Promise {\n    // Try refreshing tokens using refresh token\n    const refreshToken: string | null = localStorage.getItem(tokens.refresh);\n\n    if(!accessToken || !refreshToken) return false;\n\n    var jwtToken: JwtTokenDto = {accessToken: accessToken, refreshToken: refreshToken}; \n\n    let isRefreshSuccess: boolean;\n\n    try {\n      const response = await this.authService.refreshAuthentication(apiPaths.refreshTokens, jwtToken).toPromise();\n\n      const newToken = response.accessToken;\n      const newRefreshToken = response.refreshToken;\n\n      localStorage.setItem(tokens.access, newToken);\n      localStorage.setItem(tokens.refresh, newRefreshToken);\n      isRefreshSuccess = true;\n    } catch(ex) {\n      isRefreshSuccess = false;\n    }\n\n    return isRefreshSuccess;\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthResponseDto.html":{"url":"interfaces/AuthResponseDto.html","title":"interface - AuthResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/response.ts\n        \n\n\n            \n                Description\n            \n            \n                A Data Transfer Object to pass access and refresh tokens upon successful authentication.\n\n            \n\n            \n                Extends\n            \n            \n                        JwtTokenDto\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isAuthSuccessful\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isAuthSuccessful\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isAuthSuccessful:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A flag recording whether an authentication attempt was successful.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { JwtTokenDto } from \"./jwt-token\";\n\n/**\n * A Data Transfer Object to flag a successful registration attempt along \n * with any errors that were encountered. \n * \n */\nexport interface RegistrationResponseDto {\n    /**\n     * A flag recording whether a registration attempt was successful. \n     */\n    isSuccessfulRegistration: boolean;\n\n    /**\n     * Records any and all errors encountered when attempting a registration. \n     */\n    errors: string[];\n}\n\n/**\n * A Data Transfer Object to pass access and refresh tokens upon successful authentication. \n */\nexport interface AuthResponseDto extends JwtTokenDto {\n  /**\n   * A flag recording whether an authentication attempt was successful. \n   */\n  isAuthSuccessful: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthenticationDto.html":{"url":"interfaces/AuthenticationDto.html","title":"interface - AuthenticationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthenticationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/account.ts\n        \n\n\n            \n                Description\n            \n            \n                Data Transfer Object using a phone number and password request authentication.\n\n            \n\n            \n                Extends\n            \n            \n                        PhoneNumberDto\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A plain-text, non-hashed string representing a password.\nFor security, ensure hashing takes place on the backend.\nMaximum length: 255 characters. Required by the backend.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AuthenticationDto extends PhoneNumberDto {\n  /**\n   * A plain-text, non-hashed string representing a password. \n   * For security, ensure hashing takes place on the backend.\n   * Maximum length: 255 characters. Required by the backend.\n   */\n  password: string;\n}\n\n/**\n * Data Transfer Object to send and receive phone number.\n */\n export interface PhoneNumberDto {\n  /**\n   * A strictly 10-digit string representing a valid phone number capable of SMS.\n   */\n  phoneNumber: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to transmit a phone number - verification code pair.\n */\n export interface PhoneVerificationDto extends PhoneNumberDto {\n  /**\n   * A verification code that must match the code sent to the associated phone number\n   * in order to be verify the phone number.\n   */\n  code: string;\n}\n\n/**\n * Data Transfer Object sending and receiving a password reset token.\n */\n export interface ResetPasswordDto extends AuthenticationDto {\n  /**\n   * A password reset token assigned to a user from asp.net core Identity.\n   * The token is required and must match the generated token in order to successfully \n   * update a user's password. \n   */\n  token: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to send and receive all user information required for registering with the app.\n */\nexport interface UserForRegistrationDto extends AuthenticationDto {\n  /**\n   * A user's first name. Required by the backend. \n   */\n  firstName: string;\n  /**\n   * A user's last name. Required by the backend.\n   */\n  lastName: string;\n  /**\n   * Must be formatted as `sometext@moretext.TLD`. \n   * Not required by backend.\n   */\n  email: string | null;\n  /**\n   * A user's main street address. Required by the backend.\n   */\n  address1: string;\n  /**\n   * A user's apartment number, suite, or any other 'secondary' address. \n   * Not required by the backend. \n   */\n  address2: string | null;\n  /**\n   * The city portion of the user's address.\n   * Required by the backend.\n   */\n  city: string;\n  /**\n   * The zip code portion of the user's address. Typically 5 digits long.\n   * Required by the backend.\n   */\n  zipCode: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/authentication/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authChanged\n                            \n                            \n                                    Private\n                                authChangeSubject\n                            \n                            \n                                    Public\n                                confirmPhone\n                            \n                            \n                                    Public\n                                isUserAuthenticated\n                            \n                            \n                                    Public\n                                loginUser\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                refreshAuthentication\n                            \n                            \n                                    Public\n                                registerUser\n                            \n                            \n                                    Public\n                                sendAuthStateChangeNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, envUrl: EnvironmentUrlService, jwtHelper: JwtHelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/authentication.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        envUrl\n                                                  \n                                                        \n                                                                        EnvironmentUrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtHelper\n                                                  \n                                                        \n                                                                    JwtHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authChanged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.authChangeSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authChangeSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        confirmPhone\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isUserAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loginUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        refreshAuthentication\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        registerUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendAuthStateChangeNotification\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:41\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { AuthenticationDto, PhoneNumberDto, PhoneVerificationDto, ResetPasswordDto, UserForRegistrationDto } from 'src/app/shared/models/account';\nimport { AuthResponseDto } from 'src/app/shared/models/response';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { EnvironmentUrlService } from '../services/environment-url.service';\nimport { Subject } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { tokens } from 'src/app/app.constants';\nimport { JwtTokenDto } from 'src/app/shared/models/jwt-token';\nimport Routing from 'src/app/shared/directives/routing';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * A service to manage users' authentication in the app.\n */\nexport class AuthenticationService {\n\n    constructor(private http: HttpClient,\n      private envUrl: EnvironmentUrlService, \n      private jwtHelper: JwtHelperService) { }\n\n    private authChangeSubject = new Subject()\n    public authChanged = this.authChangeSubject.asObservable();\n\n    public registerUser = (route: string, body: UserForRegistrationDto) => {\n      return this.http.post(Routing.createCompleteRoute(this.envUrl.apiUrl, route), body);\n    }\n\n    public loginUser = (route: string, body: AuthenticationDto) => {\n      return this.http.post(Routing.createCompleteRoute(this.envUrl.apiUrl, route), body);\n    }\n\n    public logout = () => {\n      localStorage.removeItem(tokens.access);\n      localStorage.removeItem(tokens.refresh);\n      this.sendAuthStateChangeNotification(false);\n    }\n\n    public sendAuthStateChangeNotification = (isAuthenticated:boolean) => {\n      this.authChangeSubject.next(isAuthenticated);\n    }\n\n    public isUserAuthenticated = () => {\n      const accessToken = localStorage.getItem(tokens.access);\n\n      return accessToken && !this.jwtHelper.isTokenExpired(accessToken);\n    }\n\n    public refreshAuthentication = (route: string, body: JwtTokenDto) => {\n      return this.http.post(Routing.createCompleteRoute(this.envUrl.apiUrl, route), body);\n    }\n\n    public confirmPhone = (route: string, body: PhoneVerificationDto) => {\n      return this.http.post(Routing.createCompleteRoute(this.envUrl.apiUrl, route), body);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isUserAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtHelper: JwtHelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/authorization.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtHelper\n                                                  \n                                                        \n                                                                    JwtHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isUserAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/authorization.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { tokens, IDENTITY_ROLES } from 'src/app/app.constants';\nimport { Roles } from 'src/app/shared/models/roles';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizationService {\n\n  constructor(private jwtHelper: JwtHelperService) { }\n\n  public isUserAdmin = () => {\n    const accessToken = localStorage.getItem(tokens.access);\n    const decodedToken = accessToken !== null ? this.jwtHelper.decodeToken(accessToken) : undefined;\n    const role = decodedToken[IDENTITY_ROLES];\n    return role === Roles.administrator || Roles.superAdmin;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/dashboard/pages/dashboard/dashboard.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/dashboard/pages/dashboard/dashboard.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/dashboard/pages/dashboard/dashboard.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        dashboard works!\n\n    \n\n    \n                \n                    ./dashboard.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'dashboard works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EnvironmentUrlService.html":{"url":"injectables/EnvironmentUrlService.html","title":"injectable - EnvironmentUrlService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EnvironmentUrlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/environment-url.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/environment-url.service.ts:9\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.apiUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/environment-url.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnvironmentUrlService {\n\n    public apiUrl: string = environment.apiUrl;\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptors/error.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/interceptors/error.interceptor.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/interceptors/error.interceptor.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { NotificationService } from '../services/notification.service';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { catchError } from 'rxjs/operators';\nimport { routerPaths } from 'src/app/app.constants';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router,\n    private notificationService: NotificationService) {}\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(request).pipe(\n      catchError(error => {\n        if (error) {\n          switch (error.status) {\n            case 400:\n              let errors: string[] = Object.values(error.error);\n              let errorsAsString = errors.join(\"\")\n              this.notificationService.showError(errorsAsString, error.statusText);\n              break;\n            case 401:\n              this.notificationService.showError(error.error, error.statusText);\n              break;\n            case 403: \n              this.notificationService.showError(error.error);\n              break;\n            case 404:\n              this.router.navigateByUrl(routerPaths.notFound);\n              break;\n            case 406: \n              this.notificationService.showError(error.error);\n              break;\n            case 409:\n              this.notificationService.showError(error.error);\n              break;\n            case 500:\n              const navigationExtras: NavigationExtras = {state: {error: error.error}};\n              this.router.navigateByUrl(routerPaths.serverError, navigationExtras);\n              break;\n            default:\n              //this.notificationService.showError(\"Something unexpected went wrong\");\n              console.log(error);\n              break;\n          }\n        }\n        return throwError(error);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/footer/footer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/footer/footer.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n      \n    \n    \n \n    \n    \n  \n    \n\n    \n                \n                    ./footer.component.scss\n                \n                app-footer\n{\n    justify-content: flex-end;\n    justify-content: space-between;\n    padding: 0 2% 0 2%;\n}\nimg\n{\n    width:50%;\n    height:auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForbiddenComponent.html":{"url":"components/ForbiddenComponent.html","title":"component - ForbiddenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForbiddenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/errors/pages/forbidden/forbidden.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forbidden\n            \n\n            \n                styleUrls\n                ./forbidden.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forbidden.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                navigateToLogin\n                            \n                            \n                                    Private\n                                returnUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/errors/pages/forbidden/forbidden.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/errors/pages/forbidden/forbidden.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        navigateToLogin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/errors/pages/forbidden/forbidden.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/errors/pages/forbidden/forbidden.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forbidden',\n  templateUrl: './forbidden.component.html',\n  styleUrls: ['./forbidden.component.scss']\n})\nexport class ForbiddenComponent implements OnInit {\n\n  private returnUrl: string | undefined;\n\n  constructor(private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl']||'';\n  }\n\n  public navigateToLogin = () => {\n    this.router.navigate(['/auth'], { queryParams: { returnUrl: this.returnUrl }});\n  }\n\n}\n\n    \n\n    \n        Forbidden\n\n    This page is forbidden for you. Please log in with a different user\n    to access the requested page.\n\n\n    \n\n    \n                \n                    ./forbidden.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Forbidden    This page is forbidden for you. Please log in with a different user    to access the requested page.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForbiddenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/password/forgot-password/forgot-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                styleUrls\n                ./forgot-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forgotPasswordForm\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Private\n                                returnUrl\n                            \n                            \n                                    Public\n                                submit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/password/forgot-password/forgot-password.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/password/forgot-password/forgot-password.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        forgotPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/forgot-password/forgot-password.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/forgot-password/forgot-password.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/forgot-password/forgot-password.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        submit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/forgot-password/forgot-password.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IConfig } from 'ngx-mask';\nimport { apiPaths, routerPaths } from 'src/app/app.constants';\nimport { AccountService } from 'src/app/core/services/account.service';\nimport { PhoneNumberDto } from 'src/app/shared/models/account';\n\nexport let options: Partial | (() => Partial);\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  public forgotPasswordForm!: FormGroup;\n  public hide: boolean = true;\n  private returnUrl: string | undefined = undefined;\n\n  constructor(private accountService: AccountService,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.forgotPasswordForm = new FormGroup({\n      phone: new FormControl(\"\", [Validators.required])\n    })\n\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '';\n  }\n\n  public submit = (forgotPasswordForm: any) => {\n    var phoneNumberDto: PhoneNumberDto = { phoneNumber: forgotPasswordForm.phone}\n\n    this.accountService.forgotPassword(apiPaths.forgotPassword, phoneNumberDto)\n    .subscribe(() => {\n      this.router.navigate([routerPaths.verifyPhone], {state: {data: phoneNumberDto}});\n    })\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Enter your phone number\n      \n      \n        A verification code will be sent to your \n        phone to make sure you are the owner of this account. \n      \n      \n        \n          \n            Phone Number:\n            \n            phone\n            Required\n          \n\n          \n            Submit\n          \n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./forgot-password.component.scss\n                \n                .container {\n  margin: 20px auto 0;\n}\nmat-card {\n  text-align: center;\n  margin: 0 auto;\n}\nmat-card-header {\n  font-size: large;\n  justify-content: center;\n  margin-top:5px;\n  margin-bottom:10px;\n}\nmat-card-subtitle {\n  margin: 10px auto 10px;\n}\n\n@media ( max-width: 300px )\n{\n  .container\n  {\n    width: 240px;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Enter your phone number                    A verification code will be sent to your         phone to make sure you are the owner of this account.                                           Phone Number:                        phone            Required                                Submit                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtTokenDto.html":{"url":"interfaces/JwtTokenDto.html","title":"interface - JwtTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/jwt-token.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object to accept and pass tokens to the backend\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The access token represents the short-lived token passed back and forth\nto the backend to verify a user's authentication, thereby allowing access.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The refresh token represents the long-lived token persisting in the user's\naccount allowing for renewed access tokens as long as it is valid and not expired.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface JwtTokenDto {\n  /**\n   * The access token represents the short-lived token passed back and forth \n   * to the backend to verify a user's authentication, thereby allowing access. \n   */\n  accessToken: string;\n\n  /**\n   * The refresh token represents the long-lived token persisting in the user's \n   * account allowing for renewed access tokens as long as it is valid and not expired.\n   */\n  refreshToken: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/auth/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                    Public\n                                hasError\n                            \n                            \n                                hide\n                            \n                            \n                                    Public\n                                loginForm\n                            \n                            \n                                    Public\n                                loginUser\n                            \n                            \n                                password\n                            \n                            \n                                    Private\n                                returnUrl\n                            \n                            \n                                username\n                            \n                            \n                                    Public\n                                validateControl\n                            \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/auth/login/login.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/auth/login/login.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hasError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loginUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        validateControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Injectable, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { IConfig } from 'ngx-mask';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core/authentication/authentication.service';\nimport { AuthenticationDto } from 'src/app/shared/models/account';\nimport { apiPaths, tokens } from 'src/app/app.constants';\n\nexport let options: Partial | (() => Partial);\n\n@Injectable({\n  providedIn:'root'\n})\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  public loginForm!: FormGroup;\n  username!: string;\n  password!: string;\n  hide: boolean = true;\n  validationErrors: string[] = [];\n  error: boolean = false;\n  private returnUrl: string | undefined;\n\n  constructor(private authService: AuthenticationService,\n    private router: Router, \n    private route: ActivatedRoute) {}\n\n    ngOnInit(): void {\n      this.loginForm = new FormGroup({\n        username: new FormControl(\"\", [Validators.required]),\n        password: new FormControl(\"\", [Validators.required])\n      })\n\n      this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '';\n    }\n    public validateControl = (controlName: string) => {\n      return this.loginForm.controls[controlName].invalid && this.loginForm.controls[controlName].touched\n    }\n    public hasError = (controlName: string, errorName: string) => {\n      return this.loginForm.controls[controlName].hasError(errorName)\n    }\n\n    public loginUser = (loginFormValue: any) => {\n      const login = {...loginFormValue};\n      const userForAuthDto: AuthenticationDto = {\n        phoneNumber: login.username,\n        password: login.password\n      }\n\n      this.authService.loginUser(apiPaths.login, userForAuthDto)\n      .subscribe(result => {\n        localStorage.setItem(tokens.access, result.accessToken);\n        localStorage.setItem(tokens.refresh, result.refreshToken);\n        this.authService.sendAuthStateChangeNotification(result.isAuthSuccessful);\n        this.router.navigate([this.returnUrl]);\n      }, error => {\n        this.validationErrors = error;\n        console.log(this.validationErrors);\n      })\n    }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            Phone Number:\n            \n            phone\n            Required\n          \n\n          \n            Password\n            \n            {{hide ? 'visibility_off' : 'visibility'}}\n            Required\n          \n          \n            Log In\n          \n        \n        \n        \n          \n            Forgot Password?\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .login-form\n{\n  width:75%;\n  margin: 0 auto;\n}\n.center\n{\n  text-align:center;\n}\nmat-form-field\n{\n  display: block;\n  width:100%;\n}\nmat-card-footer\n{\n  margin: 10px auto 0;\n  text-align:center;\n}\n@media (max-width:500px)\n{\n  .container\n  {\n    width:100%;\n    margin: 10px auto;\n  }\n  .login-form\n  {\n    width:100%;\n    margin: 0 auto;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Phone Number:                        phone            Required                                Password                        {{hide ? \\'visibility_off\\' : \\'visibility\\'}}            Required                                Log In                                                        Forgot Password?                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageTemplatesComponent.html":{"url":"components/ManageTemplatesComponent.html","title":"component - ManageTemplatesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ManageTemplatesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/church-services/manage-templates/manage-templates.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manage-templates\n            \n\n            \n                styleUrls\n                ./manage-templates.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./manage-templates.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/church-services/manage-templates/manage-templates.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/church-services/manage-templates/manage-templates.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manage-templates',\n  templateUrl: './manage-templates.component.html',\n  styleUrls: ['./manage-templates.component.scss']\n})\nexport class ManageTemplatesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        manage-templates works!\n\n    \n\n    \n                \n                    ./manage-templates.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'manage-templates works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManageTemplatesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavComponent.html":{"url":"components/NavComponent.html","title":"component - NavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/header/nav.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav\n            \n\n            \n                styleUrls\n                ./nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isUserAuthenticated\n                            \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/header/nav.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/header/nav.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isUserAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/header/nav.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/header/nav.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../authentication/authentication.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent {\n  public isUserAuthenticated:boolean | undefined;\n/*\n  userName: string;\n  role: string;\n  name: string;\n  email: string;\n\n  constructor(public basicAuthenticationService: BasicAuthenticationService,\n              private storageService: StorageService) {\n    this.storageService.watchStorageItem(AUTHENTICATED_USER).subscribe(data => this.userName = data);\n    this.storageService.watchStorageItem(FIRST_NAME).subscribe(data => this.name = data);\n    this.storageService.watchStorageItem(USER_ROLE).subscribe(data => this.role = data);\n  }\n  */\n constructor(private authService:AuthenticationService, private router: Router){\n   this.authService.authChanged\n   .subscribe(result => {\n     this.isUserAuthenticated = result;\n   })\n }\n\n  ngOnInit(): void {\n    this.authService.authChanged\n    .subscribe(result =>{\n      this.isUserAuthenticated = result;\n    })\n  }\n\n  public logout = () => {\n    this.authService.logout();\n    this.router.navigate(['/auth']);\n  }\n}\n\n    \n\n    \n        \n    \n      Jacob Webb -->\n      \n        Log In / Register\n        Logout\n        \n          \n          \n            Update Contact Info\n            Change Password\n            Logout\n          \n        \n      \n      \n        menu\n        \n          \n          Log in / Register\n          \n        \n      \n     \n  \n  \n\n    \n\n    \n                \n                    ./nav.component.scss\n                \n                .navbar\n{\n  justify-content: flex-end;\n  // justify-content: space-between;\n  padding: 0 2% 0 1%;\n}\n\n.navbar a\n{\n  font-size: 0.9em;\n}\n\n@media (max-width: 499px){\n  .nav-menu-show\n  {\n    display: none;\n  }\n}\n@media (min-width: 500px){\n  .nav-menu-hide\n  {\n    display: none;\n  }\n}\n.logo\n{\n  font-family: 'Baskerville';\n  color: white;\n  text-decoration:none;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Jacob Webb -->              Log In / Register        Logout                                        Update Contact Info            Change Password            Logout                                      menu                            Log in / Register                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/errors/pages/not-found/not-found.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                styleUrls\n                ./not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/errors/pages/not-found/not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/errors/pages/not-found/not-found.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    Not Found\n    Return to home page\n\n    \n\n    \n                \n                    ./not-found.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Not Found    Return to home page'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showError\n                            \n                            \n                                showInfo\n                            \n                            \n                                showSuccess\n                            \n                            \n                                showWarning\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/notification.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(messages: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/notification.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    messages\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"\"\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInfo\n                        \n                    \n                \n            \n            \n                \nshowInfo(message: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/notification.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(message: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/notification.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showWarning\n                        \n                    \n                \n            \n            \n                \nshowWarning(message: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/notification.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(private toastr: ToastrService) { }\n\n  showSuccess(message: string, title: string) {\n    this.toastr.success(message, title);\n  }\n\n  showError(messages: string, title: string = \"\") {\n    this.toastr.error(messages, title);\n    \n  }\n\n  showInfo(message: string, title: string) {\n    this.toastr.info(message, title);\n  }\n\n  showWarning(message: string, title: string) {\n    this.toastr.warning(message, title);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhoneConfirmationComponent.html":{"url":"components/PhoneConfirmationComponent.html","title":"component - PhoneConfirmationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PhoneConfirmationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/phone/phone-confirmation/phone-confirmation.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirmation\n            \n\n            \n                styleUrls\n                ./phone-confirmation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./phone-confirmation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formattedPhone\n                            \n                            \n                                userPhone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/phone/phone-confirmation/phone-confirmation.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/phone/phone-confirmation/phone-confirmation.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formattedPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/phone-confirmation/phone-confirmation.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/phone-confirmation/phone-confirmation.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-confirmation',\n  templateUrl: './phone-confirmation.component.html',\n  styleUrls: ['./phone-confirmation.component.scss']\n})\nexport class PhoneConfirmationComponent implements OnInit {\n  userPhone: string = '';\n  formattedPhone: string | null = null;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.userPhone = history.state.data;\n    if (this.userPhone == '' || this.userPhone == undefined) \n      this.router.navigate(['/']);\n\n      this.formattedPhone = \"(\" + this.userPhone.substring(0, 3) + \")\" + this.userPhone.substring(3, 6) + \"-\" + this.userPhone.substring(6);\n  }\n\n}\n\n    \n\n    \n        The phone number {{formattedPhone}} was successfully registered for The Rock Church's Transportation app.\nPlease Log In to access the app.\n\n\n    \n\n    \n                \n                    ./phone-confirmation.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'The phone number {{formattedPhone}} was successfully registered for The Rock Church\\'s Transportation app.Please Log In to access the app.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhoneConfirmationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PhoneNumberDto.html":{"url":"interfaces/PhoneNumberDto.html","title":"interface - PhoneNumberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PhoneNumberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/account.ts\n        \n\n\n            \n                Description\n            \n            \n                Data Transfer Object to send and receive phone number.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:     string | null | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null | undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A strictly 10-digit string representing a valid phone number capable of SMS.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AuthenticationDto extends PhoneNumberDto {\n  /**\n   * A plain-text, non-hashed string representing a password. \n   * For security, ensure hashing takes place on the backend.\n   * Maximum length: 255 characters. Required by the backend.\n   */\n  password: string;\n}\n\n/**\n * Data Transfer Object to send and receive phone number.\n */\n export interface PhoneNumberDto {\n  /**\n   * A strictly 10-digit string representing a valid phone number capable of SMS.\n   */\n  phoneNumber: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to transmit a phone number - verification code pair.\n */\n export interface PhoneVerificationDto extends PhoneNumberDto {\n  /**\n   * A verification code that must match the code sent to the associated phone number\n   * in order to be verify the phone number.\n   */\n  code: string;\n}\n\n/**\n * Data Transfer Object sending and receiving a password reset token.\n */\n export interface ResetPasswordDto extends AuthenticationDto {\n  /**\n   * A password reset token assigned to a user from asp.net core Identity.\n   * The token is required and must match the generated token in order to successfully \n   * update a user's password. \n   */\n  token: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to send and receive all user information required for registering with the app.\n */\nexport interface UserForRegistrationDto extends AuthenticationDto {\n  /**\n   * A user's first name. Required by the backend. \n   */\n  firstName: string;\n  /**\n   * A user's last name. Required by the backend.\n   */\n  lastName: string;\n  /**\n   * Must be formatted as `sometext@moretext.TLD`. \n   * Not required by backend.\n   */\n  email: string | null;\n  /**\n   * A user's main street address. Required by the backend.\n   */\n  address1: string;\n  /**\n   * A user's apartment number, suite, or any other 'secondary' address. \n   * Not required by the backend. \n   */\n  address2: string | null;\n  /**\n   * The city portion of the user's address.\n   * Required by the backend.\n   */\n  city: string;\n  /**\n   * The zip code portion of the user's address. Typically 5 digits long.\n   * Required by the backend.\n   */\n  zipCode: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PhoneVerificationDto.html":{"url":"interfaces/PhoneVerificationDto.html","title":"interface - PhoneVerificationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PhoneVerificationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/account.ts\n        \n\n\n            \n                Description\n            \n            \n                Data Transfer Object to transmit a phone number - verification code pair.\n\n            \n\n            \n                Extends\n            \n            \n                        PhoneNumberDto\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A verification code that must match the code sent to the associated phone number\nin order to be verify the phone number.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AuthenticationDto extends PhoneNumberDto {\n  /**\n   * A plain-text, non-hashed string representing a password. \n   * For security, ensure hashing takes place on the backend.\n   * Maximum length: 255 characters. Required by the backend.\n   */\n  password: string;\n}\n\n/**\n * Data Transfer Object to send and receive phone number.\n */\n export interface PhoneNumberDto {\n  /**\n   * A strictly 10-digit string representing a valid phone number capable of SMS.\n   */\n  phoneNumber: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to transmit a phone number - verification code pair.\n */\n export interface PhoneVerificationDto extends PhoneNumberDto {\n  /**\n   * A verification code that must match the code sent to the associated phone number\n   * in order to be verify the phone number.\n   */\n  code: string;\n}\n\n/**\n * Data Transfer Object sending and receiving a password reset token.\n */\n export interface ResetPasswordDto extends AuthenticationDto {\n  /**\n   * A password reset token assigned to a user from asp.net core Identity.\n   * The token is required and must match the generated token in order to successfully \n   * update a user's password. \n   */\n  token: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to send and receive all user information required for registering with the app.\n */\nexport interface UserForRegistrationDto extends AuthenticationDto {\n  /**\n   * A user's first name. Required by the backend. \n   */\n  firstName: string;\n  /**\n   * A user's last name. Required by the backend.\n   */\n  lastName: string;\n  /**\n   * Must be formatted as `sometext@moretext.TLD`. \n   * Not required by backend.\n   */\n  email: string | null;\n  /**\n   * A user's main street address. Required by the backend.\n   */\n  address1: string;\n  /**\n   * A user's apartment number, suite, or any other 'secondary' address. \n   * Not required by the backend. \n   */\n  address2: string | null;\n  /**\n   * The city portion of the user's address.\n   * Required by the backend.\n   */\n  city: string;\n  /**\n   * The zip code portion of the user's address. Typically 5 digits long.\n   * Required by the backend.\n   */\n  zipCode: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/auth/register/register.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                hide\n                            \n                            \n                                hideConfirm\n                            \n                            \n                                isUniqueEmail\n                            \n                            \n                                passwordMinLength\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                registerForm\n                            \n                            \n                                submitted\n                            \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEmailError\n                            \n                            \n                                getFirstNameError\n                            \n                            \n                                getLastNameError\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/auth/register/register.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getEmailError\n                        \n                    \n                \n            \n            \n                \ngetEmailError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/auth/register/register.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     \"You must enter a value\" | \"Not a valid email\" | \"\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFirstNameError\n                        \n                    \n                \n            \n            \n                \ngetFirstNameError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/auth/register/register.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     \"\" | \"First name is required\" | \"Name can only contain letters\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLastNameError\n                        \n                    \n                \n            \n            \n                \ngetLastNameError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/auth/register/register.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     \"\" | \"Name can only contain letters\" | \"Last name is required\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/auth/register/register.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideConfirm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUniqueEmail\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMinLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        register\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Injectable, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { IConfig } from 'ngx-mask';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core/authentication/authentication.service';\nimport { UserForRegistrationDto } from 'src/app/shared/models/account';\nimport Validation from 'src/app/shared/directives/validation';\nimport { apiPaths, routerPaths } from 'src/app/app.constants';\n\nexport let options: Partial | (() => Partial);\n\n@Injectable({\n  providedIn:'root'\n})\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n    public registerForm!: FormGroup;\n    validationErrors: string[] = [];\n    passwordMinLength = 3;\n    hide=true;\n    hideConfirm=true;\n    submitted=false;\n    isUniqueEmail=true;\n    phoneNumber = '';\n    error: boolean = false;\n\n  constructor(private authService: AuthenticationService,\n    private router: Router) {}\n\n  ngOnInit(): void {\n    this.registerForm = new FormGroup({\n      firstName: new FormControl(\"\", [\n        Validators.required, \n        Validators.maxLength(20), \n        Validators.pattern('[a-zA-Z]*')\n      ]),\n      lastName: new FormControl(\"\", [\n        Validators.required,\n        Validators.maxLength(20),\n        Validators.pattern('[a-zA-Z]*')\n      ]), \n      email: new FormControl(\"\", [Validators.email]),\n      phoneNumber: new FormControl(\"\"),\n      address1: new FormControl(\"\", [Validators.required]),\n      address2: new FormControl(\"\"),\n      city: new FormControl(\"\", [Validators.required]),\n      zipCode: new FormControl(\"\", [Validators.required]),\n      password: new FormControl(\"\", [\n        Validators.required,\n        Validators.minLength(3)\n      ]),\n      confirmPassword: new FormControl(\"\", [\n        Validators.required,\n        Validators.minLength(3)\n      ])\n    }, {\n      validators: [Validation.match('password', 'confirmPassword')]\n    });\n  }\n\n  public register = (registerFormValue: any) => {\n\n    const formValues = { ...registerFormValue };\n    const user: UserForRegistrationDto = {\n      password: formValues.password,\n      phoneNumber: formValues.phoneNumber,\n      firstName: formValues.firstName.trim(),\n      lastName: formValues.lastName.trim(),\n      email: formValues.email !== '' ? formValues.email.trim() : null,\n      address1: formValues.address1.trim(),\n      address2: formValues.address2 !== null ? formValues.address2.trim() : null,\n      city: formValues.city.trim(),\n      zipCode: formValues.zipCode.trim()\n    }\n\n    this.authService.registerUser(apiPaths.registration, user)\n      .subscribe(response => {\n        this.router.navigate([routerPaths.verifyPhone], {state: {data: response}});\n      }, error => {\n        if (error.status == 403) {\n          this.router.navigate([routerPaths.verifyPhone], {state: {data: user}});\n        }\n        this.validationErrors = error;\n      })\n  }\n\n  getEmailError() {\n      if (this.registerForm.controls['email'].hasError('required')) {\n          return 'You must enter a value';\n      }\n      return this.registerForm.controls['email'].hasError('email') ? 'Not a valid email' : '';\n  }\n\n  getFirstNameError() {\n    if (this.registerForm.controls['firstName'].hasError('required')) {\n      return 'First name is required';\n    }\n    return this.registerForm.controls['firstName'].hasError('pattern') ? 'Name can only contain letters' : '';\n  }\n\n  getLastNameError() {\n    if (this.registerForm.controls['lastName'].hasError('required')) {\n      return 'Last name is required';\n    }\n    return this.registerForm.controls['lastName'].hasError('pattern') ? 'Name can only contain letters' : '';\n  }\n\n}\n\n    \n\n    \n        \n    An unexpected error ocurred.\n    \n      \n        \n          \n  \n            \n              \n                First Name:\n                \n                {{getFirstNameError()}}\n              \n              \n                Last Name:\n                \n                {{getLastNameError()}}\n              \n            \n  \n            \n              \n                Email:\n                \n                mail\n                {{getEmailError()}}\n                This email is already in use\n              \n              \n                Phone:\n                \n                phone\n              \n            \n\n            \n\n              \n                Address 1:\n                \n              \n\n              \n                Address 2:\n                \n              \n\n              \n              \n                City:\n                \n              \n              \n                Zip Code:\n                \n              \n              \n              \n            \n  \n            \n              \n                Password:\n                \n                {{hide ? 'visibility_off' : 'visibility'}}\n                Password must be at least {{passwordMinLength}} characters\n              \n  \n              \n                Confirm Password:\n                \n                {{hideConfirm ? 'visibility_off' : 'visibility'}}\n                Passwords must match\n              \n            \n\n            \n              Register\n            \n\n          \n        \n      \n    \n  \n    \n\n    \n                \n                    ./register.component.scss\n                \n                .register-form\n{\n  width:90%;\n  margin: 0 auto;\n}\nbutton\n{\n  width:75%;\n}\n.w-one-third\n{\n  width: 33%;\n}\n.w-half\n{\n  width: 50%;\n}\nmat-form-field\n{\n  display: block;\n}\nmat-card-footer\n{\n  text-align:center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    An unexpected error ocurred.                                                                        First Name:                                {{getFirstNameError()}}                                            Last Name:                                {{getLastNameError()}}                                                                      Email:                                mail                {{getEmailError()}}                This email is already in use                                            Phone:                                phone                                                                    Address 1:                                                            Address 2:                                                                          City:                                                            Zip Code:                                                                                                                  Password:                                {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                Password must be at least {{passwordMinLength}} characters                                              Confirm Password:                                {{hideConfirm ? \\'visibility_off\\' : \\'visibility\\'}}                Passwords must match                                                    Register                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegistrationResponseDto.html":{"url":"interfaces/RegistrationResponseDto.html","title":"interface - RegistrationResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegistrationResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/response.ts\n        \n\n\n            \n                Description\n            \n            \n                A Data Transfer Object to flag a successful registration attempt along\nwith any errors that were encountered.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errors\n                                        \n                                \n                                \n                                        \n                                            isSuccessfulRegistration\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Records any and all errors encountered when attempting a registration.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSuccessfulRegistration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isSuccessfulRegistration:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A flag recording whether a registration attempt was successful.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { JwtTokenDto } from \"./jwt-token\";\n\n/**\n * A Data Transfer Object to flag a successful registration attempt along \n * with any errors that were encountered. \n * \n */\nexport interface RegistrationResponseDto {\n    /**\n     * A flag recording whether a registration attempt was successful. \n     */\n    isSuccessfulRegistration: boolean;\n\n    /**\n     * Records any and all errors encountered when attempting a registration. \n     */\n    errors: string[];\n}\n\n/**\n * A Data Transfer Object to pass access and refresh tokens upon successful authentication. \n */\nexport interface AuthResponseDto extends JwtTokenDto {\n  /**\n   * A flag recording whether an authentication attempt was successful. \n   */\n  isAuthSuccessful: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/password/reset-password/reset-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                styleUrls\n                ./reset-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Public\n                                hideConfirm\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                passwordMinLength\n                            \n                            \n                                    Private\n                                previousNavigationData\n                            \n                            \n                                    Public\n                                resetPasswordForm\n                            \n                            \n                                    Private\n                                returnUrl\n                            \n                            \n                                    Public\n                                submit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute, accountService: AccountService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hideConfirm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        passwordMinLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        previousNavigationData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResetPasswordDto | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resetPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        submit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { apiPaths, routerPaths } from 'src/app/app.constants';\nimport { AccountService } from 'src/app/core/services/account.service';\nimport Validation from 'src/app/shared/directives/validation';\nimport { ResetPasswordDto } from 'src/app/shared/models/account';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n  public resetPasswordForm!: FormGroup;\n  public password: string | null = null;\n  public passwordMinLength = 3;\n  public hide: boolean = true;\n  public hideConfirm: boolean = true;\n  public error: boolean = false;\n  private returnUrl: string | undefined;\n  private previousNavigationData: ResetPasswordDto | null = null;\n\n  constructor(private router: Router,\n    private route: ActivatedRoute,\n    private accountService: AccountService,) { }\n\n  ngOnInit(): void {\n    this.previousNavigationData = history.state.data;\n    if (this.previousNavigationData == null || this.previousNavigationData == undefined) \n      this.router.navigate(['/']); \n\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '';\n\n    this.resetPasswordForm = new FormGroup({\n      password: new FormControl(\"\", [\n        Validators.required, \n        Validators.minLength(this.passwordMinLength)\n      ]),\n      confirmPassword: new FormControl(\"\", [Validators.required])\n    },\n    {\n      validators: [Validation.match('password', 'confirmPassword')]\n    });\n  }\n\n  public submit = (resetPasswordFormValue: any) => {\n    const formValue = { ...resetPasswordFormValue };\n    const resetPasswordDto: ResetPasswordDto = {\n      phoneNumber: this.previousNavigationData?.phoneNumber,\n      password: formValue.password,\n      token: this.previousNavigationData?.token\n    }\n\n    this.accountService.resetPassword(apiPaths.resetPassword, resetPasswordDto)\n      .subscribe(() => {\n        this.router.navigate([routerPaths.updatedPassword], {state: {data: resetPasswordDto.phoneNumber}});\n      }, error => {\n        this.router.navigate([this.returnUrl])\n      })\n  }\n\n}\n\n    \n\n    \n        \n  An unexpected error ocurred.\n  \n    \n      \n        \n\n          \n            \n              Password:\n              \n              {{hide ? 'visibility_off' : 'visibility'}}\n              Password must be at least {{passwordMinLength}} characters\n            \n\n            \n              Confirm Password:\n              \n              {{hideConfirm ? 'visibility_off' : 'visibility'}}\n              Passwords must match\n            \n          \n\n          \n            Submit\n          \n\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./reset-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  An unexpected error ocurred.                                                        Password:                            {{hide ? \\'visibility_off\\' : \\'visibility\\'}}              Password must be at least {{passwordMinLength}} characters                                      Confirm Password:                            {{hideConfirm ? \\'visibility_off\\' : \\'visibility\\'}}              Passwords must match                                            Submit                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResetPasswordDto.html":{"url":"interfaces/ResetPasswordDto.html","title":"interface - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/account.ts\n        \n\n\n            \n                Description\n            \n            \n                Data Transfer Object sending and receiving a password reset token.\n\n            \n\n            \n                Extends\n            \n            \n                        AuthenticationDto\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:     string | null | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null | undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A password reset token assigned to a user from asp.net core Identity.\nThe token is required and must match the generated token in order to successfully\nupdate a user's password.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AuthenticationDto extends PhoneNumberDto {\n  /**\n   * A plain-text, non-hashed string representing a password. \n   * For security, ensure hashing takes place on the backend.\n   * Maximum length: 255 characters. Required by the backend.\n   */\n  password: string;\n}\n\n/**\n * Data Transfer Object to send and receive phone number.\n */\n export interface PhoneNumberDto {\n  /**\n   * A strictly 10-digit string representing a valid phone number capable of SMS.\n   */\n  phoneNumber: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to transmit a phone number - verification code pair.\n */\n export interface PhoneVerificationDto extends PhoneNumberDto {\n  /**\n   * A verification code that must match the code sent to the associated phone number\n   * in order to be verify the phone number.\n   */\n  code: string;\n}\n\n/**\n * Data Transfer Object sending and receiving a password reset token.\n */\n export interface ResetPasswordDto extends AuthenticationDto {\n  /**\n   * A password reset token assigned to a user from asp.net core Identity.\n   * The token is required and must match the generated token in order to successfully \n   * update a user's password. \n   */\n  token: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to send and receive all user information required for registering with the app.\n */\nexport interface UserForRegistrationDto extends AuthenticationDto {\n  /**\n   * A user's first name. Required by the backend. \n   */\n  firstName: string;\n  /**\n   * A user's last name. Required by the backend.\n   */\n  lastName: string;\n  /**\n   * Must be formatted as `sometext@moretext.TLD`. \n   * Not required by backend.\n   */\n  email: string | null;\n  /**\n   * A user's main street address. Required by the backend.\n   */\n  address1: string;\n  /**\n   * A user's apartment number, suite, or any other 'secondary' address. \n   * Not required by the backend. \n   */\n  address2: string | null;\n  /**\n   * The city portion of the user's address.\n   * Required by the backend.\n   */\n  city: string;\n  /**\n   * The zip code portion of the user's address. Typically 5 digits long.\n   * Required by the backend.\n   */\n  zipCode: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Routing.html":{"url":"classes/Routing.html","title":"class - Routing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Routing\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/routing.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom routing methods for navigation.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createCompleteRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        createCompleteRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/directives/routing.ts:11\n                        \n                    \n\n            \n                \n                    Concatenates two strings with a / between them.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    envAddress\n                                                    \n                                                            The API url found in environment.ts.\n\n                                                    \n                                            \n                                            \n                                                    route\n                                                    \n                                                            The route of the API's controller.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export default class Routing {\n  /**\n   * Concatenates two strings with a `/` between them.\n   * @param envAddress The API url found in `environment.ts`.\n   * @param route The route of the API's controller.\n   * @returns A complete route from API url to the API's controller method. \n   */\n  static createCompleteRoute = (envAddress: string, route: string) : string => {\n    return `${envAddress}/${route}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerErrorComponent.html":{"url":"components/ServerErrorComponent.html","title":"component - ServerErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ServerErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/errors/pages/server-error/server-error.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-server-error\n            \n\n            \n                styleUrls\n                ./server-error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./server-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/errors/pages/server-error/server-error.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/errors/pages/server-error/server-error.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/errors/pages/server-error/server-error.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.scss']\n})\nexport class ServerErrorComponent implements OnInit {\n  error: any;\n\n  constructor(private router: Router) { \n    const navigation = this.router.getCurrentNavigation();\n    this.error = navigation?.extras?.state?.error;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Internal server error - refreshing the page will make the error disappear!\n\n  Error: {{error.message}}\n  Note: If you are seeing this then Angular is probably not to blame\n  What to do next?\n  \n    Open the Chrome dev tools\n    Inspet the network tab\n    Examine the request URL - make sure it is correct\n    Reproduce the error in Postman - if we see the same response, then the issue is not with the Front End\n  \n  Following is the stack trace - this is where your investigation should start!\n  {{error.details}}\n\n\n    \n\n    \n                \n                    ./server-error.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Internal server error - refreshing the page will make the error disappear!  Error: {{error.message}}  Note: If you are seeing this then Angular is probably not to blame  What to do next?      Open the Chrome dev tools    Inspet the network tab    Examine the request URL - make sure it is correct    Reproduce the error in Postman - if we see the same response, then the issue is not with the Front End    Following is the stack trace - this is where your investigation should start!  {{error.details}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ServerErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Angular Material imports\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule } from '@angular/material/core'\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n// Angular CDK imports\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n// Toastr Notifications\nimport { ToastrModule } from 'ngx-toastr';\n\n// JWT \nimport { JwtModule } from '@auth0/angular-jwt';\nimport { tokens } from '../app.constants';\n\n/**\n * Gets the user's access token for authentication. \n * @returns The access token stored in local storage.\n */\nexport function tokenGetter() {\n  return localStorage.getItem(tokens.access);\n}\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatProgressBarModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    FlexLayoutModule,\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right'\n    }),\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        allowedDomains: [\"localhost:5001\"],\n        disallowedRoutes: []\n      }\n    })\n  ],\n  exports: [\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatProgressBarModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    FlexLayoutModule,\n    ToastrModule\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdatedPasswordComponent.html":{"url":"components/UpdatedPasswordComponent.html","title":"component - UpdatedPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdatedPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/password/updated-password/updated-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-updated-password\n            \n\n            \n                styleUrls\n                ./updated-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./updated-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                previousNavigationData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/password/updated-password/updated-password.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/password/updated-password/updated-password.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        previousNavigationData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/updated-password/updated-password.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-updated-password',\n  templateUrl: './updated-password.component.html',\n  styleUrls: ['./updated-password.component.scss']\n})\nexport class UpdatedPasswordComponent implements OnInit {\n   previousNavigationData: string | undefined;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.previousNavigationData = history.state.data;\n    if (this.previousNavigationData == '' || this.previousNavigationData == undefined) {\n      this.router.navigate(['/']); \n    }\n  }\n\n}\n\n    \n\n    \n        The password was successfully reset.\nPlease Log In to access the app.\n\n    \n\n    \n                \n                    ./updated-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'The password was successfully reset.Please Log In to access the app.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdatedPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UrlService.html":{"url":"injectables/UrlService.html","title":"injectable - UrlService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UrlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/url.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                previousUrl\n                            \n                            \n                                    Public\n                                previousUrl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setPreviousUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/url.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setPreviousUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPreviousUrl(previousUrl: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/url.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    previousUrl\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        previousUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/url.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        previousUrl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.previousUrl.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/url.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UrlService {\n  private previousUrl: BehaviorSubject = new BehaviorSubject(null);\n  public previousUrl$: Observable = this.previousUrl.asObservable();\n\n  constructor() {}\n\n  public setPreviousUrl(previousUrl: string | null) {\n    this.previousUrl.next(previousUrl);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserForRegistrationDto.html":{"url":"interfaces/UserForRegistrationDto.html","title":"interface - UserForRegistrationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserForRegistrationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/account.ts\n        \n\n\n            \n                Description\n            \n            \n                Data Transfer Object to send and receive all user information required for registering with the app.\n\n            \n\n            \n                Extends\n            \n            \n                        AuthenticationDto\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address1\n                                        \n                                \n                                \n                                        \n                                            address2\n                                        \n                                \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            zipCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A user's main street address. Required by the backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address2:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A user's apartment number, suite, or any other 'secondary' address.\nNot required by the backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The city portion of the user's address.\nRequired by the backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Must be formatted as sometext@moretext.TLD.\nNot required by backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A user's first name. Required by the backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A user's last name. Required by the backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zipCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The zip code portion of the user's address. Typically 5 digits long.\nRequired by the backend.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AuthenticationDto extends PhoneNumberDto {\n  /**\n   * A plain-text, non-hashed string representing a password. \n   * For security, ensure hashing takes place on the backend.\n   * Maximum length: 255 characters. Required by the backend.\n   */\n  password: string;\n}\n\n/**\n * Data Transfer Object to send and receive phone number.\n */\n export interface PhoneNumberDto {\n  /**\n   * A strictly 10-digit string representing a valid phone number capable of SMS.\n   */\n  phoneNumber: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to transmit a phone number - verification code pair.\n */\n export interface PhoneVerificationDto extends PhoneNumberDto {\n  /**\n   * A verification code that must match the code sent to the associated phone number\n   * in order to be verify the phone number.\n   */\n  code: string;\n}\n\n/**\n * Data Transfer Object sending and receiving a password reset token.\n */\n export interface ResetPasswordDto extends AuthenticationDto {\n  /**\n   * A password reset token assigned to a user from asp.net core Identity.\n   * The token is required and must match the generated token in order to successfully \n   * update a user's password. \n   */\n  token: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to send and receive all user information required for registering with the app.\n */\nexport interface UserForRegistrationDto extends AuthenticationDto {\n  /**\n   * A user's first name. Required by the backend. \n   */\n  firstName: string;\n  /**\n   * A user's last name. Required by the backend.\n   */\n  lastName: string;\n  /**\n   * Must be formatted as `sometext@moretext.TLD`. \n   * Not required by backend.\n   */\n  email: string | null;\n  /**\n   * A user's main street address. Required by the backend.\n   */\n  address1: string;\n  /**\n   * A user's apartment number, suite, or any other 'secondary' address. \n   * Not required by the backend. \n   */\n  address2: string | null;\n  /**\n   * The city portion of the user's address.\n   * Required by the backend.\n   */\n  city: string;\n  /**\n   * The zip code portion of the user's address. Typically 5 digits long.\n   * Required by the backend.\n   */\n  zipCode: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Validation.html":{"url":"classes/Validation.html","title":"class - Validation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Validation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/validation.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom validation methods for forms.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                match\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        match\n                        \n                    \n                \n            \n            \n                \n                    \n                    match(controlName: string, checkControlName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/validation.ts:14\n                \n            \n\n\n            \n                \n                    Checks whether or not two strings are equal.\nReturns null otherwise.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    controlName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of a form's FormControl.\n\n                                    \n                                \n                                \n                                    checkControlName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the FormControl to check against controlName.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        The matching property is set to true if checkControlName equals controlName. \nReturns null otherwise.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl, ValidatorFn } from \"@angular/forms\";\n\n/**\n * Custom validation methods for forms.\n */\nexport default class Validation {\n  /**\n   * Checks whether or not two strings are equal.\n   * @param controlName The name of a form's FormControl.\n   * @param checkControlName The name of the FormControl to check against `controlName`.\n   * @returns The `matching` property is set to `true` if `checkControlName` equals `controlName`. \n   * Returns `null` otherwise.\n   */\n  static match(controlName: string, checkControlName: string): ValidatorFn {\n    return (controls: AbstractControl) => {\n      const control = controls.get(controlName);\n      const checkControl = controls.get(checkControlName);\n\n      if (control == null || checkControl == null) {\n        return null; \n      }\n\n      if (checkControl.errors && !checkControl.errors.matching) {\n        return null;\n      }\n\n      if (control.value !== checkControl.value) {\n        controls.get(checkControlName)?.setErrors({ matching: true });\n        return { matching: true };\n      } else {\n        return null;\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VerifyPhoneComponent.html":{"url":"components/VerifyPhoneComponent.html","title":"component - VerifyPhoneComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VerifyPhoneComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/phone/verify-phone/verify-phone.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-phone\n            \n\n            \n                styleUrls\n                ./verify-phone.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./verify-phone.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                codeLength\n                            \n                            \n                                    Private\n                                phoneNumber\n                            \n                            \n                                    Private\n                                previousNavigationData\n                            \n                            \n                                    Private\n                                previousUrl\n                            \n                            \n                                    Private\n                                returnUrl\n                            \n                            \n                                    Public\n                                verifyPhoneForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, accountService: AccountService, router: Router, route: ActivatedRoute, urlService: UrlService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        urlService\n                                                  \n                                                        \n                                                                        UrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        verify\n                        \n                    \n                \n            \n            \n                \n                    \n                    verify()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        codeLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        previousNavigationData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PhoneNumberDto | ResetPasswordDto | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        previousUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        verifyPhoneForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IConfig } from 'ngx-mask';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthenticationService } from 'src/app/core/authentication/authentication.service';\nimport { UrlService } from 'src/app/core/services/url.service';\nimport { PhoneNumberDto, PhoneVerificationDto, ResetPasswordDto } from 'src/app/shared/models/account';\nimport { AccountService } from 'src/app/core/services/account.service';\nimport { apiPaths, routerPaths } from 'src/app/app.constants';\n\nexport let options: Partial | (() => Partial);\n\n@Component({\n  selector: 'app-confirm-phone',\n  templateUrl: './verify-phone.component.html',\n  styleUrls: ['./verify-phone.component.scss']\n})\nexport class VerifyPhoneComponent implements OnInit {\n  public verifyPhoneForm: FormGroup;\n  codeLength: number = 6;\n  private phoneNumber: string | null | undefined;\n  private previousNavigationData: PhoneNumberDto | ResetPasswordDto | null = null;\n  private previousUrl: string | null = null;\n  private returnUrl: string| undefined;\n\n  constructor(private authService: AuthenticationService,\n    private accountService: AccountService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private urlService: UrlService,\n    fb: FormBuilder) { \n      this.verifyPhoneForm = fb.group ({\n        'verifyCode':['', Validators.compose([Validators.maxLength(this.codeLength), Validators.required])]\n      })\n    }\n\n    // Should accept an object with a phoneNumber property\n  ngOnInit(): void {\n    this.previousNavigationData = history.state.data;\n    if (this.previousNavigationData == null || this.previousNavigationData == undefined) \n      this.router.navigate(['/']); \n\n    this.phoneNumber = this.previousNavigationData?.phoneNumber;\n\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '';\n\n    this.urlService.previousUrl$.subscribe((previousUrl: string | null) => {\n      this.previousUrl = previousUrl;\n    })\n  }\n\n  public verify() {\n    const phoneVerificationDto: PhoneVerificationDto = {\n      code: this.verifyPhoneForm.value.verifyCode,\n      phoneNumber: this.phoneNumber\n    }\n\n    // Set the information to branch where verify phone sends its data\n    if (this.previousUrl?.includes(routerPaths.auth)) {\n      // If the previous url was the auth (registration) page, verify and confirm phone number\n      this.authService.confirmPhone(apiPaths.confirmPhone, phoneVerificationDto)\n      .subscribe(() => {\n        this.router.navigate([routerPaths.confirmPhone], {state: {data: this.phoneNumber}});\n      }, error => {\n        this.router.navigate([this.returnUrl])\n      })\n    } else if (this.previousUrl?.includes(routerPaths.forgotPassword)){\n      this.accountService.resetPasswordToken(apiPaths.resetPasswordToken, phoneVerificationDto)\n      .subscribe(response => {\n        this.router.navigate([routerPaths.resetPassword], {state: {data: response}});\n      }, error => {\n        this.router.navigate([this.returnUrl])\n      })\n    }\n  }  \n}\n\n    \n\n    \n        \n \n    \n      \n\n        \n          Phone Verification\n        \n        Please enter the verification code that was sent to you to confirm your phone number.\n        Your account registration will not be complete until your phone number has been verified.\n        \n          Verification Code:\n          \n          Your verification code is required\n        \n\n        \n          Verify\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./verify-phone.component.scss\n                \n                mat-card {\n  text-align:center;\n  max-width: 80%;\n  margin:5% auto;\n}\nmat-card-header {\n  display:block;\n}\n\nmat-card-footer {\n  margin: 0 auto 10px;\n}\n#phone-verification {\n  text-align:center;\n  letter-spacing: 18px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                             Phone Verification                Please enter the verification code that was sent to you to confirm your phone number.        Your account registration will not be complete until your phone number has been verified.                  Verification Code:                    Your verification code is required                          Verify                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VerifyPhoneComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            apiPaths\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            IDENTITY_ROLES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            routerPaths\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            tokens\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/header/nav.component.ts\n            \n            component\n            NavComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/account.service.ts\n            \n            injectable\n            AccountService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/core/services/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/environment-url.service.ts\n            \n            injectable\n            EnvironmentUrlService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/url.service.ts\n            \n            injectable\n            UrlService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/login/login.component.ts\n            \n            injectable\n            LoginComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/login/login.component.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/register/register.component.ts\n            \n            injectable\n            RegisterComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/register/register.component.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/account/password/forgot-password/forgot-password.component.ts\n            \n            component\n            ForgotPasswordComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/account/password/forgot-password/forgot-password.component.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/account/password/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/modules/account/password/updated-password/updated-password.component.ts\n            \n            component\n            UpdatedPasswordComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/account/phone/phone-confirmation/phone-confirmation.component.ts\n            \n            component\n            PhoneConfirmationComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/account/phone/verify-phone/verify-phone.component.ts\n            \n            component\n            VerifyPhoneComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/modules/account/phone/verify-phone/verify-phone.component.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/church-services/manage-templates/manage-templates.component.ts\n            \n            component\n            ManageTemplatesComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/dashboard/pages/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/errors/pages/forbidden/forbidden.component.ts\n            \n            component\n            ForbiddenComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/errors/pages/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/errors/pages/server-error/server-error.component.ts\n            \n            component\n            ServerErrorComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/directives/routing.ts\n            \n            class\n            Routing\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/directives/validation.ts\n            \n            class\n            Validation\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/account.ts\n            \n            interface\n            AuthenticationDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/account.ts\n            \n            interface\n            PhoneNumberDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/account.ts\n            \n            interface\n            PhoneVerificationDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/account.ts\n            \n            interface\n            ResetPasswordDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/account.ts\n            \n            interface\n            UserForRegistrationDto\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/shared/models/jwt-token.ts\n            \n            interface\n            JwtTokenDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/response.ts\n            \n            interface\n            AuthResponseDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/response.ts\n            \n            interface\n            RegistrationResponseDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/shared.module.ts\n            \n            function\n            tokenGetter\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.0.3\n        \n            @angular/cdk : ^12.2.3\n        \n            @angular/common : ~13.0.2\n        \n            @angular/compiler : ~13.0.2\n        \n            @angular/core : ~13.0.2\n        \n            @angular/flex-layout : ^12.0.0-beta.34\n        \n            @angular/forms : ~13.0.2\n        \n            @angular/material : ^12.2.3\n        \n            @angular/platform-browser : ~13.0.2\n        \n            @angular/platform-browser-dynamic : ~13.0.2\n        \n            @angular/router : ~13.0.2\n        \n            @auth0/angular-jwt : ^5.0.2\n        \n            ngx-mask : ^12.0.0\n        \n            ngx-toastr : ^14.1.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Roles   (src/.../roles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/models/roles.ts\n    \n        \n            \n                \n                    \n                        \n                        Roles\n                    \n                \n                        \n                            \n                                 superAdmin\n                            \n                        \n                        \n                            \n                                Value : SuperAdmin\n                            \n                        \n                        \n                            \n                                 administrator\n                            \n                        \n                        \n                            \n                                Value : Administrator\n                            \n                        \n                        \n                            \n                                 driver\n                            \n                        \n                        \n                            \n                                Value : Driver\n                            \n                        \n                        \n                            \n                                 user\n                            \n                        \n                        \n                            \n                                Value : User\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            tokenGetter   (src/.../shared.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/shared.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tokenGetter\n                        \n                    \n                \n            \n            \n                \ntokenGetter()\n                \n            \n\n\n\n\n            \n                \n                    Gets the user's access token for authentication.\n\n\n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTransportationClient\nThis project is the client side for The Rock's Transportation app. \nError Handling\nLogic for handling errors returned from the server can be found at core/interceptors/error.interceptor.ts.\nLogic for handling errors caught before leaving the client side can be found at core/guards/\nUsing Angular CLI\nThis project was generated with Angular CLI version 13.0.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAppModule -->\n\nAuthComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nForbiddenComponent\n\nForbiddenComponent\n\nAppModule -->\n\nForbiddenComponent->AppModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAppModule -->\n\nForgotPasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nManageTemplatesComponent\n\nManageTemplatesComponent\n\nAppModule -->\n\nManageTemplatesComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nPhoneConfirmationComponent\n\nPhoneConfirmationComponent\n\nAppModule -->\n\nPhoneConfirmationComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nServerErrorComponent\n\nServerErrorComponent\n\nAppModule -->\n\nServerErrorComponent->AppModule\n\n\n\n\n\nUpdatedPasswordComponent\n\nUpdatedPasswordComponent\n\nAppModule -->\n\nUpdatedPasswordComponent->AppModule\n\n\n\n\n\nVerifyPhoneComponent\n\nVerifyPhoneComponent\n\nAppModule -->\n\nVerifyPhoneComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nUrlService\n\nUrlService\n\nAppModule -->\n\nUrlService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        13 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apiPaths   (src/.../app.constants.ts)\n                        \n                        \n                            IDENTITY_ROLES   (src/.../app.constants.ts)\n                        \n                        \n                            options   (src/.../verify-phone.component.ts)\n                        \n                        \n                            options   (src/.../forgot-password.component.ts)\n                        \n                        \n                            options   (src/.../login.component.ts)\n                        \n                        \n                            options   (src/.../register.component.ts)\n                        \n                        \n                            routerPaths   (src/.../app.constants.ts)\n                        \n                        \n                            tokens   (src/.../app.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiPaths\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  registration: \"api/Accounts/Registration\",\n  login: \"api/Accounts/Login\",\n  phoneVerification: \"api/Accounts/PhoneVerification\",\n  forgotPassword: \"api/Accounts/ForgotPassword\",\n  confirmPhone: \"api/Accounts/PhoneConfirmation\",\n  resetPassword: \"api/Accounts/ResetPassword\",\n  resetPasswordToken: \"api/Accounts/ResetPasswordToken\",\n  refreshTokens: \"api/Tokens/refresh\"\n}\n                    \n                \n\n            \n                \n                    Constant variables for routes to API controller methods.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IDENTITY_ROLES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"\n                    \n                \n\n            \n                \n                    Path to collect identity roles for asp.net core Identity.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routerPaths\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  auth: 'auth',\n  confirmPhone: 'phone-confirmation',\n  forbidden: 'forbidden',\n  forgotPassword: 'password/forgot-password',\n  manageTemplates: 'manage-templates',\n  notFound: '404',\n  resetPassword: 'password/reset-password',\n  updatedPassword: 'password/updated',\n  verifyPhone: 'verify-phone',\n  serverError: 'server-error'\n}\n                    \n                \n\n            \n                \n                    Constant variables for internal routing paths. Can be found at app-routing.ts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tokens\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  access: \"accessToken\",\n  refresh: \"refreshToken\"\n}\n                    \n                \n\n            \n                \n                    Constant variables for the tokens used by the app.\n\n                \n            \n\n        \n    \n\n    src/app/modules/account/phone/verify-phone/verify-phone.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial | \n\n                    \n                \n\n\n        \n    \n\n    src/app/modules/account/password/forgot-password/forgot-password.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial | \n\n                    \n                \n\n\n        \n    \n\n    src/app/modules/account/auth/login/login.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial | \n\n                    \n                \n\n\n        \n    \n\n    src/app/modules/account/auth/register/register.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial | \n\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
