var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AdminGuard.html",[0,2.633,1,2.376]],["body/guards/AdminGuard.html",[1,3.813,2,3.369,3,0.303,4,0.267,5,0.267,6,3.809,7,0.267,8,1.173,9,4.841,10,0.824,11,4.477,12,4.592,13,2.181,14,0.968,15,4.477,16,1.408,17,0.023,18,0.674,19,0.674,20,1.408,21,4.778,22,5.474,23,3.251,24,5.474,25,4.477,26,3.04,27,0.824,28,2.063,29,0.737,30,1.682,31,0.626,32,1.264,33,4.477,34,2.372,35,2.208,36,0.303,37,0.495,38,1.122,39,1.264,40,1.51,41,4.477,42,2.423,43,2.208,44,4.477,45,3.369,46,2.372,47,3.809,48,2.778,49,0.018,50,0.018]],["title/components/AppComponent.html",[51,0.265,52,0.826]],["body/components/AppComponent.html",[3,0.207,4,0.183,5,0.183,7,0.183,8,0.91,10,0.564,13,1.981,14,1.005,16,0.768,17,0.023,18,0.608,19,0.663,20,0.768,27,0.564,29,0.7,31,0.429,32,0.865,35,2.149,36,0.207,37,0.339,38,1.092,39,0.865,40,1.469,49,0.014,50,0.014,51,0.384,52,1.303,53,1.23,54,0.918,55,0.918,56,0.918,57,0.918,58,2.607,59,1.611,60,0.918,61,2.087,62,1.377,63,1.305,64,5.069,65,1.305,66,4.357,67,0.855,68,5.069,69,3.814,70,4.312,71,1.653,72,1.624,73,2.235,74,3.075,75,4.357,76,2.149,77,3.065,78,1.159,79,0.939,80,2.149,81,1.431,82,1.518,83,3.065,84,3.707,85,3.278,86,3.065,87,3.707,88,3.707,89,3.065,90,2.607,91,3.065,92,2.607,93,2.607,94,3.065,95,3.065,96,3.065,97,3.065,98,2.607,99,4.357,100,3.065,101,3.065,102,2.081,103,2.607,104,3.065,105,2.607,106,2.081,107,4.154,108,3.065,109,3.065,110,2.607,111,3.065,112,3.065,113,2.49,114,3.065,115,2.081,116,2.607,117,1.902,118,3.065,119,1.512,120,0.918,121,1.305,122,1.305,123,0.918,124,1.558,125,0.918,126,0.918,127,0.681,128,0.918,129,0.681,130,0.918,131,0.724,132,0.918,133,0.681,134,0.918,135,0.681,136,0.918,137,1.518,138,0.724,139,0.918,140,0.681,141,0.865,142,0.918,143,0.724,144,0.918,145,0.681,146,0.918,147,0.681,148,0.918,149,0.724,150,0.918,151,0.681,152,0.564,153,0.681,154,0.816,155,0.918,156,0.681,157,0.918,158,0.681,159,0.918,160,0.64,161,0.918,162,0.918]],["title/modules/AppModule.html",[163,2.633,164,2.376]],["body/modules/AppModule.html",[3,0.192,4,0.169,5,0.169,17,0.024,29,0.848,31,0.396,36,0.192,37,0.313,43,1.398,49,0.013,50,0.013,52,1.562,62,0.556,74,2.911,92,2.411,127,1.311,129,1.311,131,1.393,133,1.311,135,1.311,138,1.393,140,1.311,143,1.393,145,1.311,147,1.311,149,1.393,151,1.311,152,0.522,153,1.311,156,1.311,158,1.311,164,4.932,165,1.62,166,2.797,167,2.411,168,2.411,169,2.411,170,2.411,171,2.411,172,3.661,173,3.661,174,3.661,175,3.504,176,2.133,177,2.834,178,3.504,179,4.118,180,3.099,181,4.118,182,3.099,183,4.118,184,2.133,185,2.133,186,4.118,187,4.118,188,1.758,189,4.118,190,4.118,191,1.398,192,2.834,193,2.834,194,2.834,195,2.834,196,2.834,197,2.411,198,1.924,199,2.411,200,2.411,201,1.924,202,2.411,203,2.411,204,2.834,205,2.834,206,2.834,207,1.398,208,1.62,209,2.834,210,2.411,211,1.758,212,2.411,213,2.411,214,1.758,215,4.127,216,2.411,217,2.411,218,1.924,219,1.924,220,2.411,221,2.411,222,2.411,223,1.758,224,2.411,225,1.924,226,2.411,227,2.411,228,1.758,229,2.834,230,2.834,231,2.834,232,2.834]],["title/modules/AppRoutingModule.html",[163,2.633,172,2.171]],["body/modules/AppRoutingModule.html",[1,2.422,3,0.241,4,0.213,5,0.213,9,3.643,17,0.024,29,0.845,31,0.499,32,1.007,36,0.241,37,0.395,49,0.015,50,0.015,51,0.518,127,1.076,129,1.076,133,1.076,135,1.076,140,1.076,145,1.076,147,1.076,151,1.076,153,1.076,156,1.076,158,1.076,165,2.039,172,3.003,180,2.684,182,3.643,197,3.034,198,2.422,199,3.034,200,3.034,201,2.422,202,3.034,203,3.034,210,3.034,211,2.213,212,3.034,213,3.034,214,2.213,215,4.675,216,3.034,217,3.034,218,2.422,219,2.422,220,3.034,221,3.034,222,3.034,223,2.213,224,3.034,225,2.422,226,3.034,227,3.034,228,2.213,233,3.567,234,3.567,235,4.841,236,3.731,237,3.287,238,3.567,239,3.567,240,3.287,241,2.388,242,3.287,243,3.643,244,3.287,245,3.643,246,3.287,247,3.287,248,3.003,249,3.287,250,3.034,251,1.444,252,6.938,253,1.133,254,4.841,255,4.841,256,4.841,257,3.567,258,2.684,259,3.567,260,3.034]],["title/components/AuthComponent.html",[51,0.265,127,0.777]],["body/components/AuthComponent.html",[3,0.242,4,0.214,5,0.214,7,0.214,8,1.014,10,1.013,14,0.836,17,0.023,18,0.582,27,0.659,29,0.43,31,0.501,36,0.242,37,0.396,38,1.216,49,0.015,50,0.015,51,0.417,52,0.845,53,1.37,54,1.072,55,1.072,56,1.072,57,1.072,59,1.749,60,1.072,61,2.125,62,1.392,63,1.453,65,1.453,71,1.768,78,1.291,120,1.072,121,1.453,122,1.453,123,1.072,124,1.666,125,1.072,126,1.072,127,1.311,128,1.072,129,0.795,130,1.072,131,0.845,132,1.072,133,0.795,134,1.072,135,0.795,136,1.072,137,1.649,138,0.845,139,1.072,140,0.795,141,1.01,142,1.072,143,0.845,144,1.072,145,0.795,146,1.072,147,0.795,148,1.072,149,0.845,150,1.072,151,0.795,152,0.659,153,0.795,154,0.952,155,1.072,156,0.795,157,1.072,158,0.795,159,1.072,160,0.748,161,1.072,162,1.072,253,1.875,261,3.045,262,4.642,263,5.505,264,4.852,265,3.579,266,3.579,267,4.852,268,2.911,269,4.128,270,4.128,271,4.852,272,4.852,273,4.142,274,3.662,275,3.045,276,2.221,277,2.221,278,2.221,279,3.295,280,3.01,281,3.045,282,4.128,283,3.579]],["title/guards/AuthGuard.html",[0,2.633,237,2.376]],["body/guards/AuthGuard.html",[2,2.519,3,0.226,4,0.2,5,0.2,7,0.2,8,0.968,9,4.318,10,0.616,13,2.031,14,0.916,16,1.333,17,0.024,18,0.638,19,0.638,20,1.333,21,3.943,22,4.882,23,2.817,24,4.882,26,2.273,27,0.853,28,1.542,29,0.782,30,1.388,31,0.468,32,0.945,34,1.774,35,1.651,36,0.226,37,0.37,38,0.839,39,0.945,40,2.102,42,2.476,43,2.286,45,2.519,46,1.774,47,2.848,48,2.876,49,0.015,50,0.015,72,1.774,73,2.324,76,2.286,79,0.924,80,1.935,93,2.848,124,0.945,188,2.077,237,3.147,241,1.651,251,2.524,284,2.848,285,6.233,286,4.635,287,4,288,4.318,289,4,290,3.28,291,3.347,292,3.347,293,3.347,294,4.635,295,3.347,296,3.56,297,4.635,298,1.774,299,2.077,300,2.519,301,1.356,302,2.456,303,2.273,304,1.66,305,1.914,306,2.848,307,2.848,308,2.848,309,2.519,310,2.273,311,6.39,312,4.635,313,3.347,314,3.347,315,3.347,316,3.347,317,4.635,318,2.848,319,2.273,320,2.519,321,2.273,322,4.318,323,3.347,324,3.347,325,3.347,326,2.273,327,3.347,328,3.347,329,4.635,330,3.347,331,4.635,332,3.347,333,2.848,334,2.848,335,3.347]],["title/interfaces/AuthResponseDto.html",[305,2,336,0.988]],["body/interfaces/AuthResponseDto.html",[3,0.294,4,0.259,5,0.259,7,0.259,17,0.023,19,0.522,28,2.933,29,0.522,36,0.372,49,0.018,50,0.018,67,1.081,79,0.7,302,3.207,304,1.556,305,3.15,319,3.742,321,3.742,336,1.556,337,2.002,338,3.27,339,2.002,340,2.167,341,2.985,342,2.789,343,4.147,344,2.718,345,4.689,346,5.71,347,3.638,348,2.92,349,5.415,350,5.415,351,5.149,352,4.554,353,5.415,354,2.484,355,4.554,356,3.697,357,4.11,358,4.689,359,2.696,360,3.697,361,3.697,362,3.697]],["title/interfaces/AuthenticationDto.html",[336,0.988,363,1.612]],["body/interfaces/AuthenticationDto.html",[3,0.209,4,0.185,5,0.185,7,0.185,17,0.024,18,0.526,19,0.371,36,0.395,49,0.014,50,0.014,62,0.607,67,0.86,79,1.113,80,1.869,113,1.768,152,0.807,160,1.27,253,2.093,268,1.525,304,2.096,320,2.327,336,1.652,337,1.425,339,1.425,340,2.096,341,2.886,342,2.696,347,1.768,348,3.1,363,2.554,364,1.768,365,2.531,366,2.327,367,2.392,368,2.72,369,1.892,370,2.72,371,2.72,372,3.16,373,2.72,374,2.72,375,2.72,376,2.72,377,2.72,378,3.53,379,2.72,380,2.72,381,2.72,382,2.323,383,3.07,384,2.72,385,2.72,386,1.919,387,1.919,388,1.919,389,1.638,390,1.919,391,1.919,392,1.334,393,1.479,394,1.919,395,2.323,396,2.696,397,1.919,398,1.425,399,2.163,400,1.525,401,1.919,402,2.72,403,1.525,404,1.919,405,1.919,406,1.252,407,1.919,408,2.163,409,1.919,410,1.919,411,1.919,412,1.768,413,1.768,414,3.083,415,1.768,416,1.919,417,1.425,418,1.638,419,1.768,420,1.768,421,1.768,422,1.919,423,1.919,424,1.638,425,1.919,426,3.168,427,1.768,428,1.919,429,1.919,430,1.919,431,1.768,432,2.506,433,2.72,434,1.768,435,1.919,436,1.919,437,1.919,438,1.768,439,1.768]],["title/injectables/AuthenticationService.html",[30,1.048,73,1.417]],["body/injectables/AuthenticationService.html",[3,0.168,4,0.148,5,0.148,7,0.148,10,0.457,14,1.133,16,0.936,17,0.024,18,0.448,19,0.599,20,0.622,27,0.457,29,0.737,30,1.118,31,0.347,34,1.314,35,1.224,36,0.168,37,0.274,39,0.7,40,2.025,42,2.65,49,0.012,50,0.012,67,0.732,73,1.511,79,1.024,81,1.838,82,1.95,152,0.826,188,1.539,251,1.005,253,1.426,287,2.808,288,3.756,289,3.376,290,2.853,296,2.316,298,1.314,299,1.539,301,1.005,302,1.977,303,1.685,304,1.787,305,1.418,306,2.11,308,2.11,309,1.867,310,1.685,339,1.143,354,1.418,359,1.539,363,1.72,367,1.611,378,1.977,398,2.067,400,1.841,406,2.021,417,1.72,440,1.418,441,2.11,442,2.873,443,4.486,444,4.486,445,4.486,446,4.486,447,4.486,448,3.817,449,3.817,450,3.817,451,4.486,452,4.486,453,5.352,454,4.486,455,4.486,456,2.11,457,3.817,458,4.246,459,2.481,460,3.732,461,2.481,462,1.977,463,4.486,464,2.481,465,2.481,466,2.481,467,2.481,468,2.481,469,2.481,470,2.481,471,2.481,472,2.481,473,2.481,474,3.175,475,4.991,476,6.766,477,3.925,478,3.732,479,4.991,480,4.991,481,2.481,482,2.481,483,1.418,484,1.685,485,1.685,486,5.834,487,2.481,488,2.481,489,2.481,490,2.481,491,2.481,492,2.481,493,3.732,494,1.867,495,2.481,496,2.481,497,2.481]],["title/injectables/AuthorizationService.html",[12,2.376,30,1.048]],["body/injectables/AuthorizationService.html",[3,0.286,4,0.253,5,0.253,7,0.253,10,0.78,12,3.684,14,0.935,16,1.063,17,0.024,18,0.509,19,0.509,20,1.063,29,0.8,30,1.625,31,0.593,34,2.246,35,2.091,36,0.286,37,0.469,39,1.197,40,1.829,42,1.829,49,0.017,50,0.017,67,1.064,80,1.43,81,1.197,82,1.27,188,2.63,251,2.423,287,4.082,288,4.745,289,4.501,290,3.605,296,3.366,298,2.246,301,1.717,309,3.19,310,2.878,354,2.423,393,1.43,440,2.423,442,2.423,456,3.606,457,5.089,458,5.365,485,2.878,498,3.606,499,5.982,500,4.239,501,4.239,502,3.19,503,3.19,504,3.606,505,3.606,506,4.239,507,4.239,508,4.615,509,4.239,510,4.239,511,4.239]],["title/components/DashboardComponent.html",[51,0.265,129,0.777]],["body/components/DashboardComponent.html",[3,0.267,4,0.236,5,0.236,7,0.236,8,1.082,10,1.064,14,0.893,17,0.023,18,0.622,27,0.726,29,0.474,31,0.552,36,0.267,37,0.437,38,1.299,49,0.017,50,0.017,51,0.438,52,0.932,53,1.462,54,1.182,55,1.182,56,1.182,57,1.182,59,1.837,60,1.182,61,2.147,62,1.407,63,1.551,65,1.551,71,1.838,78,1.378,120,1.182,121,1.551,122,1.551,123,1.182,124,1.733,125,1.182,126,1.182,127,0.877,128,1.182,129,1.364,130,1.182,131,0.932,132,1.182,133,0.877,134,1.182,135,0.877,136,1.182,137,1.732,138,0.932,139,1.182,140,0.877,141,1.114,142,1.182,143,0.932,144,1.182,145,0.877,146,1.182,147,0.877,148,1.182,149,0.932,150,1.182,151,0.877,152,0.726,153,0.877,154,1.05,155,1.182,156,0.877,157,1.182,158,0.877,159,1.182,160,0.825,161,1.182,162,1.182,512,3.359,513,6.138,514,5.782,515,5.18,516,3.948,517,3.948,518,4.407]],["title/injectables/EnvironmentUrlService.html",[30,1.048,290,2]],["body/injectables/EnvironmentUrlService.html",[3,0.334,4,0.295,5,0.295,7,0.295,10,1.179,14,1.028,17,0.023,19,0.593,29,0.716,30,1.786,31,0.69,34,2.615,35,2.435,36,0.334,37,0.546,49,0.019,50,0.019,67,1.17,79,0.961,81,1.394,82,1.478,290,3.409,440,2.822,442,2.595,505,4.2,519,5.452,520,4.2,521,6.408,522,5.964,523,5.964,524,4.936]],["title/interceptors/ErrorInterceptor.html",[174,2.171,525,2.976]],["body/interceptors/ErrorInterceptor.html",[3,0.259,4,0.229,5,0.229,7,0.229,8,1.062,10,0.706,13,2.062,14,0.876,16,1.275,17,0.023,18,0.61,19,0.61,20,1.275,23,2.033,26,3.872,27,0.706,29,0.795,30,1.523,31,0.537,32,1.083,36,0.259,37,0.425,38,0.962,39,1.083,40,1.294,42,2.194,49,0.016,50,0.016,79,0.618,81,1.083,90,3.265,174,3.155,188,2.381,240,2.606,249,2.606,251,1.554,258,2.888,301,1.554,357,2.606,366,2.888,484,2.606,494,4.291,526,3.838,527,3.265,528,5.085,529,2.194,530,4.496,531,3.838,532,5.085,533,6.071,534,6.071,535,3.838,536,3.838,537,5.085,538,3.838,539,3.838,540,6.071,541,3.838,542,3.838,543,3.838,544,2.508,545,3.838,546,3.265,547,6.621,548,3.838,549,3.838,550,3.838,551,3.838,552,3.838,553,5.085,554,6.722,555,3.838,556,6.071,557,3.265,558,3.838,559,3.838,560,3.838,561,3.838,562,3.838,563,3.838,564,3.838,565,2.888,566,3.838,567,3.838,568,3.838,569,3.838]],["title/components/FooterComponent.html",[51,0.265,131,0.826]],["body/components/FooterComponent.html",[3,0.256,4,0.227,5,0.227,7,0.227,8,1.054,10,1.044,14,0.87,17,0.023,18,0.606,27,0.698,29,0.456,31,0.531,36,0.256,37,0.42,38,1.265,49,0.016,50,0.016,51,0.429,52,0.896,53,1.425,54,1.137,55,1.137,56,1.137,57,1.137,59,1.802,60,1.137,61,2.139,62,1.405,63,1.512,65,1.512,71,1.81,78,1.343,102,3.427,107,2.856,117,3.518,119,2.49,120,1.137,121,1.512,122,1.512,123,1.137,124,1.706,125,1.137,126,1.137,127,0.843,128,1.137,129,0.843,130,1.137,131,1.427,132,1.137,133,0.843,134,1.137,135,0.843,136,1.137,137,1.698,138,0.896,139,1.137,140,0.843,141,1.072,142,1.137,143,0.896,144,1.137,145,0.843,146,1.137,147,0.843,148,1.137,149,0.896,150,1.137,151,0.843,152,0.698,153,0.843,154,1.01,155,1.137,156,0.843,157,1.137,158,0.843,159,1.137,160,0.793,161,1.137,162,1.137,277,3.132,570,3.229,571,5.671,572,5.047,573,3.796,574,3.796,575,3.798,576,2.577,577,3.229,578,3.229,579,3.229,580,3.796,581,3.796,582,3.796]],["title/components/ForbiddenComponent.html",[51,0.265,133,0.777]],["body/components/ForbiddenComponent.html",[3,0.229,4,0.202,5,0.202,7,0.202,8,0.976,10,0.623,13,1.988,14,0.994,16,0.849,17,0.023,18,0.642,19,0.561,20,0.849,27,0.623,29,0.561,31,0.473,32,0.956,36,0.229,37,0.375,38,1.171,39,0.956,40,1.945,45,2.548,46,3.055,49,0.015,50,0.015,51,0.405,52,0.799,53,1.319,54,1.014,55,1.014,56,1.014,57,1.014,59,1.7,60,1.014,61,2.112,62,1.384,63,1.399,65,1.399,67,0.917,71,1.727,78,1.243,79,0.753,81,0.956,82,1.014,120,1.014,121,1.399,122,1.399,123,1.014,124,1.628,125,1.014,126,1.014,127,0.752,128,1.014,129,0.752,130,1.014,131,0.799,132,1.014,133,1.281,134,1.014,135,0.752,136,1.014,137,1.602,138,0.799,139,1.014,140,0.752,141,0.956,142,1.014,143,0.799,144,1.014,145,0.752,146,1.014,147,0.752,148,1.014,149,0.799,150,1.014,151,0.752,152,0.623,153,0.752,154,0.901,155,1.014,156,0.752,157,1.014,158,0.752,159,1.014,160,0.707,161,1.014,162,1.014,344,2.304,393,1.575,408,2.304,442,2.166,477,3.057,529,1.935,583,2.88,584,5.321,585,5.348,586,4.671,587,5.348,588,3.296,589,4.671,590,3.386,591,3.386,592,2.898,593,2.101,594,2.88,595,3.578,596,3.172,597,2.898,598,4.671,599,4.671]],["title/components/ForgotPasswordComponent.html",[51,0.265,135,0.777]],["body/components/ForgotPasswordComponent.html",[3,0.175,4,0.154,5,0.154,7,0.154,8,0.804,10,0.475,13,1.879,14,0.984,16,0.648,17,0.023,18,0.552,19,0.611,20,0.648,23,1.368,27,0.475,28,1.772,29,0.71,31,0.361,32,0.729,36,0.26,37,0.286,38,0.964,39,0.729,40,1.836,43,1.897,46,2.435,49,0.012,50,0.012,51,0.348,52,0.61,53,1.086,54,0.774,55,0.774,56,0.774,57,0.774,59,1.46,60,0.774,61,2.039,62,1.335,63,1.152,65,1.152,67,0.755,71,1.525,72,1.368,73,2.062,76,1.897,78,1.024,79,0.62,81,1.298,82,1.377,102,1.754,110,2.197,119,1.897,120,0.774,121,1.152,122,1.152,123,0.774,124,1.537,125,0.774,126,0.774,127,0.574,128,0.774,129,0.574,130,0.774,131,0.61,132,0.774,133,0.574,134,0.774,135,1.131,136,1.82,137,1.377,138,0.61,139,0.774,140,0.574,141,0.729,142,0.774,143,0.61,144,0.774,145,0.574,146,0.774,147,0.574,148,0.774,149,0.61,150,0.774,151,0.574,152,0.475,153,0.574,154,0.687,155,0.774,156,0.574,157,0.774,158,0.574,159,0.774,160,1.32,161,0.774,162,0.774,191,1.274,207,1.274,208,1.476,214,3.669,248,1.603,253,1.222,273,2.894,274,2.387,276,3.378,278,2.852,279,1.754,280,1.603,282,2.197,301,1.046,340,0.925,365,2.062,367,2.35,369,1.115,383,1.772,392,1.115,393,1.717,395,2.038,396,1.772,400,1.897,406,1.046,442,2.515,462,2.038,477,2.627,483,1.476,575,1.944,588,2.911,592,1.603,593,1.603,600,4.449,601,1.603,602,3.458,603,2.894,604,5.092,605,2.852,606,4.632,607,3.272,608,2.583,609,3.159,610,2.197,611,2.197,612,2.583,613,2.894,614,1.603,615,1.754,616,1.944,617,1.603,618,1.476,619,2.387,620,2.583,621,1.603,622,2.583,623,2.583,624,1.944,625,2.197,626,2.894,627,3.272,628,3.272,629,3.846,630,2.894,631,2.583,632,3.121,633,3.121,634,3.272,635,2.197,636,2.197,637,2.197,638,2.583,639,2.583,640,2.583,641,2.583,642,2.894,643,2.583]],["title/interfaces/JwtTokenDto.html",[302,1.854,336,0.988]],["body/interfaces/JwtTokenDto.html",[3,0.294,4,0.259,5,0.259,7,0.259,17,0.023,19,0.662,36,0.294,49,0.018,50,0.018,67,1.081,79,1.081,296,3.949,302,2.92,303,2.951,304,2.471,319,4.11,321,3.742,322,4.789,336,1.227,337,2.002,339,2.002,340,1.556,341,2.144,342,2.002,343,3.27,344,3.31,347,3.15,378,3.207,389,2.92,403,2.718,414,3.14,438,3.638,630,4.147,644,3.697,645,3.697,646,6.365,647,5.511,648,6.365,649,5.511,650,5.511,651,5.511,652,5.511,653,6.365,654,5.511,655,5.511,656,5.511]],["title/components/LoginComponent.html",[51,0.265,138,0.826]],["body/components/LoginComponent.html",[3,0.158,4,0.14,5,0.14,7,0.14,8,0.745,10,0.43,13,1.817,14,1.095,16,0.586,17,0.024,18,0.519,19,0.708,20,0.586,27,0.43,28,2.231,29,0.686,30,1.069,31,0.327,32,0.66,36,0.241,37,0.259,38,0.895,39,0.66,40,1.759,42,1.54,43,1.76,46,2.293,48,2.214,49,0.011,50,0.011,51,0.328,52,0.552,53,1.007,54,0.7,55,0.7,56,0.7,57,0.7,59,1.375,60,0.7,61,2.008,62,1.315,63,1.069,65,1.069,67,0.7,71,1.45,72,1.239,73,1.961,76,1.76,78,0.949,79,1.009,81,1.552,82,1.646,106,1.587,117,1.45,119,2.134,120,0.7,121,1.069,122,1.069,123,0.7,124,1.367,125,0.7,126,0.7,127,0.519,128,0.7,129,0.519,130,0.7,131,0.552,132,0.7,133,0.519,134,0.7,135,0.519,136,1.296,137,1.296,138,1.143,139,0.7,140,0.519,141,0.66,142,0.7,143,0.552,144,0.7,145,0.519,146,0.7,147,0.519,148,0.7,149,0.552,150,0.7,151,0.519,152,0.43,153,0.519,154,0.622,155,0.7,156,0.519,157,0.7,158,0.519,159,0.7,160,1.089,161,0.7,162,0.7,191,1.153,207,1.153,208,1.336,251,1.445,253,1.919,273,1.759,276,3.004,278,3.004,279,1.587,280,1.45,281,1.989,298,1.239,299,1.45,301,0.947,333,1.989,334,1.989,363,1.644,365,1.445,369,1.54,383,2.231,392,1.009,393,1.203,442,2.573,449,3.681,462,2.293,477,2.473,483,1.336,544,2.572,588,2.768,592,1.45,593,1.45,597,2.214,605,3.235,609,3.004,613,3.256,614,1.45,615,1.587,617,1.45,618,1.336,619,2.214,621,2.214,632,2.423,633,1.587,634,1.989,642,2.685,657,1.759,658,5.214,659,4.327,660,3.568,661,4.327,662,4.327,663,4.119,664,4.327,665,3.681,666,3.568,667,2.338,668,2.338,669,2.338,670,2.338,671,2.338,672,2.338,673,2.338,674,2.338,675,2.338,676,2.338,677,1.759,678,1.989,679,2.338,680,3.036,681,2.338,682,2.338,683,2.338,684,2.338,685,3.568,686,3.568,687,2.338,688,2.338,689,2.338,690,1.989,691,2.338,692,2.338,693,2.338,694,1.759,695,1.989,696,2.338,697,2.685,698,2.685,699,3.681,700,1.989,701,2.685,702,1.759,703,1.989,704,4.327]],["title/components/ManageTemplatesComponent.html",[51,0.265,140,0.777]],["body/components/ManageTemplatesComponent.html",[3,0.257,4,0.227,5,0.227,7,0.227,8,1.057,10,1.045,14,0.872,17,0.023,18,0.607,27,0.701,29,0.457,31,0.533,36,0.257,37,0.421,38,1.269,49,0.016,50,0.016,51,0.43,52,0.899,53,1.428,54,1.141,55,1.141,56,1.141,57,1.141,59,1.805,60,1.141,61,2.14,62,1.402,63,1.515,65,1.515,71,1.813,78,1.346,120,1.141,121,1.515,122,1.515,123,1.141,124,1.709,125,1.141,126,1.141,127,0.846,128,1.141,129,0.846,130,1.141,131,0.899,132,1.141,133,0.846,134,1.141,135,0.846,136,1.141,137,1.702,138,0.899,139,1.141,140,1.345,141,1.937,142,1.141,143,0.899,144,1.141,145,0.846,146,1.141,147,0.846,148,1.141,149,0.899,150,1.141,151,0.846,152,0.701,153,0.846,154,1.014,155,1.141,156,0.846,157,1.141,158,0.846,159,1.141,160,0.796,161,1.141,162,1.141,218,3.858,219,3.858,518,4.305,705,4.833,706,3.241,707,5.15,708,5.681,709,5.06,710,3.81,711,3.81]],["title/components/NavComponent.html",[51,0.265,143,0.826]],["body/components/NavComponent.html",[3,0.33,4,0.171,5,0.171,7,0.171,8,0.869,10,0.529,13,1.943,14,0.924,16,0.72,17,0.024,18,0.643,19,0.499,20,0.72,27,0.529,28,1.324,29,0.587,31,0.402,32,0.811,36,0.194,37,0.318,39,0.811,40,1.403,49,0.013,50,0.013,51,0.37,52,0.678,53,1.174,54,0.861,55,0.861,56,0.861,57,0.861,60,0.861,61,2.069,62,1.356,63,1.246,65,1.246,67,0.816,71,1.605,72,1.522,73,1.98,76,1.417,78,1.107,79,0.863,81,0.811,82,0.861,102,2.825,103,2.445,106,2.825,107,2.162,115,1.951,116,4.559,119,2.052,120,0.861,121,1.246,122,1.246,123,0.861,124,1.513,125,0.861,126,0.861,127,0.638,128,0.861,129,0.638,130,0.861,131,0.678,132,0.861,133,0.638,134,0.861,135,0.638,136,0.861,137,1.464,138,0.678,139,0.861,140,0.638,141,0.811,142,0.861,143,1.265,144,0.861,145,0.638,146,0.861,147,0.638,148,0.861,149,0.678,150,0.861,151,0.638,152,0.529,153,0.638,154,0.765,155,0.861,156,0.638,157,0.861,158,0.638,159,0.861,160,0.6,161,0.861,162,0.861,253,1.322,274,2.581,275,2.445,277,1.783,279,2.825,280,1.783,307,2.445,340,1.751,369,1.24,393,1.403,413,2.378,424,1.522,442,2.401,448,3.539,450,5.202,508,2.445,575,3.13,576,1.951,577,2.445,578,2.445,579,2.445,594,2.445,597,3.325,605,1.783,636,3.539,637,2.445,663,2.445,690,3.539,712,2.445,713,4.889,714,4.16,715,4.16,716,2.873,717,2.873,718,2.873,719,2.873,720,4.16,721,4.16,722,2.873,723,2.873,724,2.873,725,2.873,726,2.873,727,2.873,728,2.873,729,4.16,730,4.16,731,4.16,732,2.873,733,4.16,734,4.16,735,4.559,736,4.16,737,3.539,738,5.359,739,4.16,740,2.873,741,2.873,742,2.873,743,4.16,744,2.873,745,2.873,746,2.873,747,2.873,748,2.873,749,2.873]],["title/components/NotFoundComponent.html",[51,0.265,145,0.777]],["body/components/NotFoundComponent.html",[3,0.261,4,0.23,5,0.23,7,0.23,8,1.066,10,1.052,14,0.88,17,0.023,18,0.613,27,0.71,29,0.463,31,0.54,36,0.261,37,0.427,38,1.279,42,2.202,49,0.016,50,0.016,51,0.433,52,0.911,53,1.441,54,1.156,55,1.156,56,1.156,57,1.156,59,1.817,60,1.156,61,2.142,62,1.403,63,1.529,65,1.529,71,1.822,78,1.358,120,1.156,121,1.529,122,1.529,123,1.156,124,1.718,125,1.156,126,1.156,127,0.857,128,1.156,129,0.857,130,1.156,131,0.911,132,1.156,133,0.857,134,1.156,135,0.857,136,1.156,137,1.713,138,0.911,139,1.156,140,0.857,141,1.09,142,1.156,143,0.911,144,1.156,145,1.352,146,1.156,147,0.857,148,1.156,149,0.911,150,1.156,151,0.857,152,0.71,153,0.857,154,1.027,155,1.156,156,0.857,157,1.156,158,0.857,159,1.156,160,0.806,161,1.156,162,1.156,198,3.883,595,3.166,750,4.864,751,3.283,752,5.176,753,5.718,754,5.103,755,3.859,756,3.859,757,5.103]],["title/injectables/NotificationService.html",[30,1.048,530,2.376]],["body/injectables/NotificationService.html",[3,0.266,4,0.235,5,0.235,7,0.235,8,1.079,10,0.724,14,1.097,16,1.596,17,0.023,18,0.764,19,0.764,20,1.596,27,1.128,29,0.62,30,1.548,31,0.55,34,2.084,35,1.94,36,0.266,37,0.435,39,1.11,49,0.016,50,0.016,70,6.061,78,1.631,79,1.169,81,1.11,82,1.178,207,1.94,440,2.248,530,3.509,758,3.346,759,5.167,760,5.167,761,5.167,762,5.167,763,3.933,764,6.129,765,3.933,766,4.342,767,5.167,768,3.933,769,3.933,770,5.167,771,3.933,772,5.771,773,5.167,774,3.933,775,5.167,776,3.933,777,3.933,778,3.933,779,3.933,780,3.933]],["title/components/PhoneConfirmationComponent.html",[51,0.265,147,0.777]],["body/components/PhoneConfirmationComponent.html",[3,0.217,4,0.192,5,0.192,7,0.192,8,0.941,10,0.591,13,1.955,14,0.971,16,0.805,17,0.023,18,0.624,19,0.624,20,0.805,27,0.591,29,0.624,31,0.449,32,0.907,36,0.217,37,0.355,38,1.129,39,0.907,49,0.014,50,0.014,51,0.394,52,0.758,53,1.271,54,0.962,55,0.962,56,0.962,57,0.962,59,1.653,60,0.962,61,2.099,62,1.389,63,1.349,65,1.349,67,0.884,71,1.688,78,1.198,79,0.908,80,1.901,81,1.271,82,1.349,84,3.832,85,3.389,120,0.962,121,1.349,122,1.349,123,0.962,124,1.591,125,0.962,126,0.962,127,0.714,128,0.962,129,0.714,130,0.962,131,0.758,132,0.962,133,0.714,134,0.962,135,0.714,136,0.962,137,1.558,138,0.758,139,0.962,140,0.714,141,0.907,142,0.962,143,0.758,144,0.962,145,0.714,146,0.962,147,1.252,148,0.962,149,0.758,150,0.962,151,0.714,152,0.591,153,0.714,154,0.855,155,0.962,156,0.714,157,0.962,158,0.714,159,0.962,160,1.347,161,0.962,162,0.962,225,4.03,241,1.585,268,2.222,269,3.832,301,1.301,344,2.222,365,1.824,393,1.083,529,1.836,596,2.181,597,2.794,781,5.049,782,2.733,783,3.832,784,5.2,785,4.504,786,5.935,787,5.2,788,4.504,789,3.212,790,3.212,791,5.2,792,2.181,793,2.181,794,3.212,795,3.212,796,2.181,797,3.212,798,2.417,799,3.212,800,3.212,801,3.212,802,3.212]],["title/interfaces/PhoneNumberDto.html",[336,0.988,367,1.51]],["body/interfaces/PhoneNumberDto.html",[3,0.211,4,0.186,5,0.186,7,0.186,17,0.024,18,0.529,19,0.374,36,0.397,49,0.014,50,0.014,62,0.611,67,0.865,79,1.115,80,2.055,113,1.781,152,0.811,160,1.308,253,1.865,268,1.537,304,2.101,336,1.657,337,1.436,339,1.436,340,2.101,341,2.894,342,2.704,348,2.946,363,2.357,364,1.781,365,2.591,367,2.4,368,1.933,369,1.345,370,1.933,371,1.933,372,3.173,373,1.933,374,1.933,375,1.933,376,1.933,377,1.933,378,3.447,379,1.933,380,1.933,381,1.933,382,1.651,383,3.039,384,3.173,385,3.173,386,2.735,387,2.735,388,2.735,389,2.335,390,2.735,391,2.735,392,2.4,393,1.875,394,1.933,395,2.335,396,2.704,397,1.933,398,1.436,399,2.174,400,1.537,401,1.933,402,2.735,403,1.537,404,1.933,405,1.933,406,1.262,407,1.933,408,2.174,409,1.933,410,1.933,411,1.933,412,1.781,413,1.781,414,3.089,415,1.781,416,1.933,417,1.436,418,1.651,419,1.781,420,1.781,421,1.781,422,1.933,423,1.933,424,1.651,425,1.933,426,3.179,427,1.781,428,1.933,429,1.933,430,1.933,431,1.781,432,2.52,433,2.735,434,1.781,435,1.933,436,1.933,437,1.933,438,1.781,439,1.781]],["title/interfaces/PhoneVerificationDto.html",[336,0.988,398,1.612]],["body/interfaces/PhoneVerificationDto.html",[3,0.211,4,0.187,5,0.187,7,0.187,17,0.024,18,0.53,19,0.375,36,0.397,49,0.014,50,0.014,62,0.613,67,0.867,79,1.109,80,1.878,113,1.786,152,0.813,160,1.338,253,1.867,268,1.541,304,2.104,336,1.658,337,1.44,339,1.44,340,2.104,341,2.898,342,2.707,348,3.113,363,2.361,364,1.786,365,2.637,367,2.403,368,1.939,369,1.349,370,1.939,371,1.939,372,2.741,373,1.939,374,1.939,375,1.939,376,1.939,377,1.939,378,3.45,379,1.939,380,1.939,381,1.939,382,1.656,383,3.041,384,2.741,385,2.741,386,1.939,387,1.939,388,1.939,389,1.656,390,1.939,391,1.939,392,1.349,393,1.49,394,2.741,395,2.95,396,3.076,397,2.741,398,2.035,399,2.527,400,2.179,401,2.741,402,3.179,403,2.179,404,1.939,405,1.939,406,1.266,407,1.939,408,2.179,409,1.939,410,1.939,411,1.939,412,1.786,413,1.786,414,3.092,415,1.786,416,1.939,417,1.44,418,1.656,419,1.786,420,1.786,421,1.786,422,1.939,423,1.939,424,1.656,425,1.939,426,3.183,427,1.786,428,1.939,429,1.939,430,1.939,431,1.786,432,2.525,433,2.741,434,1.786,435,1.939,436,1.939,437,1.939,438,1.786,439,1.786]],["title/components/RegisterComponent.html",[51,0.265,149,0.826]],["body/components/RegisterComponent.html",[3,0.126,4,0.111,5,0.111,7,0.111,8,0.622,10,0.342,13,1.666,14,1.09,16,0.747,17,0.024,18,0.759,19,0.629,20,0.747,23,1.579,27,0.86,28,1.373,29,0.654,30,0.892,31,0.26,32,0.524,36,0.201,37,0.205,38,0.747,39,0.524,40,0.626,42,2.154,43,2.106,48,2.315,49,0.01,50,0.01,51,0.282,52,0.439,53,0.841,54,0.556,55,0.556,56,0.556,57,0.556,59,1.186,60,0.556,61,1.928,62,1.263,63,0.892,65,0.892,67,0.585,71,1.279,72,0.984,73,1.729,76,1.47,78,0.993,79,0.753,80,1.258,81,1.587,82,1.765,106,1.261,115,2.023,117,1.152,119,0.916,120,0.556,121,0.892,122,0.892,123,0.556,124,1.206,125,0.556,126,0.556,127,0.413,128,0.556,129,0.413,130,0.556,131,0.439,132,0.556,133,0.413,134,0.556,135,0.413,136,0.556,137,1.118,138,0.439,139,0.556,140,0.413,141,0.524,142,0.556,143,0.439,144,0.556,145,0.413,146,0.556,147,0.413,148,0.556,149,1.008,150,0.556,151,0.413,152,0.342,153,0.413,154,0.494,155,0.556,156,0.413,157,0.556,158,0.413,159,1.279,160,0.977,161,0.556,162,0.556,191,0.916,207,0.916,208,1.062,248,1.152,251,1.729,253,1.988,274,1.849,276,1.152,277,1.849,278,1.152,301,0.752,326,1.261,340,1.067,352,1.398,365,0.752,369,0.802,382,1.579,383,1.968,389,1.579,392,2.017,396,1.373,399,2.106,408,1.841,417,1.373,418,2.262,419,1.703,420,2.441,421,1.703,424,2.888,426,2.441,427,1.703,431,1.703,432,2.441,434,1.703,439,1.703,442,2.021,483,1.062,503,1.398,504,1.58,544,2.586,546,1.58,557,1.58,565,2.242,605,2.649,609,3.253,614,1.152,615,1.261,617,1.152,618,1.062,619,1.849,621,2.649,625,2.535,626,2.242,632,2.023,633,1.261,665,3.175,678,1.58,695,1.58,697,3.213,698,3.213,699,3.633,700,1.58,701,1.398,702,1.398,703,1.58,735,4.637,796,2.023,803,1.398,804,3.731,805,2.98,806,3.633,807,2.98,808,3.977,809,3.731,810,2.98,811,4.99,812,4.99,813,4.99,814,2.98,815,3.175,816,3.633,817,2.98,818,1.857,819,1.857,820,4.27,821,4.27,822,1.857,823,1.857,824,2.98,825,1.857,826,1.857,827,1.857,828,1.857,829,1.857,830,1.857,831,1.857,832,1.857,833,1.857,834,1.857,835,1.398,836,1.857,837,1.857,838,1.857,839,1.857,840,1.857,841,1.58,842,2.98,843,2.98,844,2.98,845,2.98,846,1.857,847,1.857,848,3.731,849,2.98,850,3.633,851,1.58,852,1.857,853,1.857,854,2.98,855,1.857,856,1.857,857,1.857,858,1.857,859,1.857,860,1.857,861,1.857,862,1.857,863,1.857,864,1.857,865,1.857,866,1.857,867,1.857,868,1.58,869,1.857,870,2.535,871,1.857,872,1.857,873,3.175,874,1.857,875,1.857,876,1.857,877,1.857,878,1.857,879,1.857,880,1.857,881,1.857,882,2.535,883,2.98,884,2.98,885,2.535,886,1.857,887,1.857,888,2.98,889,1.857,890,1.857,891,1.857,892,1.857,893,1.857]],["title/interfaces/RegistrationResponseDto.html",[336,0.988,359,2.171]],["body/interfaces/RegistrationResponseDto.html",[3,0.288,4,0.254,5,0.254,7,0.254,17,0.023,19,0.653,28,2.91,29,0.511,36,0.368,49,0.017,50,0.017,67,1.067,79,0.966,302,2.882,304,1.524,305,2.433,319,2.89,321,2.89,336,1.535,337,1.961,338,3.203,339,1.961,340,2.147,341,2.957,342,2.762,343,3.203,344,2.099,345,3.621,346,5.679,347,3.109,348,2.255,349,3.621,350,5.553,351,5.099,352,4.51,353,5.553,354,2.433,355,5.023,356,4.627,357,4.665,358,5.374,359,3.374,360,5.374,361,4.627,362,4.627]],["title/components/ResetPasswordComponent.html",[51,0.265,151,0.777]],["body/components/ResetPasswordComponent.html",[3,0.156,4,0.138,5,0.138,7,0.138,8,0.74,10,0.426,13,1.74,14,1.077,16,0.58,17,0.024,18,0.516,19,0.723,20,0.58,23,1.226,27,0.426,28,2.522,29,0.705,31,0.324,32,0.653,36,0.156,37,0.256,38,0.888,39,0.653,40,1.982,43,2.376,46,2.278,48,2.197,49,0.011,50,0.011,51,0.325,52,0.546,53,1,54,0.693,55,0.693,56,0.693,57,0.693,59,1.366,60,0.693,61,2.005,62,1.313,63,1.06,65,1.06,67,0.695,71,1.443,73,1.951,74,1.142,76,2.121,78,0.942,79,0.776,80,2.031,81,1.608,82,1.706,120,0.693,121,1.06,122,1.06,123,0.693,124,1.36,125,0.693,126,0.693,127,0.514,128,0.693,129,0.514,130,0.693,131,0.546,132,0.693,133,0.514,134,0.693,135,0.514,136,0.693,137,1.288,138,0.546,139,0.693,140,0.514,141,0.653,142,0.693,143,0.546,144,0.693,145,0.514,146,0.693,147,0.514,148,0.693,149,0.546,150,0.693,151,1.07,152,1.081,153,0.514,154,0.616,155,0.693,156,0.514,157,0.693,158,0.514,159,1.288,160,0.483,161,0.693,162,0.693,191,1.142,223,3.934,241,1.142,246,1.572,251,1.434,253,2.04,301,0.937,304,0.829,340,0.829,365,0.937,382,1.876,392,0.999,393,1.45,399,1.746,406,2.217,442,2.754,462,2.278,477,2.458,483,1.323,529,1.323,544,2.7,565,2.664,588,2.753,592,1.436,593,1.436,601,1.436,602,3.236,603,2.664,605,3.221,606,4.416,607,1.969,609,2.988,610,1.969,611,1.969,613,3.236,614,2.197,617,1.436,621,2.197,624,1.741,694,1.741,697,3.624,698,3.624,792,1.572,793,1.572,796,2.404,806,4.416,808,4.416,850,3.012,873,3.012,882,3.012,894,5.394,895,3.236,896,4.3,897,3.54,898,2.314,899,2.314,900,2.314,901,2.314,902,2.314,903,2.314,904,1.741,905,1.969,906,1.572,907,2.314,908,3.236,909,2.314,910,2.314,911,2.314,912,3.54,913,2.314,914,1.969,915,2.314,916,2.314,917,2.314,918,2.314,919,2.314]],["title/interfaces/ResetPasswordDto.html",[336,0.988,406,1.417]],["body/interfaces/ResetPasswordDto.html",[3,0.207,4,0.183,5,0.183,7,0.183,17,0.024,18,0.523,19,0.368,36,0.394,49,0.014,50,0.014,62,0.601,67,0.855,79,1.106,80,2.044,113,1.752,152,1.016,160,1.218,253,2.024,268,2.149,304,2.405,336,1.646,337,1.412,339,1.412,340,2.088,341,2.877,342,2.687,348,3.09,363,2.544,364,1.752,365,2.454,367,2.187,368,1.902,369,1.323,370,1.902,371,1.902,372,2.703,373,1.902,374,1.902,375,1.902,376,1.902,377,1.902,378,3.434,379,1.902,380,1.902,381,1.902,382,1.624,383,3.064,384,2.703,385,2.703,386,1.902,387,1.902,388,1.902,389,1.624,390,1.902,391,1.902,392,1.323,393,1.862,394,1.902,395,2.308,396,2.687,397,1.902,398,1.412,399,2.5,400,1.512,401,1.902,402,3.145,403,1.512,404,2.703,405,2.703,406,1.764,407,2.703,408,2.5,409,2.703,410,2.703,411,2.703,412,2.49,413,2.49,414,3.142,415,1.752,416,1.902,417,1.412,418,1.624,419,1.752,420,1.752,421,1.752,422,1.902,423,1.902,424,1.624,425,1.902,426,3.155,427,1.752,428,1.902,429,1.902,430,1.902,431,1.752,432,2.49,433,2.703,434,1.752,435,1.902,436,1.902,437,1.902,438,1.752,439,1.752]],["title/components/ServerErrorComponent.html",[51,0.265,153,0.777]],["body/components/ServerErrorComponent.html",[3,0.213,4,0.188,5,0.188,7,0.188,8,0.93,10,0.581,13,1.944,14,0.888,16,0.792,17,0.023,18,0.619,19,0.534,20,0.792,26,3.022,27,0.581,29,0.534,31,0.442,32,0.892,36,0.213,37,0.349,38,1.116,39,0.892,49,0.014,50,0.014,51,0.39,52,0.746,53,1.256,54,0.946,55,0.946,56,0.946,57,0.946,59,1.637,60,0.946,61,2.095,62,1.372,63,1.333,65,1.333,67,0.873,71,1.676,78,1.184,120,0.946,121,1.333,122,1.333,123,0.946,124,1.579,125,0.946,126,0.946,127,0.702,128,0.946,129,0.702,130,0.946,131,0.746,132,0.946,133,0.702,134,0.946,135,0.702,136,0.946,137,1.543,138,0.746,139,0.946,140,0.702,141,0.892,142,0.946,143,0.746,144,0.946,145,0.702,146,0.946,147,0.702,148,0.946,149,0.746,150,0.946,151,0.702,152,0.581,153,1.243,154,1.76,155,0.946,156,0.702,157,0.946,158,0.702,159,0.946,160,0.66,161,0.946,162,0.946,201,3.799,251,1.279,270,3.786,318,3.786,326,3.022,366,3.349,529,1.805,544,3.357,576,3.022,595,2.761,627,4.76,628,3.786,920,4.76,921,2.687,922,5.153,923,4.45,924,4.45,925,3.158,926,3.158,927,3.158,928,3.158,929,3.158,930,4.45,931,4.45,932,4.45,933,4.45,934,4.45,935,3.349,936,4.45,937,4.45,938,4.45,939,4.45,940,3.786,941,4.45,942,4.45,943,4.45,944,4.45,945,4.45,946,3.786,947,4.45,948,4.45,949,4.45,950,4.45,951,4.45,952,4.45,953,4.45,954,4.45,955,4.45,956,4.45,957,4.45,958,4.45]],["title/modules/SharedModule.html",[163,2.633,173,2.171]],["body/modules/SharedModule.html",[3,0.229,4,0.202,5,0.202,17,0.024,27,0.623,29,0.862,31,0.473,36,0.316,37,0.375,42,1.461,49,0.015,50,0.015,165,1.935,173,2.898,178,2.88,180,4.024,182,3.515,184,2.548,207,1.67,250,2.88,260,2.88,298,1.794,304,1.673,310,2.299,344,2.304,347,1.935,354,2.67,414,1.67,485,2.299,702,2.548,766,3.515,935,3.515,959,2.548,960,4.671,961,2.88,962,3.386,963,5.348,964,3.386,965,5.348,966,4.671,967,5.348,968,3.386,969,5.348,970,3.386,971,5.348,972,3.386,973,5.348,974,3.386,975,5.348,976,3.386,977,5.348,978,3.386,979,3.386,980,5.348,981,3.386,982,5.348,983,3.386,984,5.348,985,3.386,986,5.348,987,3.386,988,5.348,989,3.386,990,5.348,991,3.386,992,3.386,993,5.348,994,3.386,995,5.348,996,3.386,997,5.348,998,3.386,999,5.348,1000,3.386,1001,5.348,1002,3.386,1003,3.386,1004,5.348,1005,2.88,1006,2.88,1007,3.386,1008,4.671,1009,3.386,1010,2.88,1011,2.88,1012,3.386,1013,3.386,1014,2.88,1015,4.024,1016,3.386,1017,3.386,1018,3.386,1019,3.386,1020,3.386,1021,3.386,1022,3.386,1023,3.386,1024,3.386,1025,3.386]],["title/components/UpdatedPasswordComponent.html",[51,0.265,156,0.777]],["body/components/UpdatedPasswordComponent.html",[3,0.234,4,0.206,5,0.206,7,0.206,8,0.99,10,0.637,13,2.001,14,0.932,16,0.867,17,0.023,18,0.649,19,0.569,20,0.867,27,0.637,29,0.649,31,0.484,32,0.977,36,0.234,37,0.383,38,1.189,39,0.977,49,0.015,50,0.015,51,0.409,52,0.817,53,1.338,54,1.036,55,1.036,56,1.036,57,1.036,59,1.719,60,1.036,61,2.117,62,1.395,63,1.42,65,1.42,67,0.93,71,1.743,78,1.262,79,0.764,120,1.036,121,1.42,122,1.42,123,1.036,124,1.643,125,1.036,126,1.036,127,0.769,128,1.036,129,0.769,130,1.036,131,0.817,132,1.036,133,0.769,134,1.036,135,0.769,136,1.036,137,1.62,138,0.817,139,1.036,140,0.769,141,0.977,142,1.036,143,0.817,144,1.036,145,0.769,146,1.036,147,0.769,148,1.036,149,0.817,150,1.036,151,0.769,152,0.872,153,0.769,154,0.92,155,1.036,156,1.293,157,1.966,158,0.769,159,1.036,160,0.723,161,1.036,162,1.036,228,3.61,241,1.706,253,1.849,268,2.339,301,1.401,344,2.339,393,1.824,529,1.977,588,1.977,596,2.349,597,2.941,601,2.146,602,4.07,603,3.567,792,2.349,793,2.349,895,4.07,908,4.07,1026,4.95,1027,4.741,1028,3.459,1029,3.459]],["title/injectables/UrlService.html",[30,1.048,74,1.726]],["body/injectables/UrlService.html",[3,0.294,4,0.26,5,0.26,7,0.26,8,1.153,10,1.115,13,1.384,14,1.098,16,1.092,17,0.023,18,0.523,19,0.727,20,1.092,27,0.801,29,0.727,30,1.653,31,0.609,32,1.229,34,2.307,35,2.148,36,0.294,37,0.482,40,2.043,49,0.018,50,0.018,67,1.083,69,5.132,74,2.722,78,1.159,79,0.976,80,2.043,81,1.558,82,1.653,87,3.705,88,3.705,440,2.489,442,2.719,462,2.924,484,2.957,494,4.559,1030,3.705,1031,5.518,1032,5.518,1033,5.518,1034,4.355,1035,6.058,1036,5.518,1037,4.355,1038,5.518,1039,4.355]],["title/interfaces/UserForRegistrationDto.html",[336,0.988,417,1.612]],["body/interfaces/UserForRegistrationDto.html",[3,0.187,4,0.166,5,0.166,7,0.166,17,0.024,18,0.633,19,0.726,36,0.379,49,0.013,50,0.013,62,0.795,67,0.795,79,1.141,80,2.091,113,2.317,152,0.746,160,1.171,253,1.782,268,1.368,304,2.008,336,1.583,337,1.278,339,1.278,340,2.008,341,2.766,342,2.584,348,2.971,363,2.429,364,1.585,365,2.45,367,2.068,368,1.721,369,1.197,370,1.721,371,1.721,372,2.515,373,1.721,374,1.721,375,1.721,376,1.721,377,1.721,378,3.604,379,1.721,380,1.721,381,1.721,382,1.469,383,3.168,384,2.973,385,2.973,386,1.721,387,1.721,388,1.721,389,1.469,390,1.721,391,1.721,392,1.197,393,1.367,394,1.721,395,2.148,396,2.699,397,1.721,398,1.278,399,2,400,1.368,401,1.721,402,2.515,403,1.368,404,1.721,405,1.721,406,1.123,407,1.721,408,2.363,409,1.721,410,1.721,411,1.721,412,1.585,413,1.585,414,3.282,415,2.317,416,2.515,417,1.868,418,2.148,419,3.013,420,2.317,421,3.013,422,2.515,423,2.515,424,2.793,425,2.515,426,3.545,427,3.013,428,2.515,429,2.515,430,2.515,431,3.013,432,3.348,433,3.27,434,2.317,435,2.515,436,2.515,437,2.515,438,2.317,439,3.013]],["title/classes/Validation.html",[37,0.387,906,2.376]],["body/classes/Validation.html",[3,0.301,4,0.266,5,0.266,7,0.266,8,1.17,14,0.768,16,1.118,17,0.024,18,0.535,19,0.535,20,1.118,27,0.82,29,0.535,36,0.301,37,0.493,42,2.856,43,2.763,49,0.018,50,0.021,79,1.088,80,2.232,81,1.259,191,2.199,251,2.268,399,2.763,680,3.793,870,4.765,906,3.803,1040,4.458,1041,3.793,1042,6.124,1043,5.601,1044,6.124,1045,4.458,1046,6.124,1047,5.601,1048,4.458,1049,4.458,1050,5.601,1051,4.458,1052,4.458,1053,4.458,1054,4.458,1055,4.458,1056,4.458]],["title/components/VerifyPhoneComponent.html",[51,0.265,158,0.777]],["body/components/VerifyPhoneComponent.html",[3,0.147,4,0.13,5,0.13,7,0.13,8,0.704,10,0.4,13,1.769,14,1.019,16,0.544,17,0.024,18,0.496,19,0.668,20,0.544,23,1.786,27,0.62,29,0.691,31,0.304,32,0.613,36,0.228,37,0.24,38,0.845,39,0.613,40,2.181,46,2.189,49,0.011,50,0.011,51,0.313,52,0.513,53,0.952,54,0.65,55,0.65,56,0.65,57,0.65,59,1.313,60,0.65,61,1.984,62,1.299,63,1.009,65,1.009,67,0.661,69,3.504,71,1.395,72,1.15,73,1.886,74,2.746,76,1.663,78,1.099,79,0.897,80,2.106,81,1.166,82,1.237,98,1.847,117,1.347,119,1.071,120,0.65,121,1.009,122,1.009,123,0.65,124,1.315,125,0.65,126,0.65,127,0.482,128,0.65,129,0.482,130,0.65,131,0.513,132,0.65,133,0.482,134,0.65,135,0.482,136,0.65,137,1.237,138,0.513,139,0.65,140,0.482,141,0.613,142,0.65,143,0.513,144,0.65,145,0.482,146,0.65,147,0.482,148,0.65,149,0.513,150,0.65,151,0.482,152,0.4,153,0.482,154,0.578,155,0.65,156,0.482,157,0.65,158,1.035,159,1.598,160,1.305,161,0.65,162,0.65,191,1.071,207,1.071,208,1.241,211,3.747,241,1.071,242,1.474,244,1.474,247,1.474,251,0.879,262,1.634,274,1.347,276,1.347,278,2.091,280,1.347,301,0.879,326,1.474,340,1.48,342,1,355,3.109,365,2.255,367,1.783,369,1.454,383,1.553,392,2.176,393,1.7,395,3.131,396,2.565,398,2.323,400,1.663,403,3.122,406,1.673,415,1.241,442,2.161,474,1.847,477,2.362,483,1.241,544,1.663,588,2.662,592,1.347,593,1.347,595,1.347,596,2.289,609,2.563,614,1.347,615,1.474,617,1.347,618,1.241,619,2.091,621,1.347,624,1.634,626,2.536,630,2.536,632,2.805,633,2.805,635,1.847,642,1.634,645,1.847,694,2.536,701,2.536,792,1.474,793,1.474,798,2.536,815,3.515,816,3.962,841,1.847,868,1.847,895,3.109,905,1.847,908,3.109,914,1.847,946,1.847,1057,4.545,1058,1.634,1059,4.131,1060,3.37,1061,4.131,1062,4.131,1063,3.37,1064,2.171,1065,2.171,1066,2.171,1067,2.171,1068,2.171,1069,2.171,1070,2.171,1071,1.634,1072,1.634,1073,1.634,1074,2.171,1075,2.171,1076,2.171,1077,2.171,1078,4.131,1079,2.171,1080,2.171,1081,2.171,1082,2.171,1083,2.171,1084,2.171,1085,2.171,1086,2.171,1087,2.171,1088,2.171,1089,2.171,1090,3.37,1091,3.37,1092,3.37,1093,2.171,1094,2.171,1095,2.171,1096,2.171,1097,2.171,1098,2.171]],["title/coverage.html",[1099,4.065]],["body/coverage.html",[0,3.006,1,1.846,5,0.162,6,2.313,12,1.846,17,0.023,19,0.326,30,1.8,37,0.301,49,0.013,50,0.013,51,0.513,52,0.642,58,2.313,73,1.101,74,1.341,105,5.354,119,3.59,127,0.604,129,0.604,131,0.642,133,0.604,135,0.604,138,0.943,140,0.604,143,0.642,145,0.604,147,0.604,149,0.943,151,0.604,153,0.604,156,0.604,158,0.604,174,1.687,198,1.846,201,1.846,211,2.479,214,2.479,218,1.846,219,1.846,223,1.687,225,1.846,228,1.687,237,1.846,240,1.846,241,1.341,242,1.846,243,2.046,244,1.846,245,2.046,246,1.846,247,1.846,248,1.687,249,1.846,261,2.313,284,2.313,290,1.554,298,1.44,299,1.687,300,2.046,302,1.44,303,1.846,305,1.554,336,1.741,338,3.006,359,1.687,363,1.253,364,3.179,367,1.173,398,1.253,406,1.101,417,1.253,441,2.313,462,1.44,498,2.313,502,2.046,512,2.313,519,2.313,520,2.313,525,2.313,527,2.313,530,1.846,570,2.313,583,2.313,600,3.006,601,3.239,616,2.046,618,2.984,644,2.313,657,3.564,677,2.046,705,2.313,706,2.313,712,2.313,750,2.313,751,2.313,758,2.313,781,2.313,782,2.313,798,2.046,803,3.564,835,2.046,894,2.313,904,2.046,906,1.846,920,2.313,921,2.313,959,2.046,1014,2.313,1015,2.046,1026,2.313,1030,2.313,1041,2.313,1057,3.006,1058,3.006,1071,2.046,1072,2.046,1073,2.046,1099,2.313,1100,2.719,1101,2.719,1102,2.719,1103,3.995,1104,5.909,1105,7.033,1106,7.033,1107,2.719,1108,6.293,1109,4.736,1110,5.221,1111,3.995,1112,3.995,1113,2.719,1114,2.719,1115,2.719,1116,2.719,1117,5.562,1118,2.719,1119,3.995,1120,2.719,1121,2.719,1122,2.719]],["title/dependencies.html",[166,2.858,1123,2.484]],["body/dependencies.html",[17,0.023,31,0.684,32,1.38,49,0.019,50,0.019,166,3.32,184,4.462,185,4.462,191,2.412,207,2.925,208,2.795,354,2.795,484,3.32,485,3.32,766,3.679,961,4.16,1005,4.16,1006,4.16,1124,4.89,1125,4.16,1126,4.89,1127,5.929,1128,6.991,1129,4.89,1130,5.929,1131,4.89,1132,4.89,1133,4.89,1134,4.89,1135,4.89,1136,4.89,1137,4.89,1138,4.89,1139,4.89,1140,4.89]],["title/miscellaneous/enumerations.html",[1141,1.669,1142,3.58]],["body/miscellaneous/enumerations.html",[7,0.32,17,0.023,49,0.02,50,0.02,82,2.048,408,3.089,503,4.712,1141,3.063,1142,4.559,1143,5.358,1144,5.358,1145,6.261,1146,6.261,1147,6.261]],["title/miscellaneous/functions.html",[1141,1.669,1148,3.58]],["body/miscellaneous/functions.html",[7,0.328,17,0.02,49,0.02,50,0.02,304,1.97,344,2.713,347,3.144,414,2.713,959,4.139,1010,4.68,1015,5.046,1141,3.144,1148,4.68,1149,5.501]],["title/index.html",[7,0.174,1150,2.92,1151,2.92]],["body/index.html",[4,0.25,17,0.017,18,0.504,38,1.052,49,0.017,50,0.017,51,0.451,62,1.057,85,3.157,154,1.584,176,3.157,320,3.157,357,3.66,396,1.933,412,2.398,418,2.223,462,2.223,544,2.07,576,4.516,595,2.603,737,3.57,752,4.585,851,3.57,885,5.065,935,4.727,940,3.57,1011,3.57,1123,3.57,1125,3.57,1152,4.196,1153,5.953,1154,5.389,1155,5.389,1156,4.196,1157,5.953,1158,5.389,1159,4.196,1160,4.196,1161,4.196,1162,4.196,1163,4.196,1164,4.196,1165,6.282,1166,4.196,1167,4.196,1168,6.498,1169,6.763,1170,4.196,1171,4.196,1172,4.196,1173,4.196,1174,4.196,1175,4.196,1176,4.196,1177,5.953,1178,4.196,1179,6.282,1180,4.196,1181,4.196,1182,4.196,1183,5.389,1184,5.389,1185,6.282,1186,4.196,1187,5.389,1188,5.389,1189,4.196,1190,4.196,1191,4.196,1192,4.196,1193,5.389,1194,4.196,1195,4.196,1196,4.196,1197,4.196,1198,4.196,1199,5.953,1200,4.196,1201,4.196,1202,3.157,1203,4.196]],["title/modules.html",[165,2.731]],["body/modules.html",[17,0.02,49,0.02,50,0.02,164,3.725,165,3.136,172,3.404,173,3.404,185,4.128,1204,5.486,1205,5.486,1206,6.699,1207,6.348,1208,6.348]],["title/overview.html",[1202,3.595]],["body/overview.html",[2,3.011,17,0.023,37,0.443,49,0.017,50,0.017,52,1.579,53,1.13,74,2.871,115,2.717,127,1.293,129,1.293,131,1.374,133,1.293,135,1.293,138,1.374,140,1.293,143,1.374,145,1.293,147,1.293,149,1.374,151,1.293,152,0.736,153,1.293,156,1.293,158,1.293,164,5.011,165,2.287,166,3.549,167,3.404,168,3.404,169,3.404,170,3.404,171,3.404,172,3.611,173,3.611,174,3.611,175,4.446,176,3.011,236,2.717,277,2.482,337,1.844,440,2.287,796,2.717,1202,3.011,1209,4.001,1210,4.001,1211,4.001,1212,4.001]],["title/routes.html",[236,3.244]],["body/routes.html",[17,0.021,49,0.021,50,0.021,236,3.858]],["title/miscellaneous/variables.html",[1141,1.669,1213,3.58]],["body/miscellaneous/variables.html",[7,0.199,17,0.023,19,0.861,49,0.015,50,0.015,79,1.145,81,2.006,82,2.128,141,0.94,154,0.886,160,0.965,211,2.067,214,2.866,223,2.067,228,2.067,240,3.137,241,2.279,242,3.137,243,3.476,244,3.137,245,3.476,246,3.137,247,3.137,248,2.866,249,3.137,253,1.468,258,2.507,262,2.507,296,2.067,298,2.447,299,2.866,300,3.476,322,2.507,403,1.643,502,3.476,544,1.643,584,2.834,600,2.507,601,2.866,616,3.476,618,3.719,619,3.553,657,2.507,677,3.476,707,2.834,783,2.834,803,2.507,835,3.476,904,3.476,1057,2.507,1058,3.476,1071,3.476,1072,3.476,1073,3.476,1104,2.834,1141,1.904,1213,2.834,1214,7.104,1215,3.331,1216,3.331,1217,3.331,1218,3.331,1219,3.331,1220,3.331,1221,3.331,1222,3.331,1223,3.331,1224,3.331,1225,3.331,1226,3.331,1227,3.331]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["0.11.4",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["0.9em",{"_index":740,"title":{},"body":{"components/NavComponent.html":{}}}],["0/1",{"_index":1106,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1111,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1112,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1109,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1103,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1113,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["1/1",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":1107,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":387,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["100",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["10px",{"_index":642,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["12.0.0",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["12.2.3",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":1212,"title":{},"body":{"overview.html":{}}}],["13.0.2",{"_index":1128,"title":{},"body":{"dependencies.html":{}}}],["13.0.3",{"_index":1125,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["14.1.0",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":1209,"title":{},"body":{"overview.html":{}}}],["18px",{"_index":1098,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["2",{"_index":277,"title":{},"body":{"components/AuthComponent.html":{},"components/FooterComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":631,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["240px",{"_index":643,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["250px",{"_index":283,"title":{},"body":{"components/AuthComponent.html":{}}}],["255",{"_index":381,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["3",{"_index":796,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"overview.html":{}}}],["3/3",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":282,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["33",{"_index":891,"title":{},"body":{"components/RegisterComponent.html":{}}}],["400",{"_index":548,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["401",{"_index":555,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["403",{"_index":557,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/RegisterComponent.html":{}}}],["404",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"miscellaneous/variables.html":{}}}],["406",{"_index":559,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["409",{"_index":560,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["499px",{"_index":741,"title":{},"body":{"components/NavComponent.html":{}}}],["5",{"_index":436,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["5.0.2",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":893,"title":{},"body":{"components/RegisterComponent.html":{}}}],["500",{"_index":561,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["500px",{"_index":275,"title":{},"body":{"components/AuthComponent.html":{},"components/NavComponent.html":{}}}],["6",{"_index":798,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["6.6.0",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1210,"title":{},"body":{"overview.html":{}}}],["8",{"_index":1211,"title":{},"body":{"overview.html":{}}}],["8/8",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1093,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["abstractcontrol",{"_index":1047,"title":{},"body":{"classes/Validation.html":{}}}],["accept",{"_index":645,"title":{},"body":{"interfaces/JwtTokenDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["access",{"_index":344,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"components/ForbiddenComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"miscellaneous/functions.html":{}}}],["access_token",{"_index":298,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accesstoken",{"_index":296,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interfaces/JwtTokenDto.html":{},"miscellaneous/variables.html":{}}}],["account",{"_index":630,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["activatedroute",{"_index":588,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["activatedroutesnapshot",{"_index":22,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["actual_component",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["add",{"_index":1195,"title":{},"body":{"index.html":{}}}],["address",{"_index":426,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["address1",{"_index":427,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["address2",{"_index":431,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["adminguard",{"_index":1,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["administrator",{"_index":1146,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["align",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["align:center",{"_index":701,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["alloweddomains",{"_index":1023,"title":{},"body":{"modules/SharedModule.html":{}}}],["allowing",{"_index":653,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["along",{"_index":356,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["already",{"_index":884,"title":{},"body":{"components/RegisterComponent.html":{}}}],["angular",{"_index":935,"title":{},"body":{"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"index.html":{}}}],["angular/animations",{"_index":1124,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1126,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":961,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["angular/compiler",{"_index":1129,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1005,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":966,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/card",{"_index":970,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/checkbox",{"_index":974,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/core",{"_index":989,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/datepicker",{"_index":972,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/form",{"_index":976,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/grid",{"_index":978,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/icon",{"_index":981,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/input",{"_index":983,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/list",{"_index":985,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/menu",{"_index":987,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/progress",{"_index":991,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/select",{"_index":994,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/sidenav",{"_index":996,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tabs",{"_index":998,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/toolbar",{"_index":1000,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tooltip",{"_index":1002,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/platform",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":32,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{},"dependencies.html":{}}}],["apartment",{"_index":428,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["api",{"_index":479,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["api/accounts/forgotpassword",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/accounts/login",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/accounts/phoneconfirmation",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/accounts/phoneverification",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/accounts/registration",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/accounts/resetpassword",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/accounts/resetpasswordtoken",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/tokens/refresh",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_confirm_phone",{"_index":1072,"title":{},"body":{"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_forgot_password",{"_index":616,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_login",{"_index":677,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_registration",{"_index":835,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_reset_password",{"_index":904,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_reset_password_token",{"_index":1073,"title":{},"body":{"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_tokens_refresh",{"_index":300,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_verification",{"_index":1071,"title":{},"body":{"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":521,"title":{},"body":{"injectables/EnvironmentUrlService.html":{}}}],["app",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthenticationDto.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["app.component",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["app.constants",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["app.please",{"_index":802,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["appcomponent",{"_index":52,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":164,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":172,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":1180,"title":{},"body":{"index.html":{}}}],["asp.net",{"_index":409,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["assigned",{"_index":407,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["associated",{"_index":401,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["async",{"_index":285,"title":{},"body":{"guards/AuthGuard.html":{}}}],["attempt",{"_index":353,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["attempting",{"_index":362,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["auth",{"_index":262,"title":{},"body":{"components/AuthComponent.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["auth'},{'name",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["auth.component.html",{"_index":264,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":263,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth0/angular",{"_index":485,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["authchanged",{"_index":443,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authchangesubject",{"_index":444,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authcomponent",{"_index":127,"title":{"components/AuthComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authentication",{"_index":347,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/RegistrationResponseDto.html":{},"modules/SharedModule.html":{},"miscellaneous/functions.html":{}}}],["authentication/authentication.service",{"_index":307,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavComponent.html":{}}}],["authenticationdto",{"_index":363,"title":{"interfaces/AuthenticationDto.html":{}},"body":{"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"coverage.html":{}}}],["authenticationservice",{"_index":73,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["authguard",{"_index":237,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authguard,adminguard",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authorizationservice",{"_index":12,"title":{"injectables/AuthorizationService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["authresponsedto",{"_index":305,"title":{"interfaces/AuthResponseDto.html":{}},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/RegistrationResponseDto.html":{},"coverage.html":{}}}],["authservice",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["authservice:authenticationservice",{"_index":728,"title":{},"body":{"components/NavComponent.html":{}}}],["auto",{"_index":278,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["automatically",{"_index":1173,"title":{},"body":{"index.html":{}}}],["available",{"_index":1208,"title":{},"body":{"modules.html":{}}}],["await",{"_index":312,"title":{},"body":{"guards/AuthGuard.html":{}}}],["back",{"_index":650,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["backend",{"_index":378,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["bar",{"_index":992,"title":{},"body":{"modules/SharedModule.html":{}}}],["basicauthenticationservice",{"_index":720,"title":{},"body":{"components/NavComponent.html":{}}}],["baskerville",{"_index":746,"title":{},"body":{"components/NavComponent.html":{}}}],["before",{"_index":1162,"title":{},"body":{"index.html":{}}}],["behaviorsubject",{"_index":1035,"title":{},"body":{"injectables/UrlService.html":{}}}],["behaviorsubject(null",{"_index":1036,"title":{},"body":{"injectables/UrlService.html":{}}}],["beta.34",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":578,"title":{},"body":{"components/FooterComponent.html":{},"components/NavComponent.html":{}}}],["blame",{"_index":937,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["block",{"_index":703,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["body",{"_index":476,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["boolean",{"_index":28,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{}}}],["bootstrap",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["bottom",{"_index":1019,"title":{},"body":{"modules/SharedModule.html":{}}}],["bottom:10px",{"_index":640,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["branch",{"_index":1082,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["break",{"_index":554,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["browse",{"_index":1206,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":964,"title":{},"body":{"modules/SharedModule.html":{}}}],["browseranimationsmodule",{"_index":963,"title":{},"body":{"modules/SharedModule.html":{}}}],["browsermodule",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1179,"title":{},"body":{"index.html":{}}}],["button",{"_index":887,"title":{},"body":{"components/RegisterComponent.html":{}}}],["canactivate",{"_index":9,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":21,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["capabilities",{"_index":1197,"title":{},"body":{"index.html":{}}}],["capable",{"_index":390,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["card",{"_index":633,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["case",{"_index":547,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catch(ex",{"_index":335,"title":{},"body":{"guards/AuthGuard.html":{}}}],["catcherror",{"_index":541,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror(error",{"_index":543,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["caught",{"_index":1161,"title":{},"body":{"index.html":{}}}],["cdk",{"_index":1003,"title":{},"body":{"modules/SharedModule.html":{}}}],["center",{"_index":634,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["change",{"_index":737,"title":{},"body":{"components/NavComponent.html":{},"index.html":{}}}],["changed",{"_index":272,"title":{},"body":{"components/AuthComponent.html":{}}}],["characters",{"_index":382,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["check",{"_index":851,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["checkcontrol",{"_index":1050,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol.errors",{"_index":1052,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol.errors.matching",{"_index":1053,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol.value",{"_index":1055,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrolname",{"_index":1044,"title":{},"body":{"classes/Validation.html":{}}}],["choice",{"_index":1192,"title":{},"body":{"index.html":{}}}],["chrome",{"_index":939,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["church's",{"_index":800,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["church\\'s",{"_index":801,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["city",{"_index":432,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["class",{"_index":37,"title":{"classes/Validation.html":{}},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":1040,"title":{},"body":{"classes/Validation.html":{}}}],["cli",{"_index":1165,"title":{},"body":{"index.html":{}}}],["client",{"_index":1154,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":396,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["codelength",{"_index":1061,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["color",{"_index":747,"title":{},"body":{"components/NavComponent.html":{}}}],["column",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["command",{"_index":1193,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":960,"title":{},"body":{"modules/SharedModule.html":{}}}],["compare",{"_index":872,"title":{},"body":{"components/RegisterComponent.html":{}}}],["complete",{"_index":1090,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["component",{"_index":51,"title":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["components",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"overview.html":{}}}],["config",{"_index":1022,"title":{},"body":{"modules/SharedModule.html":{}}}],["confirm",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["confirmation",{"_index":783,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"miscellaneous/variables.html":{}}}],["confirmation'},{'name",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["confirmation.component",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["confirmation.component.html",{"_index":785,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["confirmation.component.scss",{"_index":784,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["confirmation.component.ts",{"_index":782,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"coverage.html":{}}}],["confirmation.component.ts:11",{"_index":790,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["confirmation.component.ts:12",{"_index":788,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["confirmation.component.ts:16",{"_index":789,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["confirmation/phone",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PhoneConfirmationComponent.html":{},"coverage.html":{}}}],["confirmpassword",{"_index":850,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["confirmphone",{"_index":445,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["congratulations",{"_index":267,"title":{},"body":{"components/AuthComponent.html":{}}}],["console.log(error",{"_index":568,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["console.log(this.validationerrors",{"_index":696,"title":{},"body":{"components/LoginComponent.html":{}}}],["const",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["constructor",{"_index":10,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["constructor(authorizationservice",{"_index":11,"title":{},"body":{"guards/AdminGuard.html":{}}}],["constructor(authservice",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["constructor(http",{"_index":456,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["constructor(private",{"_index":39,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["constructor(public",{"_index":719,"title":{},"body":{"components/NavComponent.html":{}}}],["constructor(router",{"_index":529,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{}}}],["constructor(toastr",{"_index":763,"title":{},"body":{"injectables/NotificationService.html":{}}}],["contact",{"_index":736,"title":{},"body":{"components/NavComponent.html":{}}}],["contain",{"_index":820,"title":{},"body":{"components/RegisterComponent.html":{}}}],["container",{"_index":273,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["content",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/NavComponent.html":{}}}],["control",{"_index":870,"title":{},"body":{"components/RegisterComponent.html":{},"classes/Validation.html":{}}}],["control.value",{"_index":1054,"title":{},"body":{"classes/Validation.html":{}}}],["controller",{"_index":480,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["controlname",{"_index":680,"title":{},"body":{"components/LoginComponent.html":{},"classes/Validation.html":{}}}],["controls",{"_index":1048,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(checkcontrolname",{"_index":1051,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(checkcontrolname)?.seterrors",{"_index":1056,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(controlname",{"_index":1049,"title":{},"body":{"classes/Validation.html":{}}}],["core",{"_index":410,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["core/authentication/authentication.service",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["core/footer/footer.component",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["core/guards",{"_index":1164,"title":{},"body":{"index.html":{}}}],["core/guards/admin.guard",{"_index":239,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/guards/auth.guard",{"_index":238,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/header/nav.component",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["core/interceptors/error.interceptor",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["core/interceptors/error.interceptor.ts",{"_index":1160,"title":{},"body":{"index.html":{}}}],["core/services/url.service",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["correct",{"_index":947,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["coverage",{"_index":1099,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createcompleteroute",{"_index":446,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["currenturl",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["dashboard",{"_index":513,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["dashboard.component.html",{"_index":515,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":514,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":129,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":340,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/NavComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["declarations",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["decodedtoken",{"_index":506,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["decodedtoken[identity_roles",{"_index":509,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["decoration:none",{"_index":749,"title":{},"body":{"components/NavComponent.html":{}}}],["default",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":14,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["dependencies",{"_index":166,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":339,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["dev",{"_index":940,"title":{},"body":{"components/ServerErrorComponent.html":{},"index.html":{}}}],["development",{"_index":1167,"title":{},"body":{"index.html":{}}}],["different",{"_index":598,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["digit",{"_index":388,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["digits",{"_index":437,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["direction",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["directive",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["directives",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1178,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1182,"title":{},"body":{"index.html":{}}}],["disallowedroutes",{"_index":1025,"title":{},"body":{"modules/SharedModule.html":{}}}],["disappear",{"_index":931,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["display",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{}}}],["display:block",{"_index":1095,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["dist",{"_index":1181,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1100,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["driver",{"_index":1147,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dynamic",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1190,"title":{},"body":{"index.html":{}}}],["element",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["email",{"_index":424,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/NavComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["encountered",{"_index":358,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["end",{"_index":576,"title":{},"body":{"components/FooterComponent.html":{},"components/NavComponent.html":{},"components/ServerErrorComponent.html":{},"index.html":{}}}],["ensure",{"_index":374,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["enter",{"_index":626,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["enumerations",{"_index":1142,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["envaddress",{"_index":496,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["envaddress}/${route",{"_index":497,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["environment",{"_index":505,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{}}}],["environment.apiurl",{"_index":523,"title":{},"body":{"injectables/EnvironmentUrlService.html":{}}}],["environmenturlservice",{"_index":290,"title":{"injectables/EnvironmentUrlService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"coverage.html":{}}}],["envurl",{"_index":289,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["error",{"_index":544,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["error'},{'name",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["error.component",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["error.component.html",{"_index":923,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.component.scss",{"_index":922,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.component.ts",{"_index":921,"title":{},"body":{"components/ServerErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:10",{"_index":924,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.component.ts:17",{"_index":925,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.details",{"_index":958,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.error",{"_index":562,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error.message",{"_index":932,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.status",{"_index":546,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/RegisterComponent.html":{}}}],["error.statustext",{"_index":553,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error/server",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ServerErrorComponent.html":{},"coverage.html":{}}}],["errorinterceptor",{"_index":174,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["errorname",{"_index":683,"title":{},"body":{"components/LoginComponent.html":{}}}],["errors",{"_index":357,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/RegistrationResponseDto.html":{},"index.html":{}}}],["errors.join",{"_index":551,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errorsasstring",{"_index":550,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["event",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"injectables/UrlService.html":{}}}],["event.url",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["examine",{"_index":945,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["execute",{"_index":1187,"title":{},"body":{"index.html":{}}}],["expired",{"_index":656,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["export",{"_index":36,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["exports",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["extends",{"_index":348,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["false",{"_index":48,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["family",{"_index":745,"title":{},"body":{"components/NavComponent.html":{}}}],["fb",{"_index":815,"title":{},"body":{"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["fb.group",{"_index":841,"title":{},"body":{"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["field",{"_index":702,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["files",{"_index":1175,"title":{},"body":{"index.html":{}}}],["filter",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["first",{"_index":418,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"index.html":{}}}],["firstname",{"_index":419,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["flag",{"_index":350,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["flex",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/NavComponent.html":{}}}],["flexlayoutmodule",{"_index":1004,"title":{},"body":{"modules/SharedModule.html":{}}}],["following",{"_index":953,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["font",{"_index":636,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/NavComponent.html":{}}}],["footer",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["footer'},{'name",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["footer.component.html",{"_index":572,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":571,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":131,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forbidden",{"_index":584,"title":{},"body":{"components/ForbiddenComponent.html":{},"miscellaneous/variables.html":{}}}],["forbidden'},{'name",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["forbidden.component.html",{"_index":586,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["forbidden.component.scss",{"_index":585,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["forbiddencomponent",{"_index":133,"title":{"components/ForbiddenComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgot",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["forgotpassword",{"_index":447,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["forgotpasswordcomponent",{"_index":135,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgotpasswordform",{"_index":604,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotpasswordform.phone",{"_index":622,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["form",{"_index":699,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formatted",{"_index":422,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["formattedphone",{"_index":786,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["formbuilder",{"_index":816,"title":{},"body":{"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["formcontrol",{"_index":613,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["formgroup",{"_index":609,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["formgroup.get('confirmpassword')?.seterrors",{"_index":874,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formgroup.get('confirmpassword')?.value",{"_index":871,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formgroup.get('password')?.value",{"_index":869,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["formvalue",{"_index":913,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["formvalue.password",{"_index":915,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["formvalues",{"_index":855,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.address1.trim",{"_index":862,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.address2",{"_index":863,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.address2.trim",{"_index":864,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.city.trim",{"_index":865,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.email",{"_index":860,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.email.trim",{"_index":861,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.firstname.trim",{"_index":858,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.lastname.trim",{"_index":859,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.password",{"_index":856,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.phonenumber",{"_index":857,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.zipcode.trim",{"_index":866,"title":{},"body":{"components/RegisterComponent.html":{}}}],["forth",{"_index":651,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["found",{"_index":752,"title":{},"body":{"components/NotFoundComponent.html":{},"index.html":{}}}],["found'},{'name",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["found.component",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.html",{"_index":754,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":753,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":751,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":756,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":755,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["front",{"_index":952,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["full",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":1014,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{}}}],["functions",{"_index":1148,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1198,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1177,"title":{},"body":{"index.html":{}}}],["generated",{"_index":412,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"index.html":{}}}],["getemailerror",{"_index":811,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getfirstnameerror",{"_index":812,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getlastnameerror",{"_index":813,"title":{},"body":{"components/RegisterComponent.html":{}}}],["gets",{"_index":1010,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/functions.html":{}}}],["getting",{"_index":1150,"title":{"index.html":{}},"body":{}}],["go",{"_index":1201,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1207,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["guard",{"_index":0,"title":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"overview.html":{}}}],["half",{"_index":892,"title":{},"body":{"components/RegisterComponent.html":{}}}],["handling",{"_index":1157,"title":{},"body":{"index.html":{}}}],["haserror",{"_index":661,"title":{},"body":{"components/LoginComponent.html":{}}}],["hashed",{"_index":371,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["hashing",{"_index":375,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["header",{"_index":635,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["height",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["height:auto",{"_index":582,"title":{},"body":{"components/FooterComponent.html":{}}}],["help",{"_index":1199,"title":{},"body":{"index.html":{}}}],["hide",{"_index":605,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["hide=true",{"_index":836,"title":{},"body":{"components/RegisterComponent.html":{}}}],["hideconfirm",{"_index":806,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["hideconfirm=true",{"_index":837,"title":{},"body":{"components/RegisterComponent.html":{}}}],["history.state.data",{"_index":792,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["home",{"_index":757,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["html",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["http",{"_index":287,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["http://localhost:4200",{"_index":1172,"title":{},"body":{"index.html":{}}}],["http://schemas.microsoft.com/ws/2008/06/identity/claims/role",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":288,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["httpclientmodule",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":536,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httphandler",{"_index":534,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpinterceptor",{"_index":537,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httprequest",{"_index":533,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["iconfig",{"_index":615,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["identifier",{"_index":1101,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":411,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["identity_roles",{"_index":502,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["if(!accesstoken",{"_index":324,"title":{},"body":{"guards/AuthGuard.html":{}}}],["img",{"_index":580,"title":{},"body":{"components/FooterComponent.html":{}}}],["implements",{"_index":38,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["import",{"_index":29,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["imports",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["information",{"_index":415,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["injectable",{"_index":30,"title":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"injectables/NotificationService.html":{},"injectables/UrlService.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"injectables/UrlService.html":{},"coverage.html":{}}}],["injectables",{"_index":440,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"injectables/NotificationService.html":{},"injectables/UrlService.html":{},"overview.html":{}}}],["inspet",{"_index":942,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["instanceof",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["intercept",{"_index":528,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["intercept(request",{"_index":532,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptor",{"_index":525,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":526,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interface",{"_index":336,"title":{"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"coverage.html":{}}}],["interfaces",{"_index":337,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"overview.html":{}}}],["internal",{"_index":930,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["investigation",{"_index":956,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["isauthenticated:boolean",{"_index":490,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isauthsuccessful",{"_index":349,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["isrefreshsuccess",{"_index":311,"title":{},"body":{"guards/AuthGuard.html":{}}}],["issuccessfulregistration",{"_index":360,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["issue",{"_index":270,"title":{},"body":{"components/AuthComponent.html":{},"components/ServerErrorComponent.html":{}}}],["isuniqueemail",{"_index":807,"title":{},"body":{"components/RegisterComponent.html":{}}}],["isuniqueemail=true",{"_index":839,"title":{},"body":{"components/RegisterComponent.html":{}}}],["isuseradmin",{"_index":499,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["isuserauthenticated",{"_index":448,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/NavComponent.html":{}}}],["isuserauthenticated:boolean",{"_index":718,"title":{},"body":{"components/NavComponent.html":{}}}],["items",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["jacob",{"_index":733,"title":{},"body":{"components/NavComponent.html":{}}}],["justify",{"_index":575,"title":{},"body":{"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/NavComponent.html":{}}}],["jwt",{"_index":354,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interfaces/RegistrationResponseDto.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["jwthelper",{"_index":457,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["jwthelperservice",{"_index":458,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["jwtmodule",{"_index":1009,"title":{},"body":{"modules/SharedModule.html":{}}}],["jwtmodule.forroot",{"_index":1021,"title":{},"body":{"modules/SharedModule.html":{}}}],["jwttoken",{"_index":325,"title":{},"body":{"guards/AuthGuard.html":{}}}],["jwttoken).topromise",{"_index":328,"title":{},"body":{"guards/AuthGuard.html":{}}}],["jwttokendto",{"_index":302,"title":{"interfaces/JwtTokenDto.html":{}},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/RegistrationResponseDto.html":{},"coverage.html":{}}}],["karma",{"_index":1189,"title":{},"body":{"index.html":{}}}],["large",{"_index":638,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["last",{"_index":420,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["lastname",{"_index":421,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["layout",{"_index":1006,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["leaving",{"_index":1163,"title":{},"body":{"index.html":{}}}],["legend",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["length",{"_index":380,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["letter",{"_index":1096,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["letters",{"_index":821,"title":{},"body":{"components/RegisterComponent.html":{}}}],["list",{"_index":979,"title":{},"body":{"modules/SharedModule.html":{}}}],["lived",{"_index":648,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["local",{"_index":1012,"title":{},"body":{"modules/SharedModule.html":{}}}],["localhost:5001",{"_index":1024,"title":{},"body":{"modules/SharedModule.html":{}}}],["localstorage.getitem(access_token",{"_index":310,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"modules/SharedModule.html":{}}}],["localstorage.getitem(refresh_token",{"_index":323,"title":{},"body":{"guards/AuthGuard.html":{}}}],["localstorage.removeitem(access_token",{"_index":487,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.removeitem(refresh_token",{"_index":488,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem(access_token",{"_index":333,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["localstorage.setitem(refresh_token",{"_index":334,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["log",{"_index":597,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/UpdatedPasswordComponent.html":{}}}],["logic",{"_index":1158,"title":{},"body":{"index.html":{}}}],["login",{"_index":658,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["login.component.html",{"_index":660,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":659,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.password",{"_index":688,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.username",{"_index":687,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":138,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":662,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginformvalue",{"_index":685,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginuser",{"_index":449,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{}}}],["logo",{"_index":744,"title":{},"body":{"components/NavComponent.html":{}}}],["logout",{"_index":450,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/NavComponent.html":{}}}],["long",{"_index":438,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["mail",{"_index":883,"title":{},"body":{"components/RegisterComponent.html":{}}}],["main",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["make",{"_index":627,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ServerErrorComponent.html":{}}}],["manage",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["managetemplatescomponent",{"_index":140,"title":{"components/ManageTemplatesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["margin",{"_index":276,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["margin:5",{"_index":1094,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["mask",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{},"dependencies.html":{}}}],["mat",{"_index":632,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["matbuttonmodule",{"_index":965,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbuttontogglemodule",{"_index":967,"title":{},"body":{"modules/SharedModule.html":{}}}],["matcardmodule",{"_index":969,"title":{},"body":{"modules/SharedModule.html":{}}}],["match",{"_index":399,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{}}}],["match(controlname",{"_index":1043,"title":{},"body":{"classes/Validation.html":{}}}],["matcheckboxmodule",{"_index":973,"title":{},"body":{"modules/SharedModule.html":{}}}],["matching",{"_index":50,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":971,"title":{},"body":{"modules/SharedModule.html":{}}}],["material",{"_index":962,"title":{},"body":{"modules/SharedModule.html":{}}}],["matformfieldmodule",{"_index":975,"title":{},"body":{"modules/SharedModule.html":{}}}],["matgridlistmodule",{"_index":977,"title":{},"body":{"modules/SharedModule.html":{}}}],["maticonmodule",{"_index":980,"title":{},"body":{"modules/SharedModule.html":{}}}],["matinputmodule",{"_index":982,"title":{},"body":{"modules/SharedModule.html":{}}}],["matlistmodule",{"_index":984,"title":{},"body":{"modules/SharedModule.html":{}}}],["matmenumodule",{"_index":986,"title":{},"body":{"modules/SharedModule.html":{}}}],["matnativedatemodule",{"_index":988,"title":{},"body":{"modules/SharedModule.html":{}}}],["matprogressbarmodule",{"_index":990,"title":{},"body":{"modules/SharedModule.html":{}}}],["matselectmodule",{"_index":993,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsidenavmodule",{"_index":995,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattabsmodule",{"_index":997,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattoolbarmodule",{"_index":999,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattooltipmodule",{"_index":1001,"title":{},"body":{"modules/SharedModule.html":{}}}],["max",{"_index":280,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["maximum",{"_index":379,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["media",{"_index":279,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{}}}],["menu",{"_index":738,"title":{},"body":{"components/NavComponent.html":{}}}],["message",{"_index":772,"title":{},"body":{"injectables/NotificationService.html":{}}}],["messages",{"_index":769,"title":{},"body":{"injectables/NotificationService.html":{}}}],["metadata",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["methods",{"_index":8,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["min",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["miscellaneous",{"_index":1141,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":163,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}},"body":{}}],["modules",{"_index":165,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/account/auth/auth.component",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/account/auth/login/login.component",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/account/auth/register/register.component",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/account/password/forgot",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/account/password/reset",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/account/password/updated",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/account/phone/phone",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/account/phone/verify",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/church",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/dashboard/pages/dashboard/dashboard.component",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/errors/pages/forbidden/forbidden.component",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/errors/pages/not",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/errors/pages/server",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["more",{"_index":1200,"title":{},"body":{"index.html":{}}}],["multi",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":18,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["nav",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["nav'},{'name",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["nav.component.html",{"_index":714,"title":{},"body":{"components/NavComponent.html":{}}}],["nav.component.scss",{"_index":713,"title":{},"body":{"components/NavComponent.html":{}}}],["navbar",{"_index":739,"title":{},"body":{"components/NavComponent.html":{}}}],["navcomponent",{"_index":143,"title":{"components/NavComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":1171,"title":{},"body":{"index.html":{}}}],["navigatetologin",{"_index":587,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["navigation",{"_index":926,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["navigation?.extras?.state?.error",{"_index":929,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["navigationend",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"injectables/UrlService.html":{}}}],["navigationextras",{"_index":540,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["need",{"_index":1194,"title":{},"body":{"index.html":{}}}],["network",{"_index":943,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["new",{"_index":462,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UrlService.html":{},"coverage.html":{},"index.html":{}}}],["newrefreshtoken",{"_index":331,"title":{},"body":{"guards/AuthGuard.html":{}}}],["newtoken",{"_index":329,"title":{},"body":{"guards/AuthGuard.html":{}}}],["next",{"_index":26,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/ServerErrorComponent.html":{}}}],["next.handle(request).pipe",{"_index":542,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":1169,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["ngoninit",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["ngx",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/VerifyPhoneComponent.html":{},"dependencies.html":{}}}],["ngxmaskmodule",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxmaskmodule.forroot",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["non",{"_index":370,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["none",{"_index":743,"title":{},"body":{"components/NavComponent.html":{}}}],["nopasswordmatch",{"_index":875,"title":{},"body":{"components/RegisterComponent.html":{}}}],["not_found",{"_index":240,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["note",{"_index":933,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["notfoundcomponent",{"_index":145,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notifications",{"_index":1007,"title":{},"body":{"modules/SharedModule.html":{}}}],["notificationservice",{"_index":530,"title":{"injectables/NotificationService.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/NotificationService.html":{},"coverage.html":{}}}],["null",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthorizationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["number",{"_index":365,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["object",{"_index":342,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["object.values(error.error",{"_index":549,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["observable",{"_index":494,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/UrlService.html":{}}}],["ocurred",{"_index":882,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["one",{"_index":889,"title":{},"body":{"components/RegisterComponent.html":{}}}],["oninit",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["open",{"_index":938,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["optional",{"_index":20,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["options",{"_index":618,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":402,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["out",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1202,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owner",{"_index":629,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["package",{"_index":1123,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":579,"title":{},"body":{"components/FooterComponent.html":{},"components/NavComponent.html":{}}}],["page",{"_index":595,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/NotFoundComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["pair",{"_index":397,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["param",{"_index":493,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["parameters",{"_index":16,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["partial",{"_index":619,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["pass",{"_index":343,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["passed",{"_index":649,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["password",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/UpdatedPasswordComponent.html":{},"interfaces/UserForRegistrationDto.html":{},"miscellaneous/variables.html":{}}}],["password'},{'name",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["password.component",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["password.component.html",{"_index":603,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatedPasswordComponent.html":{}}}],["password.component.scss",{"_index":602,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatedPasswordComponent.html":{}}}],["password.component.ts",{"_index":601,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatedPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["password.component.ts:11",{"_index":1027,"title":{},"body":{"components/UpdatedPasswordComponent.html":{}}}],["password.component.ts:15",{"_index":1028,"title":{},"body":{"components/UpdatedPasswordComponent.html":{}}}],["password.component.ts:16",{"_index":901,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":610,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:18",{"_index":611,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:19",{"_index":607,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:20",{"_index":900,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:21",{"_index":899,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:22",{"_index":902,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:23",{"_index":897,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":608,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:29",{"_index":898,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:33",{"_index":612,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:48",{"_index":903,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/forgot",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["password/reset",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["password/updated",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/UpdatedPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordmatchvalidator",{"_index":814,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwordmatchvalidator(formgroup",{"_index":824,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwordminlength",{"_index":808,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwords",{"_index":873,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["path",{"_index":252,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":475,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["persisting",{"_index":654,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["phone",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthenticationDto.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["phone.component",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["phone.component.html",{"_index":1060,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.scss",{"_index":1059,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts",{"_index":1058,"title":{},"body":{"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["phone.component.ts:18",{"_index":1070,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:19",{"_index":1066,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:20",{"_index":1067,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:21",{"_index":1068,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:22",{"_index":1069,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:23",{"_index":1063,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:36",{"_index":1064,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:50",{"_index":1065,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone/verify",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["phoneconfirmationcomponent",{"_index":147,"title":{"components/PhoneConfirmationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["phonenumber",{"_index":392,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["phonenumberdto",{"_index":367,"title":{"interfaces/PhoneNumberDto.html":{}},"body":{"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["phoneverificationdto",{"_index":398,"title":{"interfaces/PhoneVerificationDto.html":{}},"body":{"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["place",{"_index":377,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["plain",{"_index":368,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["platform",{"_index":1191,"title":{},"body":{"index.html":{}}}],["please",{"_index":596,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["portion",{"_index":433,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["positionclass",{"_index":1017,"title":{},"body":{"modules/SharedModule.html":{}}}],["postman",{"_index":949,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["previous",{"_index":1084,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["previousnavigationdata",{"_index":895,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["previousurl",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["private",{"_index":40,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["probably",{"_index":936,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["project",{"_index":1153,"title":{},"body":{"index.html":{}}}],["promise",{"_index":297,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properties",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["property",{"_index":1077,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["provide",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":34,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"injectables/NotificationService.html":{},"injectables/UrlService.html":{}}}],["providedin:'root",{"_index":678,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["providers",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":442,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["queryparams",{"_index":45,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/ForbiddenComponent.html":{}}}],["reactiveformsmodule",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["receive",{"_index":385,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["receives",{"_index":478,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["receiving",{"_index":405,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["recording",{"_index":351,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["records",{"_index":361,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["redirectto",{"_index":254,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1203,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":321,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["refresh_token",{"_index":299,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refreshauthentication",{"_index":451,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["refreshing",{"_index":318,"title":{},"body":{"guards/AuthGuard.html":{},"components/ServerErrorComponent.html":{}}}],["refreshtoken",{"_index":322,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/JwtTokenDto.html":{},"miscellaneous/variables.html":{}}}],["register",{"_index":735,"title":{},"body":{"components/NavComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["register.component.html",{"_index":805,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":804,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":149,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":269,"title":{},"body":{"components/AuthComponent.html":{},"components/PhoneConfirmationComponent.html":{}}}],["registerform",{"_index":809,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerformvalue",{"_index":854,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registering",{"_index":416,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["registeruser",{"_index":452,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registration",{"_index":355,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["registrationresponsedto",{"_index":359,"title":{"interfaces/RegistrationResponseDto.html":{}},"body":{"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/RegistrationResponseDto.html":{},"coverage.html":{}}}],["reload",{"_index":1174,"title":{},"body":{"index.html":{}}}],["renewed",{"_index":655,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["represent",{"_index":495,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["representing",{"_index":372,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["represents",{"_index":646,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["reproduce",{"_index":948,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["request",{"_index":366,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interceptors/ErrorInterceptor.html":{},"components/ServerErrorComponent.html":{}}}],["requested",{"_index":599,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["required",{"_index":383,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["reset",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"overview.html":{}}}],["reset.please",{"_index":1029,"title":{},"body":{"components/UpdatedPasswordComponent.html":{}}}],["resetpassword",{"_index":453,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["resetpasswordcomponent",{"_index":151,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetpassworddto",{"_index":406,"title":{"interfaces/ResetPasswordDto.html":{}},"body":{"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["resetpassworddto.phonenumber",{"_index":919,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordform",{"_index":896,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordformvalue",{"_index":912,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordtoken",{"_index":454,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["resetting",{"_index":271,"title":{},"body":{"components/AuthComponent.html":{}}}],["response",{"_index":326,"title":{},"body":{"guards/AuthGuard.html":{},"components/RegisterComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["response.accesstoken",{"_index":330,"title":{},"body":{"guards/AuthGuard.html":{}}}],["response.refreshtoken",{"_index":332,"title":{},"body":{"guards/AuthGuard.html":{}}}],["result",{"_index":731,"title":{},"body":{"components/NavComponent.html":{}}}],["result.accesstoken",{"_index":691,"title":{},"body":{"components/LoginComponent.html":{}}}],["result.refreshtoken",{"_index":692,"title":{},"body":{"components/LoginComponent.html":{}}}],["results",{"_index":49,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":42,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"classes/Validation.html":{}}}],["returned",{"_index":1159,"title":{},"body":{"index.html":{}}}],["returns",{"_index":27,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["returnurl",{"_index":46,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["right",{"_index":1020,"title":{},"body":{"modules/SharedModule.html":{}}}],["rock",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/PhoneConfirmationComponent.html":{}}}],["rock's",{"_index":1156,"title":{},"body":{"index.html":{}}}],["role",{"_index":508,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/NavComponent.html":{}}}],["roles",{"_index":503,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/RegisterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["roles.administrator",{"_index":510,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["roles.superadmin",{"_index":511,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["root",{"_index":35,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"injectables/NotificationService.html":{},"injectables/UrlService.html":{}}}],["root'},{'name",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["route",{"_index":477,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["router",{"_index":13,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["routermodule",{"_index":235,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":24,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["routes",{"_index":236,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":234,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing_auth",{"_index":241,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/PhoneConfirmationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing_confirm_phone",{"_index":242,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing_forbidden",{"_index":243,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing_forgot_password",{"_index":244,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing_manage_templates",{"_index":245,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing_reset_password",{"_index":247,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing_updated_password",{"_index":246,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing_verify_phone",{"_index":248,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":1168,"title":{},"body":{"index.html":{}}}],["running",{"_index":1183,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":484,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/UrlService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["same",{"_index":951,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scaffolding",{"_index":1176,"title":{},"body":{"index.html":{}}}],["secondary",{"_index":430,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["security",{"_index":373,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["see",{"_index":950,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["seeing",{"_index":934,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["selector",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["send",{"_index":384,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["sendauthstatechangenotification",{"_index":455,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sending",{"_index":404,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["sends",{"_index":474,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/VerifyPhoneComponent.html":{}}}],["sent",{"_index":400,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["serve",{"_index":1170,"title":{},"body":{"index.html":{}}}],["server",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["server_error",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["servererrorcomponent",{"_index":153,"title":{"components/ServerErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["services/authorization.service",{"_index":33,"title":{},"body":{"guards/AdminGuard.html":{}}}],["services/environment",{"_index":308,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{}}}],["services/manage",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ManageTemplatesComponent.html":{},"coverage.html":{}}}],["services/notification.service",{"_index":539,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["set",{"_index":1081,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["setpreviousurl",{"_index":1031,"title":{},"body":{"injectables/UrlService.html":{}}}],["setpreviousurl(previousurl",{"_index":1033,"title":{},"body":{"injectables/UrlService.html":{}}}],["shared/shared.module",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":173,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["short",{"_index":647,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["show",{"_index":742,"title":{},"body":{"components/NavComponent.html":{}}}],["showerror",{"_index":759,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showerror(messages",{"_index":767,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showinfo",{"_index":760,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showinfo(message",{"_index":770,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showsuccess",{"_index":761,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showsuccess(message",{"_index":773,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showwarning",{"_index":762,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showwarning(message",{"_index":775,"title":{},"body":{"injectables/NotificationService.html":{}}}],["shrink",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["side",{"_index":1155,"title":{},"body":{"index.html":{}}}],["size",{"_index":637,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/NavComponent.html":{}}}],["sms",{"_index":391,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["sometext@moretext.tld",{"_index":423,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["space",{"_index":577,"title":{},"body":{"components/FooterComponent.html":{},"components/NavComponent.html":{}}}],["spacing",{"_index":1097,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["src/.../app.constants.ts",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../forgot",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../login.component.ts",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../register.component.ts",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.ts",{"_index":1143,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../shared.module.ts",{"_index":1149,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../verify",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":233,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.constants",{"_index":301,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["src/app/app.constants.ts",{"_index":1104,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.module.ts",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/authentication/authentication.service",{"_index":617,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["src/app/core/authentication/authentication.service.ts",{"_index":441,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/core/authentication/authentication.service.ts:14",{"_index":459,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:20",{"_index":464,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:21",{"_index":461,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:23",{"_index":472,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:27",{"_index":469,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:31",{"_index":470,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:37",{"_index":482,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:41",{"_index":468,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:47",{"_index":471,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:51",{"_index":465,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:55",{"_index":481,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:59",{"_index":467,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:69",{"_index":473,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:73",{"_index":466,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/footer/footer.component.ts",{"_index":570,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/core/footer/footer.component.ts:12",{"_index":574,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/core/footer/footer.component.ts:8",{"_index":573,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/core/guards/admin.guard.ts",{"_index":6,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/admin.guard.ts:12",{"_index":25,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/admin.guard.ts:8",{"_index":15,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":284,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/auth.guard.ts:13",{"_index":291,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:20",{"_index":292,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:37",{"_index":295,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/header/nav.component.ts",{"_index":712,"title":{},"body":{"components/NavComponent.html":{},"coverage.html":{}}}],["src/app/core/header/nav.component.ts:11",{"_index":715,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/core/header/nav.component.ts:32",{"_index":716,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/core/header/nav.component.ts:39",{"_index":717,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/core/interceptors/error.interceptor.ts",{"_index":527,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/core/interceptors/error.interceptor.ts:15",{"_index":531,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/core/interceptors/error.interceptor.ts:20",{"_index":535,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/core/services/authorization.service.ts",{"_index":498,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["src/app/core/services/authorization.service.ts:11",{"_index":500,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/core/services/authorization.service.ts:17",{"_index":501,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/core/services/environment",{"_index":519,"title":{},"body":{"injectables/EnvironmentUrlService.html":{},"coverage.html":{}}}],["src/app/core/services/notification.service.ts",{"_index":758,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/core/services/notification.service.ts:11",{"_index":774,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:15",{"_index":768,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:20",{"_index":771,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:24",{"_index":776,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:7",{"_index":765,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/url.service",{"_index":905,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["src/app/core/services/url.service.ts",{"_index":1030,"title":{},"body":{"injectables/UrlService.html":{},"coverage.html":{}}}],["src/app/core/services/url.service.ts:10",{"_index":1032,"title":{},"body":{"injectables/UrlService.html":{}}}],["src/app/core/services/url.service.ts:14",{"_index":1034,"title":{},"body":{"injectables/UrlService.html":{}}}],["src/app/core/services/url.service.ts:9",{"_index":1037,"title":{},"body":{"injectables/UrlService.html":{}}}],["src/app/modules/account/auth/auth.component.ts",{"_index":261,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/modules/account/auth/auth.component.ts:12",{"_index":266,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/modules/account/auth/auth.component.ts:8",{"_index":265,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts",{"_index":657,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:20",{"_index":671,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:21",{"_index":674,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:22",{"_index":673,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:23",{"_index":670,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:24",{"_index":676,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:25",{"_index":668,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:26",{"_index":666,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:32",{"_index":667,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:40",{"_index":675,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:43",{"_index":669,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:47",{"_index":672,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts",{"_index":803,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:103",{"_index":822,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:21",{"_index":832,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:22",{"_index":834,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:23",{"_index":829,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:24",{"_index":826,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:25",{"_index":827,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:26",{"_index":833,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:27",{"_index":828,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:28",{"_index":830,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:29",{"_index":817,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:51",{"_index":823,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:54",{"_index":831,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:80",{"_index":825,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:89",{"_index":818,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:96",{"_index":819,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/password/forgot",{"_index":600,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/account/password/reset",{"_index":894,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/modules/account/password/updated",{"_index":1026,"title":{},"body":{"components/UpdatedPasswordComponent.html":{},"coverage.html":{}}}],["src/app/modules/account/phone/phone",{"_index":781,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"coverage.html":{}}}],["src/app/modules/account/phone/verify",{"_index":1057,"title":{},"body":{"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/church",{"_index":705,"title":{},"body":{"components/ManageTemplatesComponent.html":{},"coverage.html":{}}}],["src/app/modules/dashboard/pages/dashboard/dashboard.component.ts",{"_index":512,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/modules/dashboard/pages/dashboard/dashboard.component.ts:12",{"_index":517,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/modules/dashboard/pages/dashboard/dashboard.component.ts:8",{"_index":516,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/modules/errors/pages/forbidden/forbidden.component.ts",{"_index":583,"title":{},"body":{"components/ForbiddenComponent.html":{},"coverage.html":{}}}],["src/app/modules/errors/pages/forbidden/forbidden.component.ts:11",{"_index":589,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["src/app/modules/errors/pages/forbidden/forbidden.component.ts:15",{"_index":590,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["src/app/modules/errors/pages/forbidden/forbidden.component.ts:19",{"_index":591,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["src/app/modules/errors/pages/not",{"_index":750,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/modules/errors/pages/server",{"_index":920,"title":{},"body":{"components/ServerErrorComponent.html":{},"coverage.html":{}}}],["src/app/shared/directives/validation",{"_index":907,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["src/app/shared/directives/validation.ts",{"_index":1041,"title":{},"body":{"classes/Validation.html":{},"coverage.html":{}}}],["src/app/shared/directives/validation.ts:4",{"_index":1045,"title":{},"body":{"classes/Validation.html":{}}}],["src/app/shared/models/account",{"_index":483,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["src/app/shared/models/account.ts",{"_index":364,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"coverage.html":{}}}],["src/app/shared/models/jwt",{"_index":303,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/JwtTokenDto.html":{},"coverage.html":{}}}],["src/app/shared/models/response",{"_index":306,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{}}}],["src/app/shared/models/response.ts",{"_index":338,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{},"coverage.html":{}}}],["src/app/shared/models/roles",{"_index":504,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/RegisterComponent.html":{}}}],["src/app/shared/models/roles.ts",{"_index":1144,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/shared.module.ts",{"_index":959,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/environments/environment",{"_index":524,"title":{},"body":{"injectables/EnvironmentUrlService.html":{}}}],["stack",{"_index":954,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["start",{"_index":957,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["started",{"_index":1151,"title":{"index.html":{}},"body":{}}],["state",{"_index":23,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["state.url",{"_index":47,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["statements",{"_index":1102,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1042,"title":{},"body":{"classes/Validation.html":{}}}],["storage",{"_index":1013,"title":{},"body":{"modules/SharedModule.html":{}}}],["storageservice",{"_index":721,"title":{},"body":{"components/NavComponent.html":{}}}],["stored",{"_index":1011,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["street",{"_index":425,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["stretch",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["strictly",{"_index":386,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["string",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["styleurls",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["subject",{"_index":463,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["submit",{"_index":606,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["submitted",{"_index":810,"title":{},"body":{"components/RegisterComponent.html":{}}}],["submitted=false",{"_index":838,"title":{},"body":{"components/RegisterComponent.html":{}}}],["subscribe",{"_index":624,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["subscribe((event:event",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(response",{"_index":868,"title":{},"body":{"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["subscribe(result",{"_index":690,"title":{},"body":{"components/LoginComponent.html":{},"components/NavComponent.html":{}}}],["subtitle",{"_index":641,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["successful",{"_index":346,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["successfully",{"_index":268,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthenticationDto.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"components/UpdatedPasswordComponent.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["suite",{"_index":429,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["superadmin",{"_index":1145,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["support",{"_index":1204,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":628,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ServerErrorComponent.html":{}}}],["svg",{"_index":1205,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":545,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["tab",{"_index":944,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["table",{"_index":1122,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":376,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["template",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["templates",{"_index":707,"title":{},"body":{"components/ManageTemplatesComponent.html":{},"miscellaneous/variables.html":{}}}],["templates'},{'name",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["templates.component",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["templates.component.html",{"_index":709,"title":{},"body":{"components/ManageTemplatesComponent.html":{}}}],["templates.component.scss",{"_index":708,"title":{},"body":{"components/ManageTemplatesComponent.html":{}}}],["templates.component.ts",{"_index":706,"title":{},"body":{"components/ManageTemplatesComponent.html":{},"coverage.html":{}}}],["templates.component.ts:12",{"_index":711,"title":{},"body":{"components/ManageTemplatesComponent.html":{}}}],["templates.component.ts:8",{"_index":710,"title":{},"body":{"components/ManageTemplatesComponent.html":{}}}],["templates/manage",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ManageTemplatesComponent.html":{},"coverage.html":{}}}],["templateurl",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["test",{"_index":1186,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1196,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1185,"title":{},"body":{"index.html":{}}}],["text",{"_index":369,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["thereby",{"_index":652,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["third",{"_index":890,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authchangesubject.asobservable",{"_index":460,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authchangesubject.next(isauthenticated",{"_index":491,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authorizationservice.isuseradmin",{"_index":41,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.authservice.authchanged",{"_index":729,"title":{},"body":{"components/NavComponent.html":{}}}],["this.authservice.confirmphone(api_confirm_phone",{"_index":1085,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.authservice.forgotpassword(api_forgot_password",{"_index":623,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.authservice.isuserauthenticated",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{}}}],["this.authservice.loginuser(api_login",{"_index":689,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":732,"title":{},"body":{"components/NavComponent.html":{}}}],["this.authservice.refreshauthentication(api_tokens_refresh",{"_index":327,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.registeruser(api_registration",{"_index":867,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.resetpassword(api_reset_password",{"_index":917,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authservice.resetpasswordtoken(api_reset_password_token",{"_index":1088,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.authservice.sendauthstatechangenotification(false",{"_index":314,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.sendauthstatechangenotification(isrefreshsuccess",{"_index":316,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.sendauthstatechangenotification(result.isauthsuccessful",{"_index":693,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.sendauthstatechangenotification(true",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currenturl",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["this.error",{"_index":928,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["this.forgotpasswordform",{"_index":620,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.formattedphone",{"_index":794,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["this.http.post(this.createcompleteroute(this.envurl.apiurl",{"_index":486,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.isuserauthenticated",{"_index":730,"title":{},"body":{"components/NavComponent.html":{}}}],["this.jwthelper.decodetoken(accesstoken",{"_index":507,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.jwthelper.istokenexpired(accesstoken",{"_index":492,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.loginform",{"_index":679,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls[controlname].haserror(errorname",{"_index":684,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls[controlname].invalid",{"_index":681,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls[controlname].touched",{"_index":682,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.name",{"_index":725,"title":{},"body":{"components/NavComponent.html":{}}}],["this.notificationservice.showerror(\"something",{"_index":564,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.notificationservice.showerror(error.error",{"_index":556,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.notificationservice.showerror(errorsasstring",{"_index":552,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.passwordmatchvalidator",{"_index":853,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.phonenumber",{"_index":1078,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.previousnavigationdata",{"_index":908,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.previousnavigationdata?.phonenumber",{"_index":914,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.previousnavigationdata?.token",{"_index":916,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.previousurl",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.previousurl.asobservable",{"_index":1038,"title":{},"body":{"injectables/UrlService.html":{}}}],["this.previousurl.next(previousurl",{"_index":1039,"title":{},"body":{"injectables/UrlService.html":{}}}],["this.previousurl?.includes(routing_auth",{"_index":1083,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.previousurl?.includes(routing_forgot_password",{"_index":1087,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.registerform",{"_index":840,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['email'].haserror('email",{"_index":877,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['email'].haserror('required",{"_index":876,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['firstname'].haserror('pattern",{"_index":879,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['firstname'].haserror('required",{"_index":878,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['lastname'].haserror('pattern",{"_index":881,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['lastname'].haserror('required",{"_index":880,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.resetpasswordform",{"_index":909,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.returnurl",{"_index":592,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.role",{"_index":727,"title":{},"body":{"components/NavComponent.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":593,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.router.events",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.getcurrentnavigation",{"_index":927,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["this.router.navigate",{"_index":793,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.router.navigate(['/auth",{"_index":594,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/NavComponent.html":{}}}],["this.router.navigate(['/forbidden",{"_index":44,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.router.navigate([routing_auth",{"_index":315,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate([routing_confirm_phone",{"_index":1086,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.router.navigate([routing_reset_password",{"_index":1089,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.router.navigate([routing_updated_password",{"_index":918,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.router.navigate([routing_verify_phone",{"_index":625,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate([this.returnurl",{"_index":694,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.router.navigatebyurl(not_found",{"_index":558,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.router.navigatebyurl(server_error",{"_index":563,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.sendauthstatechangenotification(false",{"_index":489,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.storageservice.watchstorageitem(authenticated_user).subscribe(data",{"_index":722,"title":{},"body":{"components/NavComponent.html":{}}}],["this.storageservice.watchstorageitem(first_name).subscribe(data",{"_index":724,"title":{},"body":{"components/NavComponent.html":{}}}],["this.storageservice.watchstorageitem(user_role).subscribe(data",{"_index":726,"title":{},"body":{"components/NavComponent.html":{}}}],["this.toastr.error(messages",{"_index":778,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.toastr.info(message",{"_index":779,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.toastr.success(message",{"_index":777,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.toastr.warning(message",{"_index":780,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.tryrefreshingtokens(accesstoken",{"_index":313,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.urlservice.previousurl$.subscribe((previousurl",{"_index":1079,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.urlservice.setpreviousurl(this.previousurl",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["this.username",{"_index":723,"title":{},"body":{"components/NavComponent.html":{}}}],["this.userphone",{"_index":791,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["this.userphone.substring(0",{"_index":795,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["this.userphone.substring(3",{"_index":797,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["this.userphone.substring(6",{"_index":799,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["this.validationerrors",{"_index":695,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.verifyphoneform",{"_index":1074,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.verifyphoneform.value.verifycode",{"_index":1080,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["throwerror",{"_index":538,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(error",{"_index":569,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["title",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"injectables/NotificationService.html":{}}}],["toast",{"_index":1018,"title":{},"body":{"modules/SharedModule.html":{}}}],["toastr",{"_index":766,"title":{},"body":{"injectables/NotificationService.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["toastrmodule",{"_index":1008,"title":{},"body":{"modules/SharedModule.html":{}}}],["toastrmodule.forroot",{"_index":1016,"title":{},"body":{"modules/SharedModule.html":{}}}],["toastrservice",{"_index":764,"title":{},"body":{"injectables/NotificationService.html":{}}}],["toggle",{"_index":968,"title":{},"body":{"modules/SharedModule.html":{}}}],["token",{"_index":304,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"modules/SharedModule.html":{},"interfaces/UserForRegistrationDto.html":{},"miscellaneous/functions.html":{}}}],["token.ts",{"_index":644,"title":{},"body":{"interfaces/JwtTokenDto.html":{},"coverage.html":{}}}],["tokengetter",{"_index":1015,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tokens",{"_index":319,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["tools",{"_index":941,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["top:5px",{"_index":639,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["trace",{"_index":955,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["transfer",{"_index":341,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["transmit",{"_index":394,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["transportation",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/PhoneConfirmationComponent.html":{},"index.html":{}}}],["transportationclient",{"_index":1152,"title":{},"body":{"index.html":{}}}],["tree",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["true",{"_index":43,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Validation.html":{}}}],["try",{"_index":317,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tryrefreshingtokens",{"_index":286,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tryrefreshingtokens(accesstoken",{"_index":294,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tslib",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":19,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typically",{"_index":435,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["undefined",{"_index":393,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"injectables/AuthorizationService.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/UpdatedPasswordComponent.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["unexpected",{"_index":565,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["unit",{"_index":1184,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":293,"title":{},"body":{"guards/AuthGuard.html":{}}}],["until",{"_index":1091,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["update",{"_index":413,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/NavComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["updated",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["updatedpasswordcomponent",{"_index":156,"title":{"components/UpdatedPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["upon",{"_index":345,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["url",{"_index":946,"title":{},"body":{"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["url.service",{"_index":309,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["url.service.ts",{"_index":520,"title":{},"body":{"injectables/EnvironmentUrlService.html":{},"coverage.html":{}}}],["url.service.ts:9",{"_index":522,"title":{},"body":{"injectables/EnvironmentUrlService.html":{}}}],["urlservice",{"_index":74,"title":{"injectables/UrlService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ResetPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["use",{"_index":885,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["useclass",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":408,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/ForbiddenComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"miscellaneous/enumerations.html":{}}}],["user's",{"_index":414,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"modules/SharedModule.html":{},"interfaces/UserForRegistrationDto.html":{},"miscellaneous/functions.html":{}}}],["userforauthdto",{"_index":686,"title":{},"body":{"components/LoginComponent.html":{}}}],["userforregistrationdto",{"_index":417,"title":{"interfaces/UserForRegistrationDto.html":{}},"body":{"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"coverage.html":{}}}],["username",{"_index":663,"title":{},"body":{"components/LoginComponent.html":{},"components/NavComponent.html":{}}}],["userphone",{"_index":787,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["using",{"_index":320,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthenticationDto.html":{},"index.html":{}}}],["valid",{"_index":389,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["validatecontrol",{"_index":664,"title":{},"body":{"components/LoginComponent.html":{}}}],["validation",{"_index":906,"title":{"classes/Validation.html":{}},"body":{"components/ResetPasswordComponent.html":{},"classes/Validation.html":{},"coverage.html":{}}}],["validation.match('password",{"_index":911,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["validationerrors",{"_index":665,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validator",{"_index":852,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validatorfn",{"_index":1046,"title":{},"body":{"classes/Validation.html":{}}}],["validators",{"_index":614,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["validators.compose",{"_index":847,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.compose([validators.email",{"_index":846,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.compose([validators.maxlength(20",{"_index":842,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.compose([validators.maxlength(this.codelength",{"_index":1076,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["validators.compose([validators.minlength(3",{"_index":849,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.compose([validators.required",{"_index":848,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(this.passwordminlength",{"_index":910,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["validators.pattern('[a",{"_index":843,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":621,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["value",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["variable",{"_index":1105,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1213,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification",{"_index":395,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["verified",{"_index":1092,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["verify",{"_index":403,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["verifycode",{"_index":1075,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["verifyphonecomponent",{"_index":158,"title":{"components/VerifyPhoneComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["verifyphoneform",{"_index":1062,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["version",{"_index":1166,"title":{},"body":{"index.html":{}}}],["via",{"_index":1188,"title":{},"body":{"index.html":{}}}],["visibility",{"_index":698,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["visibility_off",{"_index":697,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["void",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["w",{"_index":888,"title":{},"body":{"components/RegisterComponent.html":{}}}],["webb",{"_index":734,"title":{},"body":{"components/NavComponent.html":{}}}],["went",{"_index":566,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["whether",{"_index":352,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["white",{"_index":748,"title":{},"body":{"components/NavComponent.html":{}}}],["width",{"_index":274,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["width:100",{"_index":704,"title":{},"body":{"components/LoginComponent.html":{}}}],["width:50",{"_index":581,"title":{},"body":{"components/FooterComponent.html":{}}}],["width:500px",{"_index":281,"title":{},"body":{"components/AuthComponent.html":{},"components/LoginComponent.html":{}}}],["width:75",{"_index":700,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["width:90",{"_index":886,"title":{},"body":{"components/RegisterComponent.html":{}}}],["works",{"_index":518,"title":{},"body":{"components/DashboardComponent.html":{},"components/ManageTemplatesComponent.html":{}}}],["wrong",{"_index":567,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["z",{"_index":845,"title":{},"body":{"components/RegisterComponent.html":{}}}],["za",{"_index":844,"title":{},"body":{"components/RegisterComponent.html":{}}}],["zip",{"_index":434,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["zipcode",{"_index":439,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["zone.js",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/admin.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authorizationService: AuthorizationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/admin.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/admin.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { AuthorizationService } from '../services/authorization.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n  constructor(private authorizationService: AuthorizationService, private router: Router) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.authorizationService.isUserAdmin())\n      return true;\n\n    this.router.navigate(['/forbidden']), { queryParams: { returnUrl: state.url }};\n      return false;\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUrl\n                            \n                            \n                                previousUrl\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, urlService: UrlService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        urlService\n                                                  \n                                                        \n                                                                        UrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Rock Transportation'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { AuthenticationService } from './core/authentication/authentication.service';\nimport { UrlService } from './core/services/url.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'Rock Transportation';\n  previousUrl: string | null = null;\n  currentUrl: string | null = null;\n\n  constructor(private authService: AuthenticationService,\n    private urlService: UrlService,\n    private router: Router) {}\n\n  ngOnInit(): void {\n    if (this.authService.isUserAuthenticated()) {\n      this.authService.sendAuthStateChangeNotification(true);\n    }\n\n    this.router.events \n      .subscribe((event:Event) => {\n        if (event instanceof NavigationEnd) {\n          this.previousUrl = this.currentUrl;\n          this.currentUrl = event.url;\n          this.urlService.setPreviousUrl(this.previousUrl);\n        }\n      })\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n    \n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                content {\n    min-height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n}\n\nmain {\n    flex-grow: 1;\n}\n\napp-nav, main, app-footer {\n    flex-shrink: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAppModule -->\n\nAuthComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nForbiddenComponent\n\nForbiddenComponent\n\nAppModule -->\n\nForbiddenComponent->AppModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAppModule -->\n\nForgotPasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nManageTemplatesComponent\n\nManageTemplatesComponent\n\nAppModule -->\n\nManageTemplatesComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nPhoneConfirmationComponent\n\nPhoneConfirmationComponent\n\nAppModule -->\n\nPhoneConfirmationComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nServerErrorComponent\n\nServerErrorComponent\n\nAppModule -->\n\nServerErrorComponent->AppModule\n\n\n\n\n\nUpdatedPasswordComponent\n\nUpdatedPasswordComponent\n\nAppModule -->\n\nUpdatedPasswordComponent->AppModule\n\n\n\n\n\nVerifyPhoneComponent\n\nVerifyPhoneComponent\n\nAppModule -->\n\nVerifyPhoneComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nUrlService\n\nUrlService\n\nAppModule -->\n\nUrlService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AuthComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            ForbiddenComponent\n                        \n                        \n                            ForgotPasswordComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            ManageTemplatesComponent\n                        \n                        \n                            NavComponent\n                        \n                        \n                            NotFoundComponent\n                        \n                        \n                            PhoneConfirmationComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            ResetPasswordComponent\n                        \n                        \n                            ServerErrorComponent\n                        \n                        \n                            UpdatedPasswordComponent\n                        \n                        \n                            VerifyPhoneComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ErrorInterceptor\n                        \n                        \n                            UrlService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { NavComponent } from './core/header/nav.component';\n\nimport { SharedModule } from './shared/shared.module';\nimport { FooterComponent } from './core/footer/footer.component';\nimport { NotFoundComponent } from './modules/errors/pages/not-found/not-found.component';\nimport { ServerErrorComponent } from './modules/errors/pages/server-error/server-error.component';\nimport { AuthComponent } from './modules/account/auth/auth.component';\nimport { RegisterComponent } from './modules/account/auth/register/register.component';\nimport { LoginComponent } from './modules/account/auth/login/login.component';\n\nimport { NgxMaskModule } from 'ngx-mask';\nimport { ErrorInterceptor } from './core/interceptors/error.interceptor';\nimport { VerifyPhoneComponent } from './modules/account/phone/verify-phone/verify-phone.component';\nimport { ForgotPasswordComponent } from './modules/account/password/forgot-password/forgot-password.component';\nimport { DashboardComponent } from './modules/dashboard/pages/dashboard/dashboard.component';\nimport { ManageTemplatesComponent } from './modules/church-services/manage-templates/manage-templates.component';\nimport { ForbiddenComponent } from './modules/errors/pages/forbidden/forbidden.component';\nimport { ResetPasswordComponent } from './modules/account/password/reset-password/reset-password.component';\nimport { PhoneConfirmationComponent } from './modules/account/phone/phone-confirmation/phone-confirmation.component';\n\nimport { UrlService } from './core/services/url.service';\nimport { UpdatedPasswordComponent } from './modules/account/password/updated-password/updated-password.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    FooterComponent,\n    NotFoundComponent,\n    ServerErrorComponent,\n    AuthComponent,\n    RegisterComponent,\n    LoginComponent,\n    VerifyPhoneComponent,\n    ForgotPasswordComponent,\n    DashboardComponent,\n    ManageTemplatesComponent,\n    ForbiddenComponent,\n    ResetPasswordComponent,\n    PhoneConfirmationComponent,\n    UpdatedPasswordComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgxMaskModule.forRoot()\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true\n    },  \n    UrlService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NotFoundComponent } from './modules/errors/pages/not-found/not-found.component';\nimport { AuthComponent } from './modules/account/auth/auth.component';\nimport { ServerErrorComponent } from './modules/errors/pages/server-error/server-error.component';\nimport { VerifyPhoneComponent } from './modules/account/phone/verify-phone/verify-phone.component';\nimport { PhoneConfirmationComponent } from './modules/account/phone/phone-confirmation/phone-confirmation.component';\nimport { ForgotPasswordComponent } from './modules/account/password/forgot-password/forgot-password.component';\nimport { DashboardComponent } from './modules/dashboard/pages/dashboard/dashboard.component';\nimport { AuthGuard } from './core/guards/auth.guard';\nimport { ManageTemplatesComponent } from './modules/church-services/manage-templates/manage-templates.component';\nimport { ForbiddenComponent } from './modules/errors/pages/forbidden/forbidden.component';\nimport { AdminGuard } from './core/guards/admin.guard';\nimport { ResetPasswordComponent } from './modules/account/password/reset-password/reset-password.component';\nimport { NOT_FOUND, ROUTING_AUTH, ROUTING_CONFIRM_PHONE, ROUTING_FORBIDDEN, ROUTING_FORGOT_PASSWORD, ROUTING_MANAGE_TEMPLATES, ROUTING_UPDATED_PASSWORD, ROUTING_RESET_PASSWORD, ROUTING_VERIFY_PHONE, SERVER_ERROR } from './app.constants';\nimport { UpdatedPasswordComponent } from './modules/account/password/updated-password/updated-password.component';\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: ROUTING_AUTH, component: AuthComponent },\n  { path: ROUTING_FORBIDDEN, component: ForbiddenComponent },\n  { path: ROUTING_VERIFY_PHONE, component: VerifyPhoneComponent },\n  { path: ROUTING_CONFIRM_PHONE, component: PhoneConfirmationComponent },\n  { path: 'password', redirectTo: '/', pathMatch: 'full' },\n  { path: ROUTING_FORGOT_PASSWORD, component: ForgotPasswordComponent },\n  { path: ROUTING_RESET_PASSWORD, component: ResetPasswordComponent },\n  { path: ROUTING_UPDATED_PASSWORD, component: UpdatedPasswordComponent },\n  { path: ROUTING_MANAGE_TEMPLATES, component: ManageTemplatesComponent, canActivate: [AuthGuard,AdminGuard] },\n  { path: NOT_FOUND, component: NotFoundComponent },\n  { path: SERVER_ERROR, component: ServerErrorComponent },\n  { path: '**', redirectTo: '/404', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/auth/auth.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                styleUrls\n                ./auth.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/auth/auth.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/auth/auth.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n  Congratulations! You were successfully registered!\n  There was an issue resetting your password\n  You have successfully changed your password\n  -->\n\n  \n    \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./auth.component.scss\n                \n                .auth-container\n{\n  width: 500px;\n  margin: 2% auto;\n}\n@media( max-width:500px )\n{\n  .auth-container\n  {\n    width: 300px;\n  }\n}\n@media ( max-width: 300px )\n{\n  .auth-container\n  {\n    width: 250px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Congratulations! You were successfully registered!  There was an issue resetting your password  You have successfully changed your password  -->                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                    Async\n                                tryRefreshingTokens\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, http: HttpClient, envUrl: EnvironmentUrlService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        envUrl\n                                                  \n                                                        \n                                                                        EnvironmentUrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/auth.guard.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        tryRefreshingTokens\n                        \n                    \n                \n            \n            \n                \n                    \n                    tryRefreshingTokens(accessToken: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/auth.guard.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accessToken\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { ACCESS_TOKEN, REFRESH_TOKEN, API_TOKENS_REFRESH, ROUTING_AUTH } from 'src/app/app.constants';\nimport { JwtTokenDto } from 'src/app/shared/models/jwt-token';\nimport { AuthResponseDto } from 'src/app/shared/models/response';\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { EnvironmentUrlService } from '../services/environment-url.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthenticationService, \n    private router: Router,\n    private http: HttpClient,\n    private envUrl: EnvironmentUrlService){}\n\n  async canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.authService.isUserAuthenticated()) {\n      return true;\n    }\n\n    const accessToken = localStorage.getItem(ACCESS_TOKEN);\n\n    const isRefreshSuccess = await this.tryRefreshingTokens(accessToken);\n    if (!isRefreshSuccess) {\n      this.authService.sendAuthStateChangeNotification(false);\n      this.router.navigate([ROUTING_AUTH], { queryParams: { returnUrl: state.url }});\n    }\n\n    this.authService.sendAuthStateChangeNotification(isRefreshSuccess);\n    return isRefreshSuccess;\n  }\n\n  private async tryRefreshingTokens(accessToken: string | null): Promise {\n    // Try refreshing tokens using refresh token\n    const refreshToken: string | null = localStorage.getItem(REFRESH_TOKEN);\n\n    if(!accessToken || !refreshToken) return false;\n\n    var jwtToken: JwtTokenDto = {accessToken: accessToken, refreshToken: refreshToken}; \n\n    let isRefreshSuccess: boolean;\n\n    try {\n      const response = await this.authService.refreshAuthentication(API_TOKENS_REFRESH, jwtToken).toPromise();\n\n      const newToken = response.accessToken;\n      const newRefreshToken = response.refreshToken;\n\n      localStorage.setItem(ACCESS_TOKEN, newToken);\n      localStorage.setItem(REFRESH_TOKEN, newRefreshToken);\n      isRefreshSuccess = true;\n    } catch(ex) {\n      isRefreshSuccess = false;\n    }\n\n    return isRefreshSuccess;\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthResponseDto.html":{"url":"interfaces/AuthResponseDto.html","title":"interface - AuthResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/response.ts\n        \n\n\n            \n                Description\n            \n            \n                A Data Transfer Object to pass access and refresh tokens upon successful authentication.\n\n            \n\n            \n                Extends\n            \n            \n                        JwtTokenDto\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isAuthSuccessful\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isAuthSuccessful\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isAuthSuccessful:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A flag recording whether an authentication attempt was successful.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { JwtTokenDto } from \"./jwt-token\";\n\n/**\n * A Data Transfer Object to flag a successful registration attempt along \n * with any errors that were encountered. \n * \n */\nexport interface RegistrationResponseDto {\n    /**\n     * A flag recording whether a registration attempt was successful. \n     */\n    isSuccessfulRegistration: boolean;\n\n    /**\n     * Records any and all errors encountered when attempting a registration. \n     */\n    errors: string[];\n}\n\n/**\n * A Data Transfer Object to pass access and refresh tokens upon successful authentication. \n */\nexport interface AuthResponseDto extends JwtTokenDto {\n  /**\n   * A flag recording whether an authentication attempt was successful. \n   */\n  isAuthSuccessful: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthenticationDto.html":{"url":"interfaces/AuthenticationDto.html","title":"interface - AuthenticationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthenticationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/account.ts\n        \n\n\n            \n                Description\n            \n            \n                Data Transfer Object using a phone number and password request authentication.\n\n            \n\n            \n                Extends\n            \n            \n                        PhoneNumberDto\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A plain-text, non-hashed string representing a password.\nFor security, ensure hashing takes place on the backend.\nMaximum length: 255 characters. Required by the backend.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AuthenticationDto extends PhoneNumberDto {\n  /**\n   * A plain-text, non-hashed string representing a password. \n   * For security, ensure hashing takes place on the backend.\n   * Maximum length: 255 characters. Required by the backend.\n   */\n  password: string;\n}\n\n/**\n * Data Transfer Object to send and receive phone number.\n */\n export interface PhoneNumberDto {\n  /**\n   * A strictly 10-digit string representing a valid phone number capable of SMS.\n   */\n  phoneNumber: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to transmit a phone number - verification code pair.\n */\n export interface PhoneVerificationDto extends PhoneNumberDto {\n  /**\n   * A verification code that must match the code sent to the associated phone number\n   * in order to be verify the phone number.\n   */\n  code: string;\n}\n\n/**\n * Data Transfer Object sending and receiving a password reset token.\n */\n export interface ResetPasswordDto extends AuthenticationDto {\n  /**\n   * A password reset token assigned to a user from asp.net core Identity.\n   * The token is required and must match the generated token in order to successfully \n   * update a user's password. \n   */\n  token: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to send and receive all user information required for registering with the app.\n */\nexport interface UserForRegistrationDto extends AuthenticationDto {\n  /**\n   * A user's first name. Required by the backend. \n   */\n  firstName: string;\n  /**\n   * A user's last name. Required by the backend.\n   */\n  lastName: string;\n  /**\n   * Must be formatted as `sometext@moretext.TLD`. \n   * Not required by backend.\n   */\n  email: string | null;\n  /**\n   * A user's main street address. Required by the backend.\n   */\n  address1: string;\n  /**\n   * A user's apartment number, suite, or any other 'secondary' address. \n   * Not required by the backend. \n   */\n  address2: string | null;\n  /**\n   * The city portion of the user's address.\n   * Required by the backend.\n   */\n  city: string;\n  /**\n   * The zip code portion of the user's address. Typically 5 digits long.\n   * Required by the backend.\n   */\n  zipCode: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/authentication/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authChanged\n                            \n                            \n                                    Private\n                                authChangeSubject\n                            \n                            \n                                    Public\n                                confirmPhone\n                            \n                            \n                                    Private\n                                createCompleteRoute\n                            \n                            \n                                    Public\n                                forgotPassword\n                            \n                            \n                                    Public\n                                isUserAuthenticated\n                            \n                            \n                                    Public\n                                loginUser\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                refreshAuthentication\n                            \n                            \n                                    Public\n                                registerUser\n                            \n                            \n                                    Public\n                                resetPassword\n                            \n                            \n                                    Public\n                                resetPasswordToken\n                            \n                            \n                                    Public\n                                sendAuthStateChangeNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, envUrl: EnvironmentUrlService, jwtHelper: JwtHelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/authentication.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        envUrl\n                                                  \n                                                        \n                                                                        EnvironmentUrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtHelper\n                                                  \n                                                        \n                                                                    JwtHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authChanged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.authChangeSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authChangeSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        confirmPhone\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createCompleteRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        forgotPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isUserAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loginUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        refreshAuthentication\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        registerUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resetPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:69\n                        \n                    \n\n            \n                \n                     resetPassword sends a payload of body to the route and receives a password reset token.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    route\n                                                    \n                                                            The route to the api controller.\n\n                                                    \n                                            \n                                            \n                                                    body\n                                                    \n                                                            Payload of type ResetPasswordDto sent to the api controller on the backend\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resetPasswordToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendAuthStateChangeNotification\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:37\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { AuthenticationDto, PhoneNumberDto, PhoneVerificationDto, ResetPasswordDto, UserForRegistrationDto } from 'src/app/shared/models/account';\nimport { AuthResponseDto, RegistrationResponseDto } from 'src/app/shared/models/response';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { EnvironmentUrlService } from '../services/environment-url.service';\nimport { Subject } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { ACCESS_TOKEN, REFRESH_TOKEN } from 'src/app/app.constants';\nimport { JwtTokenDto } from 'src/app/shared/models/jwt-token';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n    constructor(private http: HttpClient,\n      private envUrl: EnvironmentUrlService, \n      private jwtHelper: JwtHelperService) { }\n\n    private authChangeSubject = new Subject()\n    public authChanged = this.authChangeSubject.asObservable();\n\n    public registerUser = (route: string, body: UserForRegistrationDto) => {\n      return this.http.post(this.createCompleteRoute(this.envUrl.apiUrl, route), body);\n    }\n\n    public loginUser = (route: string, body: AuthenticationDto) => {\n      return this.http.post(this.createCompleteRoute(this.envUrl.apiUrl, route), body);\n    }\n\n    public logout = () => {\n      localStorage.removeItem(ACCESS_TOKEN);\n      localStorage.removeItem(REFRESH_TOKEN);\n      this.sendAuthStateChangeNotification(false);\n    }\n\n    public sendAuthStateChangeNotification = (isAuthenticated:boolean) => {\n      this.authChangeSubject.next(isAuthenticated);\n    }\n\n    public isUserAuthenticated = () => {\n      const accessToken = localStorage.getItem(ACCESS_TOKEN);\n\n      return accessToken && !this.jwtHelper.isTokenExpired(accessToken);\n    }\n\n    public refreshAuthentication = (route: string, body: JwtTokenDto) => {\n      return this.http.post(this.createCompleteRoute(this.envUrl.apiUrl, route), body);\n    }\n\n    public confirmPhone = (route: string, body: PhoneVerificationDto) => {\n      return this.http.post(this.createCompleteRoute(this.envUrl.apiUrl, route), body);\n    }\n\n    public resetPasswordToken = (route: string, body: PhoneVerificationDto) => {\n      return this.http.post(this.createCompleteRoute(this.envUrl.apiUrl, route), body);\n    }\n\n    public forgotPassword = (route: string, body: PhoneNumberDto) => {\n      return this.http.post(this.createCompleteRoute(this.envUrl.apiUrl, route), body);\n    }\n    \n    /**\n     *  resetPassword sends a payload of body to the route and receives a password reset token.\n     * @param route The route to the api controller.\n     * @param body Payload of type ResetPasswordDto sent to the api controller on the backend\n     * @returns Observable of type string. This string should represent a password reset token\n     */\n    public resetPassword = (route: string, body: ResetPasswordDto) => {\n      return this.http.post(this.createCompleteRoute(this.envUrl.apiUrl, route), body);\n    }\n\n    private createCompleteRoute = (envAddress: string, route: string) => {\n      return `${envAddress}/${route}`;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isUserAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, envUrl: EnvironmentUrlService, jwtHelper: JwtHelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/authorization.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        envUrl\n                                                  \n                                                        \n                                                                        EnvironmentUrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtHelper\n                                                  \n                                                        \n                                                                    JwtHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isUserAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/authorization.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { ACCESS_TOKEN, IDENTITY_ROLES } from 'src/app/app.constants';\nimport { Roles } from 'src/app/shared/models/roles';\nimport { EnvironmentUrlService } from './environment-url.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizationService {\n\n  constructor(private http: HttpClient,\n    private envUrl: EnvironmentUrlService, \n    private jwtHelper: JwtHelperService) { }\n\n  public isUserAdmin = () => {\n    const accessToken = localStorage.getItem(ACCESS_TOKEN);\n    const decodedToken = accessToken !== null ? this.jwtHelper.decodeToken(accessToken) : undefined;\n    const role = decodedToken[IDENTITY_ROLES];\n    return role === Roles.administrator || Roles.superAdmin;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/dashboard/pages/dashboard/dashboard.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/dashboard/pages/dashboard/dashboard.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/dashboard/pages/dashboard/dashboard.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        dashboard works!\n\n    \n\n    \n                \n                    ./dashboard.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'dashboard works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EnvironmentUrlService.html":{"url":"injectables/EnvironmentUrlService.html","title":"injectable - EnvironmentUrlService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EnvironmentUrlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/environment-url.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/environment-url.service.ts:9\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.apiUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/environment-url.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnvironmentUrlService {\n\n    public apiUrl: string = environment.apiUrl;\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptors/error.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/interceptors/error.interceptor.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/interceptors/error.interceptor.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { NotificationService } from '../services/notification.service';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { catchError } from 'rxjs/operators';\nimport { NOT_FOUND, SERVER_ERROR } from 'src/app/app.constants';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router,\n    private notificationService: NotificationService) {}\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(request).pipe(\n      catchError(error => {\n        if (error) {\n          switch (error.status) {\n            case 400:\n              let errors: string[] = Object.values(error.error);\n              let errorsAsString = errors.join(\"\")\n              this.notificationService.showError(errorsAsString, error.statusText);\n              break;\n            case 401:\n              this.notificationService.showError(error.error, error.statusText);\n              break;\n            case 403: \n              this.notificationService.showError(error.error);\n              break;\n            case 404:\n              this.router.navigateByUrl(NOT_FOUND);\n              break;\n            case 406: \n              this.notificationService.showError(error.error);\n              break;\n            case 409:\n              this.notificationService.showError(error.error);\n              break;\n            case 500:\n              const navigationExtras: NavigationExtras = {state: {error: error.error}};\n              this.router.navigateByUrl(SERVER_ERROR, navigationExtras);\n              break;\n            default:\n              //this.notificationService.showError(\"Something unexpected went wrong\");\n              console.log(error);\n              break;\n          }\n        }\n        return throwError(error);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/footer/footer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/footer/footer.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n      \n    \n    \n \n    \n    \n  \n    \n\n    \n                \n                    ./footer.component.scss\n                \n                app-footer\n{\n    justify-content: flex-end;\n    justify-content: space-between;\n    padding: 0 2% 0 2%;\n}\nimg\n{\n    width:50%;\n    height:auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForbiddenComponent.html":{"url":"components/ForbiddenComponent.html","title":"component - ForbiddenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForbiddenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/errors/pages/forbidden/forbidden.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forbidden\n            \n\n            \n                styleUrls\n                ./forbidden.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forbidden.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                navigateToLogin\n                            \n                            \n                                    Private\n                                returnUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/errors/pages/forbidden/forbidden.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/errors/pages/forbidden/forbidden.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        navigateToLogin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/errors/pages/forbidden/forbidden.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/errors/pages/forbidden/forbidden.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forbidden',\n  templateUrl: './forbidden.component.html',\n  styleUrls: ['./forbidden.component.scss']\n})\nexport class ForbiddenComponent implements OnInit {\n\n  private returnUrl: string | undefined;\n\n  constructor(private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl']||'';\n  }\n\n  public navigateToLogin = () => {\n    this.router.navigate(['/auth'], { queryParams: { returnUrl: this.returnUrl }});\n  }\n\n}\n\n    \n\n    \n        Forbidden\n\n    This page is forbidden for you. Please log in with a different user\n    to access the requested page.\n\n\n    \n\n    \n                \n                    ./forbidden.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Forbidden    This page is forbidden for you. Please log in with a different user    to access the requested page.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForbiddenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/password/forgot-password/forgot-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                styleUrls\n                ./forgot-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forgotPasswordForm\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Private\n                                returnUrl\n                            \n                            \n                                    Public\n                                submit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/password/forgot-password/forgot-password.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/password/forgot-password/forgot-password.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        forgotPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/forgot-password/forgot-password.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/forgot-password/forgot-password.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/forgot-password/forgot-password.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        submit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/forgot-password/forgot-password.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IConfig } from 'ngx-mask';\nimport { API_FORGOT_PASSWORD, ROUTING_VERIFY_PHONE } from 'src/app/app.constants';\nimport { AuthenticationService } from 'src/app/core/authentication/authentication.service';\nimport { ResetPasswordDto, PhoneNumberDto } from 'src/app/shared/models/account';\n\nexport let options: Partial | (() => Partial);\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  public forgotPasswordForm!: FormGroup;\n  public hide: boolean = true;\n  private returnUrl: string | undefined = undefined;\n\n  constructor(private authService: AuthenticationService,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.forgotPasswordForm = new FormGroup({\n      phone: new FormControl(\"\", [Validators.required])\n    })\n\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '';\n  }\n\n  public submit = (forgotPasswordForm: any) => {\n    var phoneNumberDto: PhoneNumberDto = { phoneNumber: forgotPasswordForm.phone}\n\n    this.authService.forgotPassword(API_FORGOT_PASSWORD, phoneNumberDto)\n    .subscribe(() => {\n      this.router.navigate([ROUTING_VERIFY_PHONE], {state: {data: phoneNumberDto}});\n    })\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Enter your phone number\n      \n      \n        A verification code will be sent to your \n        phone to make sure you are the owner of this account. \n      \n      \n        \n          \n            Phone Number:\n            \n            phone\n            Required\n          \n\n          \n            Submit\n          \n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./forgot-password.component.scss\n                \n                .container {\n  margin: 20px auto 0;\n}\nmat-card {\n  text-align: center;\n  margin: 0 auto;\n}\nmat-card-header {\n  font-size: large;\n  justify-content: center;\n  margin-top:5px;\n  margin-bottom:10px;\n}\nmat-card-subtitle {\n  margin: 10px auto 10px;\n}\n\n@media ( max-width: 300px )\n{\n  .container\n  {\n    width: 240px;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Enter your phone number                    A verification code will be sent to your         phone to make sure you are the owner of this account.                                           Phone Number:                        phone            Required                                Submit                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtTokenDto.html":{"url":"interfaces/JwtTokenDto.html","title":"interface - JwtTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/jwt-token.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object to accept and pass tokens to the backend\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The access token represents the short-lived token passed back and forth\nto the backend to verify a user's authentication, thereby allowing access.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The refresh token represents the long-lived token persisting in the user's\naccount allowing for renewed access tokens as long as it is valid and not expired.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface JwtTokenDto {\n  /**\n   * The access token represents the short-lived token passed back and forth \n   * to the backend to verify a user's authentication, thereby allowing access. \n   */\n  accessToken: string;\n\n  /**\n   * The refresh token represents the long-lived token persisting in the user's \n   * account allowing for renewed access tokens as long as it is valid and not expired.\n   */\n  refreshToken: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/auth/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                    Public\n                                hasError\n                            \n                            \n                                hide\n                            \n                            \n                                    Public\n                                loginForm\n                            \n                            \n                                    Public\n                                loginUser\n                            \n                            \n                                password\n                            \n                            \n                                    Private\n                                returnUrl\n                            \n                            \n                                username\n                            \n                            \n                                    Public\n                                validateControl\n                            \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/auth/login/login.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/auth/login/login.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hasError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loginUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        validateControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Injectable, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { IConfig } from 'ngx-mask';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core/authentication/authentication.service';\nimport { AuthenticationDto } from 'src/app/shared/models/account';\nimport { ACCESS_TOKEN, API_LOGIN, REFRESH_TOKEN } from 'src/app/app.constants';\n\nexport let options: Partial | (() => Partial);\n\n@Injectable({\n  providedIn:'root'\n})\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  public loginForm!: FormGroup;\n  username!: string;\n  password!: string;\n  hide: boolean = true;\n  validationErrors: string[] = [];\n  error: boolean = false;\n  private returnUrl: string | undefined;\n\n  constructor(private authService: AuthenticationService,\n    private router: Router, \n    private route: ActivatedRoute) {}\n\n    ngOnInit(): void {\n      this.loginForm = new FormGroup({\n        username: new FormControl(\"\", [Validators.required]),\n        password: new FormControl(\"\", [Validators.required])\n      })\n\n      this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '';\n    }\n    public validateControl = (controlName: string) => {\n      return this.loginForm.controls[controlName].invalid && this.loginForm.controls[controlName].touched\n    }\n    public hasError = (controlName: string, errorName: string) => {\n      return this.loginForm.controls[controlName].hasError(errorName)\n    }\n\n    public loginUser = (loginFormValue: any) => {\n      const login = {...loginFormValue};\n      const userForAuthDto: AuthenticationDto = {\n        phoneNumber: login.username,\n        password: login.password\n      }\n\n      this.authService.loginUser(API_LOGIN, userForAuthDto)\n      .subscribe(result => {\n        localStorage.setItem(ACCESS_TOKEN, result.accessToken);\n        localStorage.setItem(REFRESH_TOKEN, result.refreshToken);\n        this.authService.sendAuthStateChangeNotification(result.isAuthSuccessful);\n        this.router.navigate([this.returnUrl]);\n      }, error => {\n        this.validationErrors = error;\n        console.log(this.validationErrors);\n      })\n    }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            Phone Number:\n            \n            phone\n            Required\n          \n\n          \n            Password\n            \n            {{hide ? 'visibility_off' : 'visibility'}}\n            Required\n          \n          \n            Log In\n          \n        \n        \n        \n          \n            Forgot Password?\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .login-form\n{\n  width:75%;\n  margin: 0 auto;\n}\n.center\n{\n  text-align:center;\n}\nmat-form-field\n{\n  display: block;\n  width:100%;\n}\nmat-card-footer\n{\n  margin: 10px auto 0;\n  text-align:center;\n}\n@media (max-width:500px)\n{\n  .container\n  {\n    width:100%;\n    margin: 10px auto;\n  }\n  .login-form\n  {\n    width:100%;\n    margin: 0 auto;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Phone Number:                        phone            Required                                Password                        {{hide ? \\'visibility_off\\' : \\'visibility\\'}}            Required                                Log In                                                        Forgot Password?                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageTemplatesComponent.html":{"url":"components/ManageTemplatesComponent.html","title":"component - ManageTemplatesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ManageTemplatesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/church-services/manage-templates/manage-templates.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manage-templates\n            \n\n            \n                styleUrls\n                ./manage-templates.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./manage-templates.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/church-services/manage-templates/manage-templates.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/church-services/manage-templates/manage-templates.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manage-templates',\n  templateUrl: './manage-templates.component.html',\n  styleUrls: ['./manage-templates.component.scss']\n})\nexport class ManageTemplatesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        manage-templates works!\n\n    \n\n    \n                \n                    ./manage-templates.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'manage-templates works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManageTemplatesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavComponent.html":{"url":"components/NavComponent.html","title":"component - NavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/header/nav.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav\n            \n\n            \n                styleUrls\n                ./nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isUserAuthenticated\n                            \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/header/nav.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/header/nav.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isUserAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/header/nav.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/header/nav.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../authentication/authentication.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent {\n  public isUserAuthenticated:boolean | undefined;\n/*\n  userName: string;\n  role: string;\n  name: string;\n  email: string;\n\n  constructor(public basicAuthenticationService: BasicAuthenticationService,\n              private storageService: StorageService) {\n    this.storageService.watchStorageItem(AUTHENTICATED_USER).subscribe(data => this.userName = data);\n    this.storageService.watchStorageItem(FIRST_NAME).subscribe(data => this.name = data);\n    this.storageService.watchStorageItem(USER_ROLE).subscribe(data => this.role = data);\n  }\n  */\n constructor(private authService:AuthenticationService, private router: Router){\n   this.authService.authChanged\n   .subscribe(result => {\n     this.isUserAuthenticated = result;\n   })\n }\n\n  ngOnInit(): void {\n    this.authService.authChanged\n    .subscribe(result =>{\n      this.isUserAuthenticated = result;\n    })\n  }\n\n  public logout = () => {\n    this.authService.logout();\n    this.router.navigate(['/auth']);\n  }\n}\n\n    \n\n    \n        \n    \n      Jacob Webb -->\n      \n        Log In / Register\n        Logout\n        \n          \n          \n            Update Contact Info\n            Change Password\n            Logout\n          \n        \n      \n      \n        menu\n        \n          \n          Log in / Register\n          \n        \n      \n     \n  \n  \n\n    \n\n    \n                \n                    ./nav.component.scss\n                \n                .navbar\n{\n  justify-content: flex-end;\n  // justify-content: space-between;\n  padding: 0 2% 0 1%;\n}\n\n.navbar a\n{\n  font-size: 0.9em;\n}\n\n@media (max-width: 499px){\n  .nav-menu-show\n  {\n    display: none;\n  }\n}\n@media (min-width: 500px){\n  .nav-menu-hide\n  {\n    display: none;\n  }\n}\n.logo\n{\n  font-family: 'Baskerville';\n  color: white;\n  text-decoration:none;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Jacob Webb -->              Log In / Register        Logout                                        Update Contact Info            Change Password            Logout                                      menu                            Log in / Register                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/errors/pages/not-found/not-found.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                styleUrls\n                ./not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/errors/pages/not-found/not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/errors/pages/not-found/not-found.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    Not Found\n    Return to home page\n\n    \n\n    \n                \n                    ./not-found.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Not Found    Return to home page'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showError\n                            \n                            \n                                showInfo\n                            \n                            \n                                showSuccess\n                            \n                            \n                                showWarning\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/notification.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(messages: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/notification.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    messages\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"\"\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInfo\n                        \n                    \n                \n            \n            \n                \nshowInfo(message: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/notification.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(message: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/notification.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showWarning\n                        \n                    \n                \n            \n            \n                \nshowWarning(message: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/notification.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(private toastr: ToastrService) { }\n\n  showSuccess(message: string, title: string) {\n    this.toastr.success(message, title);\n  }\n\n  showError(messages: string, title: string = \"\") {\n    this.toastr.error(messages, title);\n    \n  }\n\n  showInfo(message: string, title: string) {\n    this.toastr.info(message, title);\n  }\n\n  showWarning(message: string, title: string) {\n    this.toastr.warning(message, title);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhoneConfirmationComponent.html":{"url":"components/PhoneConfirmationComponent.html","title":"component - PhoneConfirmationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PhoneConfirmationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/phone/phone-confirmation/phone-confirmation.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirmation\n            \n\n            \n                styleUrls\n                ./phone-confirmation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./phone-confirmation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formattedPhone\n                            \n                            \n                                userPhone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/phone/phone-confirmation/phone-confirmation.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/phone/phone-confirmation/phone-confirmation.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formattedPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/phone-confirmation/phone-confirmation.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/phone-confirmation/phone-confirmation.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ROUTING_AUTH } from 'src/app/app.constants';\n\n@Component({\n  selector: 'app-confirmation',\n  templateUrl: './phone-confirmation.component.html',\n  styleUrls: ['./phone-confirmation.component.scss']\n})\nexport class PhoneConfirmationComponent implements OnInit {\n  userPhone: string = '';\n  formattedPhone: string | null = null;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.userPhone = history.state.data;\n    if (this.userPhone == '' || this.userPhone == undefined) \n      this.router.navigate(['/']);\n\n      this.formattedPhone = \"(\" + this.userPhone.substring(0, 3) + \")\" + this.userPhone.substring(3, 6) + \"-\" + this.userPhone.substring(6);\n  }\n\n}\n\n    \n\n    \n        The phone number {{formattedPhone}} was successfully registered for The Rock Church's Transportation app.\nPlease Log In to access the app.\n\n\n    \n\n    \n                \n                    ./phone-confirmation.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'The phone number {{formattedPhone}} was successfully registered for The Rock Church\\'s Transportation app.Please Log In to access the app.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhoneConfirmationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PhoneNumberDto.html":{"url":"interfaces/PhoneNumberDto.html","title":"interface - PhoneNumberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PhoneNumberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/account.ts\n        \n\n\n            \n                Description\n            \n            \n                Data Transfer Object to send and receive phone number.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:     string | null | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null | undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A strictly 10-digit string representing a valid phone number capable of SMS.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AuthenticationDto extends PhoneNumberDto {\n  /**\n   * A plain-text, non-hashed string representing a password. \n   * For security, ensure hashing takes place on the backend.\n   * Maximum length: 255 characters. Required by the backend.\n   */\n  password: string;\n}\n\n/**\n * Data Transfer Object to send and receive phone number.\n */\n export interface PhoneNumberDto {\n  /**\n   * A strictly 10-digit string representing a valid phone number capable of SMS.\n   */\n  phoneNumber: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to transmit a phone number - verification code pair.\n */\n export interface PhoneVerificationDto extends PhoneNumberDto {\n  /**\n   * A verification code that must match the code sent to the associated phone number\n   * in order to be verify the phone number.\n   */\n  code: string;\n}\n\n/**\n * Data Transfer Object sending and receiving a password reset token.\n */\n export interface ResetPasswordDto extends AuthenticationDto {\n  /**\n   * A password reset token assigned to a user from asp.net core Identity.\n   * The token is required and must match the generated token in order to successfully \n   * update a user's password. \n   */\n  token: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to send and receive all user information required for registering with the app.\n */\nexport interface UserForRegistrationDto extends AuthenticationDto {\n  /**\n   * A user's first name. Required by the backend. \n   */\n  firstName: string;\n  /**\n   * A user's last name. Required by the backend.\n   */\n  lastName: string;\n  /**\n   * Must be formatted as `sometext@moretext.TLD`. \n   * Not required by backend.\n   */\n  email: string | null;\n  /**\n   * A user's main street address. Required by the backend.\n   */\n  address1: string;\n  /**\n   * A user's apartment number, suite, or any other 'secondary' address. \n   * Not required by the backend. \n   */\n  address2: string | null;\n  /**\n   * The city portion of the user's address.\n   * Required by the backend.\n   */\n  city: string;\n  /**\n   * The zip code portion of the user's address. Typically 5 digits long.\n   * Required by the backend.\n   */\n  zipCode: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PhoneVerificationDto.html":{"url":"interfaces/PhoneVerificationDto.html","title":"interface - PhoneVerificationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PhoneVerificationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/account.ts\n        \n\n\n            \n                Description\n            \n            \n                Data Transfer Object to transmit a phone number - verification code pair.\n\n            \n\n            \n                Extends\n            \n            \n                        PhoneNumberDto\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A verification code that must match the code sent to the associated phone number\nin order to be verify the phone number.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AuthenticationDto extends PhoneNumberDto {\n  /**\n   * A plain-text, non-hashed string representing a password. \n   * For security, ensure hashing takes place on the backend.\n   * Maximum length: 255 characters. Required by the backend.\n   */\n  password: string;\n}\n\n/**\n * Data Transfer Object to send and receive phone number.\n */\n export interface PhoneNumberDto {\n  /**\n   * A strictly 10-digit string representing a valid phone number capable of SMS.\n   */\n  phoneNumber: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to transmit a phone number - verification code pair.\n */\n export interface PhoneVerificationDto extends PhoneNumberDto {\n  /**\n   * A verification code that must match the code sent to the associated phone number\n   * in order to be verify the phone number.\n   */\n  code: string;\n}\n\n/**\n * Data Transfer Object sending and receiving a password reset token.\n */\n export interface ResetPasswordDto extends AuthenticationDto {\n  /**\n   * A password reset token assigned to a user from asp.net core Identity.\n   * The token is required and must match the generated token in order to successfully \n   * update a user's password. \n   */\n  token: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to send and receive all user information required for registering with the app.\n */\nexport interface UserForRegistrationDto extends AuthenticationDto {\n  /**\n   * A user's first name. Required by the backend. \n   */\n  firstName: string;\n  /**\n   * A user's last name. Required by the backend.\n   */\n  lastName: string;\n  /**\n   * Must be formatted as `sometext@moretext.TLD`. \n   * Not required by backend.\n   */\n  email: string | null;\n  /**\n   * A user's main street address. Required by the backend.\n   */\n  address1: string;\n  /**\n   * A user's apartment number, suite, or any other 'secondary' address. \n   * Not required by the backend. \n   */\n  address2: string | null;\n  /**\n   * The city portion of the user's address.\n   * Required by the backend.\n   */\n  city: string;\n  /**\n   * The zip code portion of the user's address. Typically 5 digits long.\n   * Required by the backend.\n   */\n  zipCode: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/auth/register/register.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                hide\n                            \n                            \n                                hideConfirm\n                            \n                            \n                                isUniqueEmail\n                            \n                            \n                                passwordMinLength\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                registerForm\n                            \n                            \n                                submitted\n                            \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEmailError\n                            \n                            \n                                getFirstNameError\n                            \n                            \n                                getLastNameError\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                passwordMatchValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/auth/register/register.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getEmailError\n                        \n                    \n                \n            \n            \n                \ngetEmailError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/auth/register/register.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     \"You must enter a value\" | \"Not a valid email\" | \"\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFirstNameError\n                        \n                    \n                \n            \n            \n                \ngetFirstNameError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/auth/register/register.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     \"\" | \"First name is required\" | \"Name can only contain letters\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLastNameError\n                        \n                    \n                \n            \n            \n                \ngetLastNameError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/auth/register/register.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     \"\" | \"Name can only contain letters\" | \"Last name is required\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/auth/register/register.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(formGroup: FormGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/auth/register/register.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formGroup\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideConfirm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUniqueEmail\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMinLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        register\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Injectable, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { IConfig } from 'ngx-mask';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core/authentication/authentication.service';\nimport { UserForRegistrationDto } from 'src/app/shared/models/account';\nimport { API_REGISTRATION, ROUTING_VERIFY_PHONE } from 'src/app/app.constants';\nimport { Roles } from 'src/app/shared/models/roles';\n\nexport let options: Partial | (() => Partial);\n\n@Injectable({\n  providedIn:'root'\n})\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n    public registerForm: FormGroup;\n    validationErrors: string[] = [];\n    passwordMinLength = 3;\n    hide=true;\n    hideConfirm=true;\n    submitted=false;\n    isUniqueEmail=true;\n    phoneNumber = '';\n    error: boolean = false;\n\n  constructor(private authService: AuthenticationService,\n    private router: Router,\n    fb: FormBuilder) { \n        this.registerForm = fb.group({\n            'firstName':['', Validators.compose([Validators.maxLength(20), Validators.pattern('[a-zA-Z ]*'), Validators.required])],\n            'lastName':['', Validators.compose([Validators.maxLength(20), Validators.pattern('[a-zA-Z ]*'), Validators.required])],\n            'email':['', Validators.compose([Validators.email])],\n            'phoneNumber':['', Validators.compose([])],\n            'address1': ['', Validators.compose([Validators.required])],\n            'address2': [],\n            'city':['', Validators.compose([Validators.required])],\n            'zipCode':['', Validators.compose([Validators.required])],\n            'password':['', Validators.compose([Validators.minLength(3), Validators.required])],\n            'confirmPassword':['', Validators.compose([Validators.minLength(3), Validators.required])]\n        },{\n            // check whether or not our password and confirm password match\n            validator: this.passwordMatchValidator\n        })\n    }\n\n  ngOnInit(): void {\n  }\n\n  public register = (registerFormValue: any) => {\n\n    const formValues = { ...registerFormValue };\n    const user: UserForRegistrationDto = {\n      password: formValues.password,\n      phoneNumber: formValues.phoneNumber,\n      firstName: formValues.firstName.trim(),\n      lastName: formValues.lastName.trim(),\n      email: formValues.email !== '' ? formValues.email.trim() : null,\n      address1: formValues.address1.trim(),\n      address2: formValues.address2 !== null ? formValues.address2.trim() : null,\n      city: formValues.city.trim(),\n      zipCode: formValues.zipCode.trim()\n    }\n\n    this.authService.registerUser(API_REGISTRATION, user)\n      .subscribe(response => {\n        this.router.navigate([ROUTING_VERIFY_PHONE], {state: {data: response}});\n      }, error => {\n        if (error.status == 403) {\n          this.router.navigate([ROUTING_VERIFY_PHONE], {state: {data: user}});\n        }\n        this.validationErrors = error;\n      })\n  }\n\n  passwordMatchValidator(formGroup: FormGroup) {\n      const password: string = formGroup.get('password')?.value                 // get password from our password form control\n      const confirmPassword: string = formGroup.get('confirmPassword')?.value   // get password from our confirmPassword form control \n      // compare if the passwords match\n      if (password !== confirmPassword) {\n          formGroup.get('confirmPassword')?.setErrors({ NoPasswordMatch: true });\n      }\n  }\n\n  getEmailError() {\n      if (this.registerForm.controls['email'].hasError('required')) {\n          return 'You must enter a value';\n      }\n      return this.registerForm.controls['email'].hasError('email') ? 'Not a valid email' : '';\n  }\n\n  getFirstNameError() {\n    if (this.registerForm.controls['firstName'].hasError('required')) {\n      return 'First name is required';\n    }\n    return this.registerForm.controls['firstName'].hasError('pattern') ? 'Name can only contain letters' : '';\n  }\n\n  getLastNameError() {\n    if (this.registerForm.controls['lastName'].hasError('required')) {\n      return 'Last name is required';\n    }\n    return this.registerForm.controls['lastName'].hasError('pattern') ? 'Name can only contain letters' : '';\n  }\n\n}\n\n    \n\n    \n        \n    An unexpected error ocurred.\n    \n      \n        \n          \n  \n            \n              \n                First Name:\n                \n                {{getFirstNameError()}}\n              \n              \n                Last Name:\n                \n                {{getLastNameError()}}\n              \n            \n  \n            \n              \n                Email:\n                \n                mail\n                {{getEmailError()}}\n                This email is already in use\n              \n              \n                Phone:\n                \n                phone\n              \n            \n\n            \n\n              \n                Address 1:\n                \n              \n\n              \n                Address 2:\n                \n              \n\n              \n              \n                City:\n                \n              \n              \n                Zip Code:\n                \n              \n              \n              \n            \n  \n            \n              \n                Password:\n                \n                {{hide ? 'visibility_off' : 'visibility'}}\n                Password must be at least {{passwordMinLength}} characters\n              \n  \n              \n                Confirm Password:\n                \n                {{hideConfirm ? 'visibility_off' : 'visibility'}}\n                Passwords must match\n              \n            \n\n            \n              Register\n            \n\n          \n        \n      \n    \n  \n    \n\n    \n                \n                    ./register.component.scss\n                \n                .register-form\n{\n  width:90%;\n  margin: 0 auto;\n}\nbutton\n{\n  width:75%;\n}\n.w-one-third\n{\n  width: 33%;\n}\n.w-half\n{\n  width: 50%;\n}\nmat-form-field\n{\n  display: block;\n}\nmat-card-footer\n{\n  text-align:center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    An unexpected error ocurred.                                                                        First Name:                                {{getFirstNameError()}}                                            Last Name:                                {{getLastNameError()}}                                                                      Email:                                mail                {{getEmailError()}}                This email is already in use                                            Phone:                                phone                                                                    Address 1:                                                            Address 2:                                                                          City:                                                            Zip Code:                                                                                                                  Password:                                {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                Password must be at least {{passwordMinLength}} characters                                              Confirm Password:                                {{hideConfirm ? \\'visibility_off\\' : \\'visibility\\'}}                Passwords must match                                                    Register                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegistrationResponseDto.html":{"url":"interfaces/RegistrationResponseDto.html","title":"interface - RegistrationResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegistrationResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/response.ts\n        \n\n\n            \n                Description\n            \n            \n                A Data Transfer Object to flag a successful registration attempt along\nwith any errors that were encountered.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errors\n                                        \n                                \n                                \n                                        \n                                            isSuccessfulRegistration\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Records any and all errors encountered when attempting a registration.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSuccessfulRegistration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isSuccessfulRegistration:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A flag recording whether a registration attempt was successful.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { JwtTokenDto } from \"./jwt-token\";\n\n/**\n * A Data Transfer Object to flag a successful registration attempt along \n * with any errors that were encountered. \n * \n */\nexport interface RegistrationResponseDto {\n    /**\n     * A flag recording whether a registration attempt was successful. \n     */\n    isSuccessfulRegistration: boolean;\n\n    /**\n     * Records any and all errors encountered when attempting a registration. \n     */\n    errors: string[];\n}\n\n/**\n * A Data Transfer Object to pass access and refresh tokens upon successful authentication. \n */\nexport interface AuthResponseDto extends JwtTokenDto {\n  /**\n   * A flag recording whether an authentication attempt was successful. \n   */\n  isAuthSuccessful: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/password/reset-password/reset-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                styleUrls\n                ./reset-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Public\n                                hideConfirm\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                passwordMinLength\n                            \n                            \n                                    Private\n                                previousNavigationData\n                            \n                            \n                                    Public\n                                resetPasswordForm\n                            \n                            \n                                    Private\n                                returnUrl\n                            \n                            \n                                    Public\n                                submit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute, authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hideConfirm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        passwordMinLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        previousNavigationData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResetPasswordDto | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resetPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        submit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { API_RESET_PASSWORD, ROUTING_AUTH, ROUTING_UPDATED_PASSWORD } from 'src/app/app.constants';\nimport { AuthenticationService } from 'src/app/core/authentication/authentication.service';\nimport { UrlService } from 'src/app/core/services/url.service';\nimport Validation from 'src/app/shared/directives/validation';\nimport { ResetPasswordDto } from 'src/app/shared/models/account';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n  public resetPasswordForm!: FormGroup;\n  public password: string | null = null;\n  public passwordMinLength = 3;\n  public hide: boolean = true;\n  public hideConfirm: boolean = true;\n  public error: boolean = false;\n  private returnUrl: string | undefined;\n  private previousNavigationData: ResetPasswordDto | null = null;\n\n  constructor(private router: Router,\n    private route: ActivatedRoute,\n    private authService: AuthenticationService) { }\n\n  ngOnInit(): void {\n    this.previousNavigationData = history.state.data;\n    if (this.previousNavigationData == null || this.previousNavigationData == undefined) \n      this.router.navigate(['/']); \n\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '';\n\n    this.resetPasswordForm = new FormGroup({\n      password: new FormControl(\"\", [\n        Validators.required, \n        Validators.minLength(this.passwordMinLength)\n      ]),\n      confirmPassword: new FormControl(\"\", [Validators.required])\n    },\n    {\n      validators: [Validation.match('password', 'confirmPassword')]\n    });\n  }\n\n  public submit = (resetPasswordFormValue: any) => {\n    const formValue = { ...resetPasswordFormValue };\n    const resetPasswordDto: ResetPasswordDto = {\n      phoneNumber: this.previousNavigationData?.phoneNumber,\n      password: formValue.password,\n      token: this.previousNavigationData?.token\n    }\n\n    this.authService.resetPassword(API_RESET_PASSWORD, resetPasswordDto)\n      .subscribe(() => {\n        this.router.navigate([ROUTING_UPDATED_PASSWORD], {state: {data: resetPasswordDto.phoneNumber}});\n      }, error => {\n        this.router.navigate([this.returnUrl])\n      })\n  }\n\n}\n\n    \n\n    \n        \n  An unexpected error ocurred.\n  \n    \n      \n        \n\n          \n            \n              Password:\n              \n              {{hide ? 'visibility_off' : 'visibility'}}\n              Password must be at least {{passwordMinLength}} characters\n            \n\n            \n              Confirm Password:\n              \n              {{hideConfirm ? 'visibility_off' : 'visibility'}}\n              Passwords must match\n            \n          \n\n          \n            Submit\n          \n\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./reset-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  An unexpected error ocurred.                                                        Password:                            {{hide ? \\'visibility_off\\' : \\'visibility\\'}}              Password must be at least {{passwordMinLength}} characters                                      Confirm Password:                            {{hideConfirm ? \\'visibility_off\\' : \\'visibility\\'}}              Passwords must match                                            Submit                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResetPasswordDto.html":{"url":"interfaces/ResetPasswordDto.html","title":"interface - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/account.ts\n        \n\n\n            \n                Description\n            \n            \n                Data Transfer Object sending and receiving a password reset token.\n\n            \n\n            \n                Extends\n            \n            \n                        AuthenticationDto\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:     string | null | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null | undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A password reset token assigned to a user from asp.net core Identity.\nThe token is required and must match the generated token in order to successfully\nupdate a user's password.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AuthenticationDto extends PhoneNumberDto {\n  /**\n   * A plain-text, non-hashed string representing a password. \n   * For security, ensure hashing takes place on the backend.\n   * Maximum length: 255 characters. Required by the backend.\n   */\n  password: string;\n}\n\n/**\n * Data Transfer Object to send and receive phone number.\n */\n export interface PhoneNumberDto {\n  /**\n   * A strictly 10-digit string representing a valid phone number capable of SMS.\n   */\n  phoneNumber: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to transmit a phone number - verification code pair.\n */\n export interface PhoneVerificationDto extends PhoneNumberDto {\n  /**\n   * A verification code that must match the code sent to the associated phone number\n   * in order to be verify the phone number.\n   */\n  code: string;\n}\n\n/**\n * Data Transfer Object sending and receiving a password reset token.\n */\n export interface ResetPasswordDto extends AuthenticationDto {\n  /**\n   * A password reset token assigned to a user from asp.net core Identity.\n   * The token is required and must match the generated token in order to successfully \n   * update a user's password. \n   */\n  token: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to send and receive all user information required for registering with the app.\n */\nexport interface UserForRegistrationDto extends AuthenticationDto {\n  /**\n   * A user's first name. Required by the backend. \n   */\n  firstName: string;\n  /**\n   * A user's last name. Required by the backend.\n   */\n  lastName: string;\n  /**\n   * Must be formatted as `sometext@moretext.TLD`. \n   * Not required by backend.\n   */\n  email: string | null;\n  /**\n   * A user's main street address. Required by the backend.\n   */\n  address1: string;\n  /**\n   * A user's apartment number, suite, or any other 'secondary' address. \n   * Not required by the backend. \n   */\n  address2: string | null;\n  /**\n   * The city portion of the user's address.\n   * Required by the backend.\n   */\n  city: string;\n  /**\n   * The zip code portion of the user's address. Typically 5 digits long.\n   * Required by the backend.\n   */\n  zipCode: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerErrorComponent.html":{"url":"components/ServerErrorComponent.html","title":"component - ServerErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ServerErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/errors/pages/server-error/server-error.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-server-error\n            \n\n            \n                styleUrls\n                ./server-error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./server-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/errors/pages/server-error/server-error.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/errors/pages/server-error/server-error.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/errors/pages/server-error/server-error.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.scss']\n})\nexport class ServerErrorComponent implements OnInit {\n  error: any;\n\n  constructor(private router: Router) { \n    const navigation = this.router.getCurrentNavigation();\n    this.error = navigation?.extras?.state?.error;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Internal server error - refreshing the page will make the error disappear!\n\n  Error: {{error.message}}\n  Note: If you are seeing this then Angular is probably not to blame\n  What to do next?\n  \n    Open the Chrome dev tools\n    Inspet the network tab\n    Examine the request URL - make sure it is correct\n    Reproduce the error in Postman - if we see the same response, then the issue is not with the Front End\n  \n  Following is the stack trace - this is where your investigation should start!\n  {{error.details}}\n\n\n    \n\n    \n                \n                    ./server-error.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Internal server error - refreshing the page will make the error disappear!  Error: {{error.message}}  Note: If you are seeing this then Angular is probably not to blame  What to do next?      Open the Chrome dev tools    Inspet the network tab    Examine the request URL - make sure it is correct    Reproduce the error in Postman - if we see the same response, then the issue is not with the Front End    Following is the stack trace - this is where your investigation should start!  {{error.details}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ServerErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Angular Material imports\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule } from '@angular/material/core'\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n// Angular CDK imports\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n// Toastr Notifications\nimport { ToastrModule } from 'ngx-toastr';\n\n// JWT \nimport { JwtModule } from '@auth0/angular-jwt';\nimport { ACCESS_TOKEN } from '../app.constants';\n\n/**\n * Gets the user's access token for authentication. \n * @returns The access token stored in local storage.\n */\nexport function tokenGetter() {\n  return localStorage.getItem(ACCESS_TOKEN);\n}\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatProgressBarModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    FlexLayoutModule,\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right'\n    }),\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        allowedDomains: [\"localhost:5001\"],\n        disallowedRoutes: []\n      }\n    })\n  ],\n  exports: [\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatProgressBarModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    FlexLayoutModule,\n    ToastrModule\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdatedPasswordComponent.html":{"url":"components/UpdatedPasswordComponent.html","title":"component - UpdatedPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdatedPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/password/updated-password/updated-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-updated-password\n            \n\n            \n                styleUrls\n                ./updated-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./updated-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                previousNavigationData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/password/updated-password/updated-password.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/password/updated-password/updated-password.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        previousNavigationData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/updated-password/updated-password.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ROUTING_AUTH } from 'src/app/app.constants';\n\n@Component({\n  selector: 'app-updated-password',\n  templateUrl: './updated-password.component.html',\n  styleUrls: ['./updated-password.component.scss']\n})\nexport class UpdatedPasswordComponent implements OnInit {\n   previousNavigationData: string | undefined;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.previousNavigationData = history.state.data;\n    if (this.previousNavigationData == '' || this.previousNavigationData == undefined) {\n      this.router.navigate(['/']); \n    }\n  }\n\n}\n\n    \n\n    \n        The password was successfully reset.\nPlease Log In to access the app.\n\n    \n\n    \n                \n                    ./updated-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'The password was successfully reset.Please Log In to access the app.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdatedPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UrlService.html":{"url":"injectables/UrlService.html","title":"injectable - UrlService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UrlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/url.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                previousUrl\n                            \n                            \n                                    Public\n                                previousUrl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setPreviousUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/url.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setPreviousUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPreviousUrl(previousUrl: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/url.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    previousUrl\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        previousUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/url.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        previousUrl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.previousUrl.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/url.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UrlService {\n  private previousUrl: BehaviorSubject = new BehaviorSubject(null);\n  public previousUrl$: Observable = this.previousUrl.asObservable();\n\n  constructor() {}\n\n  public setPreviousUrl(previousUrl: string | null) {\n    this.previousUrl.next(previousUrl);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserForRegistrationDto.html":{"url":"interfaces/UserForRegistrationDto.html","title":"interface - UserForRegistrationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserForRegistrationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/account.ts\n        \n\n\n            \n                Description\n            \n            \n                Data Transfer Object to send and receive all user information required for registering with the app.\n\n            \n\n            \n                Extends\n            \n            \n                        AuthenticationDto\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address1\n                                        \n                                \n                                \n                                        \n                                            address2\n                                        \n                                \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            zipCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A user's main street address. Required by the backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address2:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A user's apartment number, suite, or any other 'secondary' address.\nNot required by the backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The city portion of the user's address.\nRequired by the backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Must be formatted as sometext@moretext.TLD.\nNot required by backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A user's first name. Required by the backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A user's last name. Required by the backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zipCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The zip code portion of the user's address. Typically 5 digits long.\nRequired by the backend.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AuthenticationDto extends PhoneNumberDto {\n  /**\n   * A plain-text, non-hashed string representing a password. \n   * For security, ensure hashing takes place on the backend.\n   * Maximum length: 255 characters. Required by the backend.\n   */\n  password: string;\n}\n\n/**\n * Data Transfer Object to send and receive phone number.\n */\n export interface PhoneNumberDto {\n  /**\n   * A strictly 10-digit string representing a valid phone number capable of SMS.\n   */\n  phoneNumber: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to transmit a phone number - verification code pair.\n */\n export interface PhoneVerificationDto extends PhoneNumberDto {\n  /**\n   * A verification code that must match the code sent to the associated phone number\n   * in order to be verify the phone number.\n   */\n  code: string;\n}\n\n/**\n * Data Transfer Object sending and receiving a password reset token.\n */\n export interface ResetPasswordDto extends AuthenticationDto {\n  /**\n   * A password reset token assigned to a user from asp.net core Identity.\n   * The token is required and must match the generated token in order to successfully \n   * update a user's password. \n   */\n  token: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to send and receive all user information required for registering with the app.\n */\nexport interface UserForRegistrationDto extends AuthenticationDto {\n  /**\n   * A user's first name. Required by the backend. \n   */\n  firstName: string;\n  /**\n   * A user's last name. Required by the backend.\n   */\n  lastName: string;\n  /**\n   * Must be formatted as `sometext@moretext.TLD`. \n   * Not required by backend.\n   */\n  email: string | null;\n  /**\n   * A user's main street address. Required by the backend.\n   */\n  address1: string;\n  /**\n   * A user's apartment number, suite, or any other 'secondary' address. \n   * Not required by the backend. \n   */\n  address2: string | null;\n  /**\n   * The city portion of the user's address.\n   * Required by the backend.\n   */\n  city: string;\n  /**\n   * The zip code portion of the user's address. Typically 5 digits long.\n   * Required by the backend.\n   */\n  zipCode: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Validation.html":{"url":"classes/Validation.html","title":"class - Validation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Validation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/validation.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                match\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        match\n                        \n                    \n                \n            \n            \n                \n                    \n                    match(controlName: string, checkControlName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/validation.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checkControlName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl, ValidatorFn } from \"@angular/forms\";\n\nexport default class Validation {\n  static match(controlName: string, checkControlName: string): ValidatorFn {\n    return (controls: AbstractControl) => {\n      const control = controls.get(controlName);\n      const checkControl = controls.get(checkControlName);\n\n      if (control == null || checkControl == null) {\n        return null; \n      }\n\n      if (checkControl.errors && !checkControl.errors.matching) {\n        return null;\n      }\n\n      if (control.value !== checkControl.value) {\n        controls.get(checkControlName)?.setErrors({ matching: true });\n        return { matching: true };\n      } else {\n        return null;\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VerifyPhoneComponent.html":{"url":"components/VerifyPhoneComponent.html","title":"component - VerifyPhoneComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VerifyPhoneComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/phone/verify-phone/verify-phone.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-phone\n            \n\n            \n                styleUrls\n                ./verify-phone.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./verify-phone.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                codeLength\n                            \n                            \n                                    Private\n                                phoneNumber\n                            \n                            \n                                    Private\n                                previousNavigationData\n                            \n                            \n                                    Private\n                                previousUrl\n                            \n                            \n                                    Private\n                                returnUrl\n                            \n                            \n                                    Public\n                                verifyPhoneForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, route: ActivatedRoute, urlService: UrlService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        urlService\n                                                  \n                                                        \n                                                                        UrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        verify\n                        \n                    \n                \n            \n            \n                \n                    \n                    verify()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        codeLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        previousNavigationData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PhoneNumberDto | ResetPasswordDto | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        previousUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        verifyPhoneForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IConfig } from 'ngx-mask';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthenticationService } from 'src/app/core/authentication/authentication.service';\nimport { API_VERIFICATION, API_CONFIRM_PHONE, ROUTING_AUTH, ROUTING_CONFIRM_PHONE, ROUTING_FORGOT_PASSWORD, ROUTING_RESET_PASSWORD, API_RESET_PASSWORD_TOKEN } from 'src/app/app.constants';\nimport { UrlService } from 'src/app/core/services/url.service';\nimport { PhoneNumberDto, PhoneVerificationDto, ResetPasswordDto } from 'src/app/shared/models/account';\n\nexport let options: Partial | (() => Partial);\n\n@Component({\n  selector: 'app-confirm-phone',\n  templateUrl: './verify-phone.component.html',\n  styleUrls: ['./verify-phone.component.scss']\n})\nexport class VerifyPhoneComponent implements OnInit {\n  public verifyPhoneForm: FormGroup;\n  codeLength: number = 6;\n  private phoneNumber: string | null | undefined;\n  private previousNavigationData: PhoneNumberDto | ResetPasswordDto | null = null;\n  private previousUrl: string | null = null;\n  private returnUrl: string| undefined;\n\n  constructor(private authService: AuthenticationService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private urlService: UrlService,\n    fb: FormBuilder) { \n      this.verifyPhoneForm = fb.group ({\n        'verifyCode':['', Validators.compose([Validators.maxLength(this.codeLength), Validators.required])]\n      })\n    }\n\n    // Should accept an object with a phoneNumber property\n  ngOnInit(): void {\n    this.previousNavigationData = history.state.data;\n    if (this.previousNavigationData == null || this.previousNavigationData == undefined) \n      this.router.navigate(['/']); \n\n    this.phoneNumber = this.previousNavigationData?.phoneNumber;\n\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '';\n\n    this.urlService.previousUrl$.subscribe((previousUrl: string | null) => {\n      this.previousUrl = previousUrl;\n    })\n  }\n\n  public verify() {\n    const phoneVerificationDto: PhoneVerificationDto = {\n      code: this.verifyPhoneForm.value.verifyCode,\n      phoneNumber: this.phoneNumber\n    }\n\n    // Set the information to branch where verify phone sends its data\n    if (this.previousUrl?.includes(ROUTING_AUTH)) {\n      // If the previous url was the auth (registration) page, verify and confirm phone number\n      this.authService.confirmPhone(API_CONFIRM_PHONE, phoneVerificationDto)\n      .subscribe(() => {\n        this.router.navigate([ROUTING_CONFIRM_PHONE], {state: {data: this.phoneNumber}});\n      }, error => {\n        this.router.navigate([this.returnUrl])\n      })\n    } else if (this.previousUrl?.includes(ROUTING_FORGOT_PASSWORD)){\n      this.authService.resetPasswordToken(API_RESET_PASSWORD_TOKEN, phoneVerificationDto)\n      .subscribe(response => {\n        this.router.navigate([ROUTING_RESET_PASSWORD], {state: {data: response}});\n      }, error => {\n        this.router.navigate([this.returnUrl])\n      })\n    }\n  }  \n}\n\n    \n\n    \n        \n \n    \n      \n\n        \n          Phone Verification\n        \n        Please enter the verification code that was sent to you to confirm your phone number.\n        Your account registration will not be complete until your phone number has been verified.\n        \n          Verification Code:\n          \n          Your verification code is required\n        \n\n        \n          Verify\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./verify-phone.component.scss\n                \n                mat-card {\n  text-align:center;\n  max-width: 80%;\n  margin:5% auto;\n}\nmat-card-header {\n  display:block;\n}\n\nmat-card-footer {\n  margin: 0 auto 10px;\n}\n#phone-verification {\n  text-align:center;\n  letter-spacing: 18px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                             Phone Verification                Please enter the verification code that was sent to you to confirm your phone number.        Your account registration will not be complete until your phone number has been verified.                  Verification Code:                    Your verification code is required                          Verify                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VerifyPhoneComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            ACCESS_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            API_CONFIRM_PHONE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            API_FORGOT_PASSWORD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            API_LOGIN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            API_REGISTRATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            API_RESET_PASSWORD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            API_RESET_PASSWORD_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            API_TOKENS_REFRESH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            API_VERIFICATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            IDENTITY_ROLES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            NOT_FOUND\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            REFRESH_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            ROUTING_AUTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            ROUTING_CONFIRM_PHONE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            ROUTING_FORBIDDEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            ROUTING_FORGOT_PASSWORD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            ROUTING_MANAGE_TEMPLATES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            ROUTING_RESET_PASSWORD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            ROUTING_UPDATED_PASSWORD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            ROUTING_VERIFY_PHONE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            SERVER_ERROR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/app/core/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/header/nav.component.ts\n            \n            component\n            NavComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/environment-url.service.ts\n            \n            injectable\n            EnvironmentUrlService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/url.service.ts\n            \n            injectable\n            UrlService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/login/login.component.ts\n            \n            injectable\n            LoginComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/login/login.component.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/register/register.component.ts\n            \n            injectable\n            RegisterComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/register/register.component.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/account/password/forgot-password/forgot-password.component.ts\n            \n            component\n            ForgotPasswordComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/account/password/forgot-password/forgot-password.component.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/account/password/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/modules/account/password/updated-password/updated-password.component.ts\n            \n            component\n            UpdatedPasswordComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/account/phone/phone-confirmation/phone-confirmation.component.ts\n            \n            component\n            PhoneConfirmationComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/account/phone/verify-phone/verify-phone.component.ts\n            \n            component\n            VerifyPhoneComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/modules/account/phone/verify-phone/verify-phone.component.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/church-services/manage-templates/manage-templates.component.ts\n            \n            component\n            ManageTemplatesComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/dashboard/pages/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/errors/pages/forbidden/forbidden.component.ts\n            \n            component\n            ForbiddenComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/errors/pages/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/errors/pages/server-error/server-error.component.ts\n            \n            component\n            ServerErrorComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/directives/validation.ts\n            \n            class\n            Validation\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/account.ts\n            \n            interface\n            AuthenticationDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/account.ts\n            \n            interface\n            PhoneNumberDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/account.ts\n            \n            interface\n            PhoneVerificationDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/account.ts\n            \n            interface\n            ResetPasswordDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/account.ts\n            \n            interface\n            UserForRegistrationDto\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/shared/models/jwt-token.ts\n            \n            interface\n            JwtTokenDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/response.ts\n            \n            interface\n            AuthResponseDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/response.ts\n            \n            interface\n            RegistrationResponseDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/shared.module.ts\n            \n            function\n            tokenGetter\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.0.3\n        \n            @angular/cdk : ^12.2.3\n        \n            @angular/common : ~13.0.2\n        \n            @angular/compiler : ~13.0.2\n        \n            @angular/core : ~13.0.2\n        \n            @angular/flex-layout : ^12.0.0-beta.34\n        \n            @angular/forms : ~13.0.2\n        \n            @angular/material : ^12.2.3\n        \n            @angular/platform-browser : ~13.0.2\n        \n            @angular/platform-browser-dynamic : ~13.0.2\n        \n            @angular/router : ~13.0.2\n        \n            @auth0/angular-jwt : ^5.0.2\n        \n            ngx-mask : ^12.0.0\n        \n            ngx-toastr : ^14.1.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Roles   (src/.../roles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/models/roles.ts\n    \n        \n            \n                \n                    \n                        \n                        Roles\n                    \n                \n                        \n                            \n                                 superAdmin\n                            \n                        \n                        \n                            \n                                Value : SuperAdmin\n                            \n                        \n                        \n                            \n                                 administrator\n                            \n                        \n                        \n                            \n                                Value : Administrator\n                            \n                        \n                        \n                            \n                                 driver\n                            \n                        \n                        \n                            \n                                Value : Driver\n                            \n                        \n                        \n                            \n                                 user\n                            \n                        \n                        \n                            \n                                Value : User\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            tokenGetter   (src/.../shared.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/shared.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tokenGetter\n                        \n                    \n                \n            \n            \n                \ntokenGetter()\n                \n            \n\n\n\n\n            \n                \n                    Gets the user's access token for authentication.\n\n\n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTransportationClient\nThis project is the client side for The Rock's Transportation app. \nError Handling\nLogic for handling errors returned from the server can be found at core/interceptors/error.interceptor.ts.\nLogic for handling errors caught before leaving the client side can be found at core/guards/\nUsing Angular CLI\nThis project was generated with Angular CLI version 13.0.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAppModule -->\n\nAuthComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nForbiddenComponent\n\nForbiddenComponent\n\nAppModule -->\n\nForbiddenComponent->AppModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAppModule -->\n\nForgotPasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nManageTemplatesComponent\n\nManageTemplatesComponent\n\nAppModule -->\n\nManageTemplatesComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nPhoneConfirmationComponent\n\nPhoneConfirmationComponent\n\nAppModule -->\n\nPhoneConfirmationComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nServerErrorComponent\n\nServerErrorComponent\n\nAppModule -->\n\nServerErrorComponent->AppModule\n\n\n\n\n\nUpdatedPasswordComponent\n\nUpdatedPasswordComponent\n\nAppModule -->\n\nUpdatedPasswordComponent->AppModule\n\n\n\n\n\nVerifyPhoneComponent\n\nVerifyPhoneComponent\n\nAppModule -->\n\nVerifyPhoneComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nUrlService\n\nUrlService\n\nAppModule -->\n\nUrlService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        13 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACCESS_TOKEN   (src/.../app.constants.ts)\n                        \n                        \n                            API_CONFIRM_PHONE   (src/.../app.constants.ts)\n                        \n                        \n                            API_FORGOT_PASSWORD   (src/.../app.constants.ts)\n                        \n                        \n                            API_LOGIN   (src/.../app.constants.ts)\n                        \n                        \n                            API_REGISTRATION   (src/.../app.constants.ts)\n                        \n                        \n                            API_RESET_PASSWORD   (src/.../app.constants.ts)\n                        \n                        \n                            API_RESET_PASSWORD_TOKEN   (src/.../app.constants.ts)\n                        \n                        \n                            API_TOKENS_REFRESH   (src/.../app.constants.ts)\n                        \n                        \n                            API_VERIFICATION   (src/.../app.constants.ts)\n                        \n                        \n                            IDENTITY_ROLES   (src/.../app.constants.ts)\n                        \n                        \n                            NOT_FOUND   (src/.../app.constants.ts)\n                        \n                        \n                            options   (src/.../forgot-password.component.ts)\n                        \n                        \n                            options   (src/.../register.component.ts)\n                        \n                        \n                            options   (src/.../login.component.ts)\n                        \n                        \n                            options   (src/.../verify-phone.component.ts)\n                        \n                        \n                            REFRESH_TOKEN   (src/.../app.constants.ts)\n                        \n                        \n                            ROUTING_AUTH   (src/.../app.constants.ts)\n                        \n                        \n                            ROUTING_CONFIRM_PHONE   (src/.../app.constants.ts)\n                        \n                        \n                            ROUTING_FORBIDDEN   (src/.../app.constants.ts)\n                        \n                        \n                            ROUTING_FORGOT_PASSWORD   (src/.../app.constants.ts)\n                        \n                        \n                            ROUTING_MANAGE_TEMPLATES   (src/.../app.constants.ts)\n                        \n                        \n                            ROUTING_RESET_PASSWORD   (src/.../app.constants.ts)\n                        \n                        \n                            ROUTING_UPDATED_PASSWORD   (src/.../app.constants.ts)\n                        \n                        \n                            ROUTING_VERIFY_PHONE   (src/.../app.constants.ts)\n                        \n                        \n                            SERVER_ERROR   (src/.../app.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ACCESS_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"accessToken\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        API_CONFIRM_PHONE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"api/Accounts/PhoneConfirmation\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        API_FORGOT_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"api/Accounts/ForgotPassword\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        API_LOGIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"api/Accounts/Login\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        API_REGISTRATION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"api/Accounts/Registration\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        API_RESET_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"api/Accounts/ResetPassword\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        API_RESET_PASSWORD_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"api/Accounts/ResetPasswordToken\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        API_TOKENS_REFRESH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"api/Tokens/Refresh\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        API_VERIFICATION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"api/Accounts/PhoneVerification\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IDENTITY_ROLES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NOT_FOUND\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '404'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REFRESH_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"refreshToken\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROUTING_AUTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'auth'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROUTING_CONFIRM_PHONE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'phone-confirmation'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROUTING_FORBIDDEN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'forbidden'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROUTING_FORGOT_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'password/forgot-password'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROUTING_MANAGE_TEMPLATES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'manage-templates'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROUTING_RESET_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'password/reset-password'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROUTING_UPDATED_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'password/updated'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROUTING_VERIFY_PHONE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'verify-phone'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SERVER_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'server-error'\n                    \n                \n\n\n        \n    \n\n    src/app/modules/account/password/forgot-password/forgot-password.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial | \n\n                    \n                \n\n\n        \n    \n\n    src/app/modules/account/auth/register/register.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial | \n\n                    \n                \n\n\n        \n    \n\n    src/app/modules/account/auth/login/login.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial | \n\n                    \n                \n\n\n        \n    \n\n    src/app/modules/account/phone/verify-phone/verify-phone.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial | \n\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
