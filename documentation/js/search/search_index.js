var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AccountService.html",[0,0.974,1,2.042]],["body/injectables/AccountService.html",[0,1.159,1,2.431,2,1.559,3,0.185,4,0.164,5,0.164,6,2.482,7,1.335,8,2.711,9,0.976,10,4.214,11,1.542,12,2.878,13,0.185,14,0.769,15,2.509,16,4.911,17,4.222,18,4.222,19,0.531,20,2.482,21,5.119,22,4.628,23,3.393,24,0.93,25,2.911,26,1.969,27,1.542,28,1.258,29,0.023,30,0.611,31,0.7,32,0.715,33,4.351,34,4.331,35,5.407,36,3.592,37,4.069,38,3.592,39,3.741,40,1.969,41,1.287,42,1.362,43,2.911,44,2.14,45,3.131,46,3.592,47,3.494,48,3.592,49,2.108,50,1.254,51,4.214,52,5.076,53,2.806,54,4.536,55,2.238,56,2.911,57,2.02,58,4.101,59,4.214,60,2.375,61,2.257,62,2.911,63,5.428,64,2.38,65,0.73,66,2.482,67,2.911,68,1.988,69,0.409,70,4.351,71,1.82,72,1.679,73,2.482,74,1.559,75,2.482,76,1.454,77,1.361,78,0.185,79,0.302,80,2.462,81,0.801,82,1.006,83,0.849,84,0.926,85,1.922,86,4.222,87,2.911,88,0.013,89,0.013]],["title/guards/AdminGuard.html",[90,2.212,91,2.417]],["body/guards/AdminGuard.html",[0,1.381,3,0.238,4,0.21,5,0.21,7,1.313,13,0.238,19,0.683,24,0.86,26,2.346,27,1.837,28,1.163,29,0.022,30,0.565,31,0.61,32,1.232,40,2.346,65,0.688,69,0.525,76,1.869,77,1.749,78,0.238,79,0.388,80,2.35,81,1.029,82,1.292,83,0.86,85,1.949,88,0.015,89,0.015,90,3.138,91,4.135,92,2.826,93,3.19,94,3.492,95,1.305,96,4.279,97,4.574,98,5.161,99,4.574,100,0.974,101,4.911,102,3.741,103,4.535,104,2.201,105,3.741,106,3.428,107,5.161,108,6.054,109,5.161,110,2.12,111,5.019,112,4.279,113,5.161,114,3.242,115,5.161,116,3.741,117,4.279,118,0.358,119,5.019,120,4.135,121,3.428,122,3.138,123,2.069,124,5.161,125,4.279,126,3.792,127,4.279,128,4.279,129,2.201,130,2.484,131,3.034,132,1.089,133,3.741,134,0.972,135,3.741,136,3.741,137,2.826,138,2.004,139,3.19]],["title/components/AppComponent.html",[118,0.252,140,0.869]],["body/components/AppComponent.html",[3,0.203,4,0.18,5,0.18,9,0.74,13,0.203,14,0.822,19,0.583,24,1.023,28,0.74,29,0.022,30,0.587,31,0.688,32,0.784,41,1.355,42,1.434,50,0.62,65,0.725,69,0.449,77,2.105,78,0.203,79,0.332,81,0.879,82,1.555,83,0.548,84,0.959,88,0.014,89,0.014,95,1.17,100,0.874,104,2.076,118,0.371,132,0.93,134,1.17,140,1.39,141,0.984,142,0.984,143,0.984,144,0.984,145,2.724,146,1.701,147,0.984,148,2.181,149,1.222,150,1.387,151,5.214,152,1.387,153,4.503,154,5.214,155,3.94,156,4.446,157,1.744,158,1.843,159,2.646,160,3.409,161,4.503,162,2.598,163,3.195,164,1.17,165,2.244,166,3.195,167,3.839,168,3.402,169,3.195,170,3.839,171,3.839,172,3.195,173,2.724,174,3.195,175,2.724,176,2.724,177,3.195,178,3.195,179,3.195,180,3.195,181,2.414,182,4.503,183,3.195,184,3.195,185,2.182,186,2.724,187,3.195,188,2.724,189,2.182,190,4.278,191,3.195,192,3.195,193,2.724,194,3.195,195,3.195,196,2.598,197,3.195,198,2.414,199,2.724,200,1.997,201,3.195,202,1.596,203,0.984,204,1.387,205,1.387,206,0.984,207,1.648,208,0.984,209,0.984,210,0.74,211,0.984,212,0.74,213,0.984,214,0.784,215,0.984,216,0.74,217,0.984,218,0.74,219,0.984,220,1.607,221,0.784,222,0.984,223,0.74,224,0.984,225,0.784,226,0.984,227,0.74,228,0.984,229,0.74,230,0.984,231,0.784,232,0.984,233,0.74,234,0.74,235,0.83,236,0.984,237,0.74,238,0.984,239,0.74,240,0.93,241,0.62,242,0.984,243,0.984]],["title/modules/AppModule.html",[244,2.674,245,2.417]],["body/modules/AppModule.html",[3,0.188,4,0.167,5,0.167,27,1.561,29,0.023,50,0.575,65,0.872,68,2.023,69,0.416,78,0.188,79,0.307,88,0.013,89,0.013,130,1.299,140,1.655,149,0.508,160,3.235,175,2.525,210,1.4,212,1.4,214,1.483,216,1.4,218,1.4,221,1.483,223,1.4,225,1.483,227,1.4,229,1.4,231,1.483,233,1.4,234,1.4,237,1.4,239,1.4,245,5.032,246,1.708,247,2.525,248,2.525,249,2.525,250,2.525,251,2.525,252,3.775,253,3.775,254,3.775,255,3.637,256,2.237,257,2.961,258,3.637,259,4.266,260,3.223,261,4.266,262,3.223,263,4.266,264,2.237,265,2.237,266,4.266,267,4.266,268,4.266,269,4.266,270,1.479,271,2.961,272,2.961,273,2.961,274,2.961,275,2.961,276,2.525,277,2.023,278,2.525,279,2.525,280,2.023,281,2.525,282,2.525,283,2.961,284,2.961,285,2.961,286,1.479,287,1.708,288,2.961,289,2.525,290,1.851,291,2.525,292,2.525,293,1.851,294,4.263,295,2.525,296,2.525,297,2.023,298,2.023,299,2.525,300,2.525,301,2.525,302,1.851,303,2.525,304,2.023,305,2.525,306,2.525,307,1.851,308,2.961,309,2.961,310,2.961,311,2.961]],["title/modules/AppRoutingModule.html",[244,2.674,252,2.212]],["body/modules/AppRoutingModule.html",[3,0.236,4,0.209,5,0.209,9,0.861,29,0.023,49,1.841,65,0.87,69,0.522,78,0.236,79,0.386,88,0.015,89,0.015,91,2.538,101,3.775,118,0.496,121,2.538,132,1.082,210,1.158,212,1.158,216,1.158,218,1.158,223,1.158,227,1.158,229,1.158,233,1.158,234,1.158,235,0.966,237,1.158,239,1.158,241,0.97,246,2.144,252,3.124,260,2.808,262,3.775,276,3.168,277,2.538,278,3.168,279,3.168,280,2.538,281,3.168,282,3.168,289,3.168,290,2.323,291,3.168,292,3.168,293,3.124,294,4.813,295,3.168,296,3.168,297,2.538,298,2.538,299,3.168,300,3.168,301,3.168,302,3.124,303,3.168,304,2.538,305,3.168,306,3.168,307,3.124,312,3.716,313,3.716,314,4.997,315,3.529,316,3.413,317,3.716,318,3.716,319,1.737,320,3.168,321,1.532,322,6.014,323,2.538,324,1.737,325,2.538,326,4.997,327,4.997,328,4.997,329,2.808,330,3.716,331,3.775,332,1.63,333,3.716,334,3.168]],["title/components/AuthComponent.html",[118,0.252,210,0.82]],["body/components/AuthComponent.html",[3,0.236,4,0.209,5,0.209,9,0.86,13,0.236,19,1.029,24,0.856,29,0.022,30,0.562,49,1.968,50,0.72,65,0.451,69,0.521,78,0.236,79,0.385,83,0.636,88,0.015,89,0.015,95,1.297,100,0.969,118,0.402,134,1.297,140,0.911,141,1.143,142,1.143,143,1.143,144,1.143,146,1.84,147,1.143,148,2.219,149,1.235,150,1.538,152,1.538,157,1.859,164,1.297,203,1.143,204,1.538,205,1.538,206,1.143,207,1.756,208,1.143,209,1.143,210,1.398,211,1.143,212,0.86,213,1.143,214,0.911,215,1.143,216,0.86,217,1.143,218,0.86,219,1.143,220,1.738,221,0.911,222,1.143,223,0.86,224,1.143,225,0.911,226,1.143,227,0.86,228,1.143,229,0.86,230,1.143,231,0.911,232,1.143,233,0.86,234,0.86,235,0.964,236,1.143,237,0.86,238,1.143,239,0.86,240,1.08,241,0.72,242,1.143,243,1.143,323,4.3,335,3.163,336,5.641,337,4.991,338,3.71,339,3.71,340,4.991,341,3.014,342,4.256,343,4.256,344,4.991,345,4.991,346,4.262,347,3.771,348,3.163,349,2.319,350,2.319,351,2.319,352,3.409,353,3.12,354,3.163,355,4.256,356,3.71]],["title/guards/AuthGuard.html",[90,2.212,316,2.417]],["body/guards/AuthGuard.html",[0,1.137,3,0.18,4,0.159,5,0.159,7,1.242,8,2.064,11,1.962,13,0.18,19,0.517,24,0.836,26,1.931,27,1.512,28,1.13,29,0.022,30,0.549,31,0.593,32,1.197,37,2.384,40,1.931,45,1.635,57,1.94,65,0.692,69,0.398,76,1.415,77,1.324,78,0.18,79,0.294,80,2.212,81,0.78,82,1.851,83,0.919,84,0.861,85,2.081,88,0.012,89,0.012,90,2.583,92,2.141,94,3.092,95,1.074,96,3.523,97,4.049,100,0.802,101,4.494,104,2.053,109,4.569,110,2.053,112,3.523,113,4.569,114,2.87,115,4.569,117,3.523,118,0.294,120,4.063,122,2.583,123,1.703,124,4.569,125,3.523,126,3.122,127,3.523,128,3.523,129,1.812,130,2.609,131,3.186,132,0.825,134,0.736,137,2.141,138,1.518,139,2.416,158,1.635,159,2.505,162,2.813,165,1.851,176,2.416,207,0.825,316,3.66,319,1.324,321,2.452,357,2.416,358,4.569,359,5.948,360,4.132,361,2.834,362,4.132,363,2.609,364,3.66,365,2.064,366,2.834,367,5.359,368,3.289,369,3.432,370,3.523,371,2.822,372,1.931,373,5.359,374,4.132,375,2.834,376,2.055,377,3.523,378,1.931,379,2.35,380,4.132,381,2.822,382,2.822,383,3.562,384,4.132,385,1.415,386,1.324,387,2.213,388,1.935,389,2.416,390,1.935,391,6.141,392,4.132,393,2.834,394,2.834,395,2.834,396,2.834,397,4.132,398,2.141,399,2.141,400,4.049,401,2.834,402,2.834,403,2.834,404,2.834,405,2.834,406,4.132,407,2.834,408,4.132,409,2.834,410,2.416,411,2.416,412,2.834]],["title/interfaces/AuthResponseDto.html",[413,1.03,414,2.212]],["body/interfaces/AuthResponseDto.html",[3,0.284,4,0.251,5,0.251,7,1.035,13,0.284,14,1.028,29,0.022,31,0.543,44,2.013,57,1.457,65,0.543,78,0.359,84,0.718,88,0.017,89,0.017,129,2.842,363,2.842,368,3.018,369,3.935,376,1.946,379,2.471,387,3.305,413,1.64,414,3.522,415,2.088,416,3.375,417,3.082,418,2.706,419,3.848,420,4.804,421,3.018,422,5.525,423,4.896,424,5.261,425,4.662,426,5.525,427,2.577,428,3.858,429,3.809,430,4.215,431,4.804,432,3.051,433,3.809,434,3.809,435,3.809]],["title/interfaces/AuthenticationDto.html",[413,1.03,436,1.654]],["body/interfaces/AuthenticationDto.html",[3,0.205,4,0.181,5,0.181,7,0.747,11,2.335,13,0.205,14,0.827,29,0.023,30,0.51,31,0.392,44,1.953,49,2.188,50,0.879,53,1.506,55,2.343,57,1.953,60,1.328,61,3.633,64,1.413,78,0.381,84,1.129,88,0.014,89,0.014,110,1.478,123,2.796,149,0.552,165,1.963,196,1.859,241,1.205,324,1.506,341,1.61,363,1.413,365,2.263,399,2.435,413,1.743,415,1.506,417,2.991,418,2.626,421,3.207,436,2.656,437,1.859,438,2.63,439,2.435,440,2.832,441,1.987,442,2.832,443,2.832,444,3.022,445,2.832,446,2.832,447,2.832,448,2.832,449,2.832,450,2.832,451,2.832,452,2.832,453,2.426,454,2.426,455,2.832,456,2.014,457,2.014,458,2.014,459,1.726,460,2.014,461,2.014,462,1.413,463,1.565,464,2.014,465,2.799,466,2.014,467,2.263,468,2.014,469,2.832,470,2.014,471,2.014,472,2.014,473,1.859,474,1.859,475,1.859,476,1.859,477,1.726,478,1.859,479,2.014,480,1.506,481,1.726,482,1.859,483,1.859,484,1.859,485,2.014,486,2.014,487,1.859,488,2.014,489,3.279,490,1.859,491,2.014,492,2.014,493,2.014,494,1.859,495,2.613,496,2.832,497,1.859,498,2.014,499,2.014,500,2.014,501,1.859,502,1.859]],["title/injectables/AuthenticationService.html",[0,0.974,159,1.654]],["body/injectables/AuthenticationService.html",[0,0.899,2,1.113,3,0.132,4,0.117,5,0.117,7,1.279,8,2.285,9,0.757,13,0.132,14,0.596,15,2.664,19,0.379,20,1.772,21,4.875,22,3.9,23,2.859,24,1.032,26,1.527,27,1.196,28,1.223,29,0.023,30,0.594,31,0.556,32,0.51,33,3.756,34,4.111,35,5.132,36,2.785,37,3.989,38,3.9,39,2.468,40,1.527,41,1.529,42,1.618,44,2.131,45,3.299,47,3.427,52,4.937,53,2.672,54,4.713,55,0.857,57,1.065,60,0.857,64,2.006,65,0.731,68,1.42,69,0.292,71,1.299,72,1.199,73,1.772,74,1.113,75,1.772,76,1.038,77,0.972,78,0.132,79,0.216,80,2.422,81,0.572,82,1.717,83,0.852,84,0.735,85,1.93,86,3.9,88,0.01,89,0.01,97,4.713,106,2.231,110,1.492,129,0.912,130,0.912,131,1.75,149,0.56,159,1.527,164,0.849,240,0.951,241,0.888,321,0.857,325,2.231,363,2.912,364,4.111,368,1.75,369,1.885,376,1.394,378,1.527,379,2.18,381,3.124,382,3.124,383,2.042,386,0.972,387,2.45,388,1.42,390,1.42,398,3.456,414,2.523,427,1.199,428,2.859,436,2.138,480,2.138,503,1.772,504,4.035,505,5.52,506,3.441,507,3.441,508,3.441,509,3.441,510,4.035,511,4.035,512,4.035,513,3.9,514,3.9,515,2.079,516,2.785,517,2.468,518,3.267,519,3.267,520,2.079,521,3.267,522,2.785,523,2.785,524,3.267,525,4.035,526,2.079,527,3.267,528,3.267,529,2.079,530,3.267,531,2.079,532,2.468,533,2.079,534,3.267,535,3.267,536,3.267,537,2.079,538,3.267,539,4.574,540,2.079,541,2.079,542,2.079,543,3.267,544,2.079,545,2.079,546,1.42,547,2.079,548,1.772,549,2.079,550,2.079,551,2.079,552,2.079,553,2.079,554,2.079,555,2.079]],["title/injectables/AuthorizationService.html",[0,0.974,103,2.417]],["body/injectables/AuthorizationService.html",[0,1.461,2,2.183,3,0.259,4,0.229,5,0.229,7,1.231,8,3.128,9,1.231,11,2.377,13,0.259,14,0.969,15,2.294,19,0.744,24,0.911,26,2.483,27,1.944,28,0.945,29,0.023,30,0.459,31,0.495,32,1.001,41,1.059,42,1.121,57,1.733,65,0.761,69,0.573,76,2.036,77,1.905,78,0.259,79,0.423,80,1.582,81,1.121,83,0.699,85,1.582,88,0.016,89,0.016,98,5.537,99,3.079,100,1.031,103,3.628,107,4.529,120,2.784,130,1.787,131,2.183,149,0.911,165,1.408,321,2.436,376,1.835,379,2.591,383,3.321,386,1.905,390,2.784,427,2.351,463,1.408,513,5.038,514,5.339,516,4.529,546,2.784,556,3.475,557,5.909,558,4.076,559,4.076,560,4.529,561,5.312,562,5.312,563,4.076,564,5.312,565,3.079,566,3.079,567,4.076,568,4.076,569,4.076,570,4.076,571,4.076,572,4.076,573,4.076]],["title/components/DashboardComponent.html",[118,0.252,212,0.82]],["body/components/DashboardComponent.html",[3,0.259,4,0.229,5,0.229,9,0.945,13,0.259,19,1.079,24,0.911,29,0.022,30,0.598,50,0.791,65,0.495,69,0.573,78,0.259,79,0.423,83,0.699,88,0.016,89,0.016,95,1.381,100,1.031,118,0.421,134,1.381,140,1.001,141,1.256,142,1.256,143,1.256,144,1.256,146,1.927,147,1.256,148,2.241,149,1.247,150,1.637,152,1.637,157,1.929,164,1.381,203,1.256,204,1.637,205,1.637,206,1.256,207,1.823,208,1.256,209,1.256,210,0.945,211,1.256,212,1.451,213,1.256,214,1.001,215,1.256,216,0.945,217,1.256,218,0.945,219,1.256,220,1.821,221,1.001,222,1.256,223,0.945,224,1.256,225,1.001,226,1.256,227,0.945,228,1.256,229,0.945,230,1.256,231,1.001,232,1.256,233,0.945,234,0.945,235,1.059,236,1.256,237,0.945,238,1.256,239,0.945,240,1.187,241,0.791,242,1.256,243,1.256,574,3.475,575,6.262,576,5.909,577,5.312,578,4.076,579,4.076,580,4.529]],["title/injectables/EnvironmentUrlService.html",[0,0.974,23,2.212]],["body/injectables/EnvironmentUrlService.html",[0,1.67,2,2.701,3,0.321,4,0.284,5,0.284,13,0.321,14,1.108,15,2.529,19,1.189,23,3.795,24,1.041,29,0.022,31,0.613,39,3.81,41,1.311,42,1.387,65,0.738,69,0.708,76,2.519,77,2.357,78,0.321,79,0.523,84,0.976,88,0.018,89,0.018,581,5.553,582,4.3,583,6.513,584,6.071,585,6.071,586,5.043]],["title/interceptors/ErrorInterceptor.html",[254,2.212,587,2.674]],["body/interceptors/ErrorInterceptor.html",[0,1.306,3,0.219,4,0.194,5,0.194,7,1.258,13,0.219,19,0.629,24,0.814,26,2.219,27,1.737,28,1.1,29,0.022,30,0.534,31,0.577,32,1.165,33,5.002,34,3.242,41,0.896,54,3.586,65,0.79,66,2.938,68,2.354,69,0.484,70,4.103,71,2.154,78,0.219,79,0.358,80,2.272,81,0.948,82,1.19,83,0.814,84,0.554,85,1.843,88,0.014,89,0.014,94,2.739,100,0.921,104,2.12,110,1.548,114,1.846,122,3.658,126,3.586,132,1.003,134,0.896,173,2.938,254,2.967,319,1.611,321,1.421,331,2.604,332,2.566,386,1.611,430,4.191,439,4.792,587,3.586,588,3.446,589,2.938,590,5.851,591,4.747,592,4.047,593,5.851,594,1.988,595,4.522,596,3.446,597,2.967,598,2.739,599,4.047,600,3.586,601,4.747,602,5.851,603,5.851,604,3.446,605,4.747,606,4.747,607,4.747,608,4.747,609,4.747,610,3.446,611,3.446,612,5.851,613,3.446,614,3.446,615,3.446,616,3.446,617,2.938,618,6.499,619,3.446,620,3.446,621,3.446,622,3.446,623,3.446,624,4.747,625,6.621,626,3.446,627,5.851,628,2.938,629,3.446,630,3.446,631,3.446,632,3.446,633,3.446,634,3.446,635,3.446,636,2.604,637,3.446,638,3.446,639,3.446,640,3.446]],["title/components/FooterComponent.html",[118,0.252,214,0.869]],["body/components/FooterComponent.html",[3,0.249,4,0.22,5,0.22,7,0.908,9,0.908,19,0.715,29,0.022,30,0.582,50,0.76,65,0.476,69,0.55,78,0.249,79,0.407,88,0.016,89,0.016,95,1.345,118,0.457,134,1.345,140,0.962,141,1.207,142,1.207,143,1.207,144,1.207,146,1.891,147,1.207,148,2.232,149,1.245,150,1.595,152,1.595,157,1.207,164,1.018,185,3.536,190,2.96,200,4.008,202,2.586,203,1.207,204,1.595,205,1.595,206,1.207,207,1.795,208,1.207,209,1.207,210,0.908,211,1.207,212,0.908,213,1.207,214,1.514,215,1.207,216,0.908,217,1.207,218,0.908,219,1.207,220,1.786,221,0.962,222,1.207,223,0.908,224,1.207,225,0.962,226,1.207,227,0.908,228,1.207,229,0.908,230,1.207,231,0.962,232,1.207,233,0.908,234,0.908,235,1.018,236,1.207,237,0.908,238,1.207,239,0.908,240,1.141,241,0.76,242,1.207,243,1.207,350,3.236,641,3.341,642,5.797,643,5.176,644,4.413,645,3.911,646,2.676,647,3.341,648,2.96,649,3.341,650,3.918,651,3.918,652,3.918]],["title/components/ForbiddenComponent.html",[118,0.252,216,0.82]],["body/components/ForbiddenComponent.html",[3,0.224,4,0.198,5,0.198,9,0.815,13,0.224,14,0.879,15,2.131,19,0.642,24,1.012,28,0.815,29,0.022,30,0.617,31,0.585,32,0.863,41,0.914,42,0.967,47,2.741,50,0.682,65,0.585,69,0.494,78,0.224,79,0.365,81,0.967,82,2.038,83,0.603,84,0.774,88,0.015,89,0.015,95,1.251,100,0.934,104,2.082,110,1.57,118,0.391,121,4.359,132,1.024,134,1.251,137,2.657,138,3.161,140,0.863,141,1.084,142,1.084,143,1.084,144,1.084,146,1.79,147,1.084,148,2.206,149,1.227,150,1.483,152,1.483,157,1.818,164,1.251,203,1.084,204,1.483,205,1.483,206,1.084,207,1.718,208,1.084,209,1.084,210,0.815,211,1.084,212,0.815,213,1.084,214,0.863,215,1.084,216,1.368,217,1.084,218,0.815,219,1.084,220,1.691,221,0.863,222,1.084,223,0.815,224,1.084,225,0.863,226,1.084,227,0.815,228,1.084,229,0.815,230,1.084,231,0.863,232,1.084,233,0.815,234,0.815,235,0.914,236,1.084,237,0.815,238,1.084,239,0.815,240,1.024,241,0.682,242,1.084,243,1.084,372,2.758,376,1.663,463,1.663,594,2.029,653,2.999,654,5.488,655,4.814,656,5.488,657,3.689,658,4.814,659,3.517,660,3.517,661,3.009,662,2.198,663,2.999,664,3.288,665,3.009,666,4.814,667,4.814]],["title/components/ForgotPasswordComponent.html",[118,0.252,218,0.82]],["body/components/ForgotPasswordComponent.html",[1,3.37,3,0.171,4,0.151,5,0.151,9,0.624,12,2.719,13,0.171,14,0.726,15,2.46,19,0.492,24,1.001,28,0.624,29,0.023,30,0.533,31,0.636,32,0.661,41,1.231,42,1.303,44,0.878,47,2.365,49,1.298,50,0.523,53,1.861,55,2.301,65,0.735,69,0.378,74,1.443,78,0.253,79,0.279,81,0.741,82,1.928,83,0.462,84,0.64,88,0.012,89,0.012,95,1.035,100,0.772,104,1.971,114,1.443,118,0.337,123,1.641,129,1.746,130,1.746,132,0.784,134,1.035,138,2.536,140,0.661,141,0.83,142,0.83,143,0.83,144,0.83,146,1.544,147,0.83,148,2.132,149,1.186,150,1.226,152,1.226,157,1.612,164,1.035,185,1.84,193,2.296,202,1.988,203,0.83,204,1.226,205,1.226,206,0.83,207,1.625,208,0.83,209,0.83,210,0.624,211,0.83,212,0.624,213,0.83,214,0.661,215,0.83,216,0.624,217,0.83,218,1.212,219,1.912,220,1.459,221,0.661,222,0.83,223,0.624,224,0.83,225,0.661,226,0.83,227,0.624,228,0.83,229,0.624,230,0.83,231,0.661,232,0.83,233,0.624,234,0.624,235,0.7,236,0.83,237,0.624,238,0.83,239,0.624,240,0.784,241,1.251,242,0.83,243,0.83,270,1.345,286,1.345,287,1.554,293,3.778,319,1.259,332,1.181,346,3.007,347,2.488,349,3.489,351,2.96,352,1.84,353,1.684,355,2.296,365,1.988,378,1.861,385,1.345,386,1.259,438,2.156,441,1.181,462,1.181,463,1.807,465,1.861,645,2.035,657,3.27,661,1.684,662,1.684,668,4.566,669,1.684,670,3.577,671,3.007,672,5.23,673,2.96,674,4.758,675,2.693,676,3.394,677,2.693,678,3.27,679,2.296,680,2.296,681,2.693,682,2.488,683,1.684,684,1.84,685,2.035,686,1.554,687,2.488,688,2.693,689,1.684,690,2.693,691,2.693,692,2.035,693,2.296,694,1.684,695,3.007,696,3.394,697,3.394,698,3.981,699,2.693,700,3.234,701,3.234,702,3.394,703,2.296,704,2.296,705,2.296,706,2.693,707,2.693,708,2.693,709,2.693,710,3.007,711,2.693]],["title/interfaces/JwtTokenDto.html",[387,1.895,413,1.03]],["body/interfaces/JwtTokenDto.html",[3,0.284,4,0.251,5,0.251,7,1.035,11,2.372,12,3.848,13,0.284,14,1.028,29,0.022,31,0.685,44,1.457,57,2.285,61,3.305,78,0.284,84,1.096,88,0.017,89,0.017,324,2.633,363,2.471,368,3.018,376,2.356,379,2.706,383,4.051,387,3.018,388,3.051,400,4.896,413,1.301,415,2.088,417,2.232,418,1.959,419,3.051,459,3.018,501,3.738,523,5.525,548,4.804,712,3.809,713,3.809,714,6.48,715,5.634,716,6.48,717,5.634,718,5.634,719,5.634,720,5.634,721,5.634,722,5.634]],["title/components/LoginComponent.html",[118,0.252,221,0.869]],["body/components/LoginComponent.html",[0,0.949,3,0.142,4,0.125,5,0.125,7,0.799,8,1.722,9,0.516,11,1.262,13,0.142,14,0.629,15,2.109,19,0.407,24,1.003,26,1.612,27,1.262,28,0.799,29,0.023,30,0.534,31,0.577,32,0.547,37,1.989,40,2.22,41,0.896,42,1.494,44,1.549,47,2.713,49,2.002,50,0.432,65,0.688,69,0.313,74,1.193,78,0.219,79,0.231,80,1.844,81,0.613,82,1.774,83,0.382,84,0.554,85,1.844,88,0.01,89,0.01,94,1.989,95,0.896,100,0.669,104,1.909,110,2.002,118,0.403,123,1.958,129,1.512,130,2.083,131,1.847,132,0.649,134,0.896,138,3.034,140,0.547,141,0.686,142,0.686,143,0.686,144,0.686,146,1.376,147,0.686,148,2.071,149,1.152,150,1.062,152,1.062,157,1.463,158,1.285,159,2.22,162,2.434,164,0.896,189,1.522,200,1.393,202,2.107,203,0.686,204,1.062,205,1.062,206,0.686,207,1.383,208,0.686,209,0.686,210,0.516,211,0.686,212,0.516,213,0.686,214,0.547,215,0.686,216,0.516,217,0.686,218,0.516,219,1.3,220,1.3,221,1.166,222,0.686,223,0.516,224,0.686,225,0.547,226,0.686,227,0.516,228,0.686,229,0.516,230,0.686,231,0.547,232,0.686,233,0.516,234,0.516,235,0.579,236,0.686,237,0.516,238,0.686,239,0.516,240,0.649,241,0.997,242,0.686,243,0.686,270,1.113,286,1.113,287,1.285,321,1.422,346,1.683,349,2.969,351,2.969,352,1.522,353,1.393,354,1.9,358,4.049,363,2.382,364,2.355,368,1.847,369,1.989,370,2.94,371,4.268,372,2.22,376,1.191,378,1.972,379,1.85,381,2.355,382,2.355,385,1.113,386,1.041,410,1.9,411,1.9,419,2.355,436,1.612,438,1.422,441,1.512,462,0.977,463,1.191,477,1.847,508,3.597,592,2.94,597,2.156,598,1.989,657,2.969,661,1.393,662,1.393,665,2.969,673,3.211,678,2.969,682,2.637,683,1.393,684,1.522,686,1.285,687,2.156,689,2.156,700,2.355,701,1.522,702,1.9,710,2.605,723,1.683,724,4.219,725,3.448,726,5.136,727,3.448,728,3.448,729,3.448,730,3.448,731,3.448,732,2.228,733,2.94,734,2.94,735,2.228,736,3.448,737,3.448,738,2.228,739,3.448,740,3.448,741,3.448,742,4.83,743,2.228,744,3.448,745,3.588,746,2.94,747,4.749,748,4.749,749,4.749,750,3.448,751,3.448,752,1.683,753,1.9,754,2.228,755,2.228,756,3.448,757,2.228,758,2.228,759,2.228,760,1.9,761,2.228,762,2.228,763,2.228,764,1.683,765,2.605,766,2.605,767,1.9,768,2.605,769,1.683,770,1.9,771,4.219]],["title/components/ManageTemplatesComponent.html",[118,0.252,223,0.82]],["body/components/ManageTemplatesComponent.html",[3,0.251,4,0.222,5,0.222,9,1.616,13,0.251,19,1.061,24,0.89,29,0.022,30,0.584,50,0.764,65,0.479,69,0.553,78,0.251,79,0.409,83,0.675,88,0.016,89,0.016,95,1.35,100,1.008,118,0.414,134,1.35,140,0.967,141,1.214,142,1.214,143,1.214,144,1.214,146,1.896,147,1.214,148,2.233,149,1.242,150,1.601,152,1.601,157,1.904,164,1.35,203,1.214,204,1.601,205,1.601,206,1.214,207,1.799,208,1.214,209,1.214,210,0.913,211,1.214,212,0.913,213,1.214,214,0.967,215,1.214,216,0.913,217,1.214,218,0.913,219,1.214,220,1.791,221,0.967,222,1.214,223,1.432,224,1.214,225,0.967,226,1.214,227,0.913,228,1.214,229,0.913,230,1.214,231,0.967,232,1.214,233,0.913,234,0.913,235,1.024,236,1.214,237,0.913,238,1.214,239,0.913,240,1.147,241,0.764,242,1.214,243,1.214,297,3.97,298,3.97,329,4.669,580,4.429,772,4.955,773,3.358,774,5.812,775,5.195,776,3.939,777,3.939]],["title/components/NavComponent.html",[118,0.252,225,0.869]],["body/components/NavComponent.html",[3,0.307,4,0.156,5,0.156,7,0.943,8,2.034,9,0.644,11,2.291,13,0.177,14,0.743,15,2.293,19,0.507,24,0.91,26,1.903,27,1.49,28,0.644,29,0.023,30,0.542,31,0.495,32,0.682,41,0.722,42,0.764,49,1.328,50,0.539,65,0.586,69,0.39,78,0.177,79,0.288,80,1.581,81,0.764,82,0.959,83,0.476,88,0.012,89,0.012,94,2.349,95,1.058,100,0.79,104,2.041,110,1.328,118,0.435,129,1.218,132,0.809,140,0.682,141,0.856,142,0.856,143,0.856,144,0.856,147,0.856,148,2.142,149,1.202,150,1.254,152,1.254,157,1.636,158,1.602,159,2.253,162,2.349,164,1.058,185,2.781,186,2.368,189,2.781,190,2.098,198,2.098,199,4.526,202,2.034,203,0.856,204,1.254,205,1.254,206,0.856,207,1.545,208,0.856,209,0.856,210,0.644,211,0.856,212,0.644,213,0.856,214,0.682,215,0.856,216,0.644,217,0.856,218,0.644,219,0.856,220,1.485,221,0.682,222,0.856,223,0.644,224,0.856,225,1.303,226,0.856,227,0.644,228,0.856,229,0.644,230,0.856,231,0.682,232,0.856,233,0.644,234,0.644,235,0.722,236,0.856,237,0.644,238,0.856,239,0.644,240,0.809,241,0.539,242,0.856,243,0.856,347,2.545,348,2.368,350,1.736,352,2.781,353,1.736,363,2.745,364,4.275,371,2.781,372,1.903,389,2.368,423,3.076,441,1.218,444,2.349,454,2.181,463,1.406,477,2.181,507,4.526,509,5.445,597,2.545,598,2.349,645,3.076,646,1.897,647,2.368,648,2.098,649,2.368,663,2.368,665,3.318,673,1.736,704,3.471,705,2.368,733,3.471,760,3.471,778,2.368,779,5.308,780,4.82,781,4.071,782,4.071,783,4.071,784,2.777,785,4.071,786,3.076,787,2.777,788,4.071,789,2.777,790,2.777,791,4.071,792,4.071,793,4.071,794,2.777,795,4.071,796,4.071,797,4.526,798,4.071,799,3.471,800,5.308,801,2.777,802,2.777,803,2.777,804,4.071,805,2.777,806,2.777,807,2.777,808,2.777,809,2.777,810,2.777]],["title/components/NotFoundComponent.html",[118,0.252,227,0.82]],["body/components/NotFoundComponent.html",[3,0.254,4,0.224,5,0.224,9,0.924,13,0.254,19,1.067,24,0.898,29,0.022,30,0.589,50,0.774,65,0.485,69,0.56,78,0.254,79,0.414,83,0.684,85,2.033,88,0.016,89,0.016,95,1.361,100,1.016,118,0.417,134,1.361,140,0.979,141,1.229,142,1.229,143,1.229,144,1.229,146,1.907,147,1.229,148,2.236,149,1.244,150,1.614,152,1.614,157,1.913,164,1.361,203,1.229,204,1.614,205,1.614,206,1.229,207,1.808,208,1.229,209,1.229,210,0.924,211,1.229,212,0.924,213,1.229,214,0.979,215,1.229,216,0.924,217,1.229,218,0.924,219,1.229,220,1.802,221,0.979,222,1.229,223,0.924,224,1.229,225,0.979,226,1.229,227,1.439,228,1.229,229,0.924,230,1.229,231,0.979,232,1.229,233,0.924,234,0.924,235,1.037,236,1.229,237,0.924,238,1.229,239,0.924,240,1.161,241,0.774,242,1.229,243,1.229,277,3.994,372,2.448,811,4.986,812,3.401,813,4.691,814,5.848,815,5.237,816,3.988,817,3.988,818,5.237]],["title/injectables/NotificationService.html",[0,0.974,595,2.417]],["body/injectables/NotificationService.html",[0,1.267,2,1.767,3,0.21,4,0.185,5,0.185,7,1.45,8,3.125,13,0.21,19,0.602,24,1.035,26,2.152,27,1.685,28,1.4,29,0.023,30,0.68,31,0.734,32,1.483,41,0.857,42,0.907,52,4.852,65,0.56,69,0.463,76,1.648,77,1.542,78,0.21,79,0.342,80,2.584,81,0.907,83,0.984,84,1.162,88,0.014,89,0.014,100,0.894,110,1.502,156,6.21,164,1.492,286,1.648,332,2.019,369,2.657,454,2.466,595,3.145,599,2.812,600,4.338,819,2.812,820,4.605,821,4.605,822,4.605,823,4.605,824,3.299,825,5.742,826,3.299,827,4.338,828,4.605,829,4.605,830,4.605,831,3.299,832,6.551,833,7.213,834,4.605,835,3.299,836,4.605,837,6.421,838,4.605,839,3.299,840,4.605,841,3.299,842,4.605,843,3.299,844,3.299,845,3.299,846,3.299]],["title/components/PhoneConfirmationComponent.html",[118,0.252,229,0.82]],["body/components/PhoneConfirmationComponent.html",[3,0.214,4,0.189,5,0.189,9,0.781,13,0.214,14,0.853,19,0.615,24,0.993,28,0.781,29,0.022,30,0.604,31,0.652,32,0.827,41,1.214,42,1.285,50,0.654,65,0.568,69,0.473,78,0.214,79,0.35,81,0.927,83,0.577,84,0.931,88,0.014,89,0.014,95,1.214,100,0.907,104,2.054,118,0.382,132,0.981,134,1.214,140,0.827,141,1.038,142,1.038,143,1.038,144,1.038,146,1.75,147,1.038,148,2.195,149,1.233,150,1.44,152,1.44,157,1.785,164,1.214,165,2.001,167,3.984,168,3.53,203,1.038,204,1.44,205,1.44,206,1.038,207,1.687,208,1.038,209,1.038,210,0.781,211,1.038,212,0.781,213,1.038,214,0.827,215,1.038,216,0.781,217,1.038,218,0.781,219,1.038,220,1.653,221,0.827,222,1.038,223,0.781,224,1.038,225,0.827,226,1.038,227,0.781,228,1.038,229,1.343,230,1.038,231,0.827,232,1.038,233,0.781,234,0.781,235,0.875,236,1.038,237,0.781,238,1.038,239,0.781,240,0.981,241,1.278,242,1.038,243,1.038,304,4.157,325,3.191,341,2.334,342,3.984,376,1.614,438,1.926,463,1.163,594,1.943,664,2.301,665,2.921,694,2.105,847,5.189,848,2.872,849,5.365,850,4.672,851,6.086,852,5.365,853,4.672,854,3.368,855,3.368,856,5.365,857,2.301,858,3.368,859,3.368,860,2.301,861,3.368,862,2.872,863,3.368,864,3.368,865,3.368,866,3.368]],["title/interfaces/PhoneNumberDto.html",[55,1.459,413,1.03]],["body/interfaces/PhoneNumberDto.html",[3,0.207,4,0.183,5,0.183,7,0.752,11,2.34,13,0.207,14,0.831,29,0.023,30,0.512,31,0.394,44,1.958,49,1.958,50,0.884,53,1.517,55,2.351,57,1.958,60,1.338,61,3.551,64,1.423,78,0.382,84,1.13,88,0.014,89,0.014,110,1.485,123,2.77,149,0.556,165,2.15,196,1.872,241,1.24,324,1.517,341,1.621,365,2.274,413,1.748,415,1.517,417,2.999,418,2.633,421,3.054,436,2.458,437,1.872,438,2.69,440,2.029,441,1.423,442,2.029,443,2.029,444,3.034,445,2.029,446,2.029,447,2.029,448,2.029,449,2.029,450,2.029,451,2.029,452,2.029,453,1.738,454,2.817,455,3.288,456,2.846,457,2.846,458,2.846,459,2.439,460,2.846,461,2.846,462,2.5,463,1.969,464,2.029,465,2.807,466,2.029,467,2.274,468,2.029,469,2.846,470,2.029,471,2.029,472,2.029,473,1.872,474,1.872,475,1.872,476,1.872,477,1.738,478,1.872,479,2.029,480,1.517,481,1.738,482,1.872,483,1.872,484,1.872,485,2.029,486,2.029,487,1.872,488,2.029,489,3.289,490,1.872,491,2.029,492,2.029,493,2.029,494,1.872,495,2.627,496,2.846,497,1.872,498,2.029,499,2.029,500,2.029,501,1.872,502,1.872]],["title/interfaces/PhoneVerificationDto.html",[64,1.552,413,1.03]],["body/interfaces/PhoneVerificationDto.html",[3,0.207,4,0.183,5,0.183,7,0.754,11,2.342,13,0.207,14,0.833,29,0.023,30,0.513,31,0.396,44,1.96,49,1.96,50,0.885,53,2.133,55,2.354,57,1.96,60,1.342,61,3.554,64,2.001,78,0.383,84,1.125,88,0.014,89,0.014,110,1.488,123,2.771,149,0.558,165,1.972,196,1.878,241,1.267,324,2.133,341,1.626,365,2.852,413,1.75,415,1.522,417,3.002,418,2.636,421,3.22,436,2.462,437,1.878,438,2.735,440,2.035,441,1.427,442,2.035,443,2.035,444,2.632,445,2.035,446,2.035,447,2.035,448,2.035,449,2.035,450,2.035,451,2.035,452,2.035,453,1.744,454,2.444,455,2.852,456,2.035,457,2.035,458,2.035,459,1.744,460,2.035,461,2.035,462,1.427,463,1.576,464,2.852,465,3.176,466,2.852,467,2.631,468,2.852,469,3.293,470,2.035,471,2.035,472,2.035,473,1.878,474,1.878,475,1.878,476,1.878,477,1.744,478,1.878,479,2.035,480,1.522,481,1.744,482,1.878,483,1.878,484,1.878,485,2.035,486,2.035,487,1.878,488,2.035,489,3.293,490,1.878,491,2.035,492,2.035,493,2.035,494,1.878,495,2.632,496,2.852,497,1.878,498,2.035,499,2.035,500,2.035,501,1.878,502,1.878]],["title/components/RegisterComponent.html",[118,0.252,231,0.869]],["body/components/RegisterComponent.html",[0,0.883,3,0.129,4,0.114,5,0.114,9,0.471,13,0.129,14,0.586,15,2.03,19,0.371,24,1.104,28,0.471,29,0.023,30,0.725,31,0.635,32,0.499,41,1.518,42,1.678,44,1.047,45,1.173,49,1.851,50,0.395,65,0.69,69,0.286,74,1.089,78,0.204,79,0.211,81,0.559,82,0.702,83,0.774,84,0.639,85,2.03,88,0.01,89,0.01,95,0.834,100,0.623,104,1.785,110,1.297,114,1.719,118,0.283,123,1.863,129,1.408,130,1.744,131,2.131,132,0.592,134,0.834,140,0.499,141,0.626,142,0.626,143,0.626,144,0.626,146,1.297,147,0.626,148,2.038,149,1.134,150,0.989,152,0.989,157,1.392,158,1.173,159,2.112,162,1.852,164,0.834,165,1.374,189,1.389,198,2.425,200,1.271,202,1.016,203,0.626,204,0.989,205,0.989,206,0.626,207,1.315,208,0.626,209,0.626,210,0.471,211,0.626,212,0.471,213,0.626,214,0.499,215,0.626,216,0.471,217,0.626,218,0.471,219,0.626,220,1.226,221,0.499,222,0.626,223,0.471,224,0.626,225,0.499,226,0.626,227,0.471,228,0.626,229,0.471,230,0.626,231,1.109,232,0.626,233,0.471,234,0.471,235,0.528,236,0.626,237,0.471,238,0.626,239,0.471,240,1.158,241,0.955,242,0.626,243,0.626,270,1.016,286,1.016,287,1.173,319,0.95,321,1.324,332,2.4,347,2.007,349,1.271,350,2.007,351,1.271,378,2.851,385,1.016,386,0.95,438,0.838,441,0.892,453,1.719,459,1.719,462,2.157,465,1.5,467,1.603,480,1.5,481,2.42,482,1.852,483,2.607,484,1.852,487,3.273,489,2.607,490,1.852,494,1.852,495,2.607,497,1.852,502,1.852,617,1.733,628,1.733,636,2.425,673,2.824,678,2.824,682,3.813,683,2.007,684,1.389,686,1.173,687,2.007,689,3.422,693,2.737,695,2.425,700,2.193,701,1.389,742,2.737,752,1.536,753,1.733,765,3.414,766,3.414,767,1.733,768,1.536,769,1.536,770,1.733,797,4.838,860,2.193,867,1.536,868,3.978,869,3.21,870,3.852,871,3.21,872,4.194,873,3.978,874,3.21,875,3.978,876,5.228,877,5.228,878,5.228,879,3.21,880,2.033,881,2.033,882,4.518,883,4.518,884,2.033,885,2.033,886,2.033,887,2.033,888,2.033,889,2.033,890,2.033,891,2.033,892,2.033,893,2.033,894,2.033,895,1.271,896,1.733,897,2.033,898,2.033,899,2.033,900,2.033,901,2.033,902,3.21,903,3.21,904,3.21,905,3.21,906,2.033,907,3.21,908,2.737,909,1.733,910,3.21,911,2.033,912,2.033,913,2.033,914,2.033,915,2.033,916,2.033,917,2.033,918,2.033,919,2.033,920,2.033,921,2.033,922,2.033,923,2.033,924,1.733,925,2.033,926,2.033,927,2.033,928,2.033,929,2.033,930,2.033,931,2.033,932,2.737,933,3.21,934,3.21,935,2.737,936,2.737,937,2.033,938,2.033,939,3.21,940,2.033,941,2.033,942,2.033,943,2.033,944,2.033]],["title/interfaces/RegistrationResponseDto.html",[413,1.03,432,2.417]],["body/interfaces/RegistrationResponseDto.html",[3,0.279,4,0.246,5,0.246,7,1.015,13,0.279,14,1.015,29,0.022,31,0.676,44,1.994,57,1.429,65,0.532,78,0.354,84,0.983,88,0.017,89,0.017,129,2.821,363,2.44,368,2.346,369,3.915,376,1.513,379,1.921,387,2.98,413,1.62,414,2.738,415,2.047,416,3.309,417,3.054,418,2.681,419,2.991,420,3.734,421,2.346,422,3.734,423,5.017,424,5.213,425,4.62,426,5.662,427,2.527,428,4.242,429,4.744,430,4.766,431,5.485,432,3.8,433,5.485,434,4.744,435,4.744]],["title/components/ResetPasswordComponent.html",[118,0.252,233,0.82]],["body/components/ResetPasswordComponent.html",[1,3.377,3,0.156,4,0.138,5,0.138,9,0.567,13,0.156,14,0.676,15,2.689,19,0.446,24,1.096,28,0.567,29,0.023,30,0.503,31,0.75,32,0.6,41,1.521,42,1.61,44,0.798,47,2.232,49,2.138,50,1.17,57,0.798,60,2.323,65,0.711,69,0.343,74,1.31,78,0.156,79,0.254,81,0.673,82,2.082,83,0.419,84,0.801,88,0.011,89,0.011,95,0.962,100,0.719,104,1.838,114,1.31,118,0.318,129,2.471,130,2.186,131,1.983,132,0.712,134,0.962,138,2.394,140,0.6,141,0.753,142,0.753,143,0.753,144,0.753,146,1.458,147,0.753,148,2.102,149,1.169,150,1.141,152,1.141,157,1.536,164,0.962,165,2.132,203,0.753,204,1.141,205,1.141,206,0.753,207,1.451,208,0.753,209,0.753,210,0.567,211,0.753,212,0.567,213,0.753,214,0.6,215,0.753,216,0.567,217,0.753,218,0.567,219,0.753,220,1.377,221,0.6,222,0.753,223,0.567,224,0.753,225,0.6,226,0.753,227,0.567,228,0.753,229,0.567,230,0.753,231,0.6,232,0.753,233,1.155,234,0.567,235,0.636,236,0.753,237,0.567,238,0.753,239,0.567,240,1.301,241,0.475,242,0.753,243,0.753,270,1.221,302,4.051,319,1.143,321,1.527,332,2.471,378,2.089,385,1.221,386,1.143,438,1.008,453,1.983,462,1.072,463,1.544,467,1.85,594,1.411,636,2.798,657,3.116,661,1.529,662,1.529,669,1.529,670,3.377,671,2.798,673,3.348,674,4.566,676,2.085,678,3.116,679,2.085,680,2.085,682,2.794,683,2.315,685,1.847,689,2.315,692,1.847,694,1.529,764,1.847,765,3.766,766,3.766,857,1.67,860,2.529,870,4.566,872,4.566,895,1.529,896,2.085,908,3.157,909,2.085,932,3.157,936,3.157,945,5.526,946,3.377,947,4.469,948,3.703,949,2.445,950,2.445,951,2.445,952,2.445,953,2.445,954,2.445,955,3.377,956,2.445,957,2.445,958,2.445,959,3.703,960,2.445,961,2.085,962,2.445,963,2.445,964,2.445,965,2.445,966,2.445]],["title/interfaces/ResetPasswordDto.html",[60,1.459,413,1.03]],["body/interfaces/ResetPasswordDto.html",[3,0.203,4,0.18,5,0.18,7,0.74,11,2.378,13,0.203,14,0.822,29,0.023,30,0.507,31,0.388,44,1.947,49,2.119,50,1.099,53,1.493,55,2.15,57,2.229,60,1.856,61,3.539,64,1.401,78,0.38,84,1.122,88,0.014,89,0.014,110,1.701,123,2.792,149,0.548,165,2.139,196,1.843,241,1.158,324,1.493,341,2.249,365,2.249,413,1.738,415,1.493,417,2.982,418,2.618,421,3.197,436,2.646,437,1.843,438,2.553,440,1.997,441,1.401,442,1.997,443,1.997,444,2.598,445,1.997,446,1.997,447,1.997,448,1.997,449,1.997,450,1.997,451,1.997,452,1.997,453,1.711,454,2.412,455,2.815,456,1.997,457,1.997,458,1.997,459,1.711,460,1.997,461,1.997,462,1.401,463,1.956,464,1.997,465,2.79,466,1.997,467,2.605,468,1.997,469,3.26,470,2.815,471,2.815,472,2.815,473,2.598,474,2.598,475,2.598,476,2.598,477,2.412,478,1.843,479,1.997,480,1.493,481,1.711,482,1.843,483,1.843,484,1.843,485,1.997,486,1.997,487,1.843,488,1.997,489,3.266,490,1.843,491,1.997,492,1.997,493,1.997,494,1.843,495,2.598,496,2.815,497,1.843,498,1.997,499,1.997,500,1.997,501,1.843,502,1.843]],["title/classes/Routing.html",[72,2.042,79,0.367]],["body/classes/Routing.html",[3,0.296,4,0.261,5,0.261,7,1.338,13,0.296,14,1.054,24,0.796,28,1.076,29,0.022,30,0.523,37,3.624,40,2.936,41,1.5,42,1.278,46,3.96,47,3.441,58,4.745,72,3.624,78,0.296,79,0.482,80,2.241,83,0.796,84,1.009,85,1.803,88,0.017,89,0.017,100,0.901,598,2.679,648,4.361,813,4.361,967,3.509,968,3.96,969,3.96,970,5.355,971,6.281,972,4.644,973,5.772,974,4.922,975,4.922,976,6.281,977,5.772,978,6.281,979,3.96,980,4.644]],["title/components/ServerErrorComponent.html",[118,0.252,234,0.82]],["body/components/ServerErrorComponent.html",[3,0.209,4,0.185,5,0.185,9,0.762,13,0.209,14,0.839,19,0.6,24,0.908,28,0.762,29,0.022,30,0.596,31,0.559,32,0.807,40,2.148,45,2.651,48,3.918,50,0.638,65,0.559,69,0.462,78,0.209,79,0.341,81,0.905,83,0.564,88,0.014,89,0.014,95,1.194,100,0.892,104,2.039,118,0.377,122,2.873,132,0.957,134,1.194,140,0.807,141,1.013,142,1.013,143,1.013,144,1.013,146,1.728,147,1.013,148,2.189,149,1.218,150,1.416,152,1.416,157,1.767,164,1.194,203,1.013,204,1.416,205,1.416,206,1.013,207,1.67,208,1.013,209,1.013,210,0.762,211,1.013,212,0.762,213,1.013,214,0.807,215,1.013,216,0.762,217,1.013,218,0.762,219,1.013,220,1.632,221,0.807,222,1.013,223,0.762,224,1.013,225,0.807,226,1.013,227,0.762,228,1.013,229,0.762,230,1.013,231,0.807,232,1.013,233,0.762,234,1.329,235,1.751,236,1.013,237,0.762,238,1.013,239,0.762,240,0.957,241,0.638,242,1.013,243,1.013,280,3.917,321,1.356,332,3.036,343,3.918,372,2.148,398,3.472,439,3.472,594,1.897,597,2.873,598,1.897,646,3.139,696,4.889,697,3.918,981,4.889,982,2.804,983,5.297,984,4.595,985,4.595,986,3.289,987,3.289,988,3.289,989,3.289,990,4.595,991,4.595,992,4.595,993,4.595,994,3.472,995,4.595,996,4.595,997,4.595,998,4.595,999,3.918,1000,4.595,1001,4.595,1002,4.595,1003,4.595,1004,4.595,1005,4.595,1006,4.595,1007,4.595,1008,4.595,1009,4.595,1010,4.595,1011,4.595,1012,4.595,1013,4.595,1014,4.595,1015,4.595]],["title/modules/SharedModule.html",[244,2.674,253,2.212]],["body/modules/SharedModule.html",[3,0.224,4,0.198,5,0.198,11,1.287,29,0.023,57,1.57,65,0.885,69,0.494,78,0.306,79,0.365,83,0.603,85,1.365,88,0.015,89,0.015,106,2.402,246,2.029,253,3.009,258,2.999,260,4.146,262,3.637,264,2.657,286,1.757,320,2.999,334,2.999,363,1.542,376,1.663,379,1.542,381,2.402,382,2.402,390,2.402,427,2.777,532,2.657,546,2.402,600,2.657,769,2.657,827,3.637,994,3.637,1016,2.657,1017,4.814,1018,2.999,1019,3.517,1020,5.488,1021,3.517,1022,5.488,1023,4.814,1024,5.488,1025,3.517,1026,5.488,1027,3.517,1028,5.488,1029,3.517,1030,5.488,1031,3.517,1032,5.488,1033,3.517,1034,5.488,1035,3.517,1036,3.517,1037,5.488,1038,3.517,1039,5.488,1040,3.517,1041,5.488,1042,3.517,1043,5.488,1044,3.517,1045,5.488,1046,3.517,1047,5.488,1048,3.517,1049,3.517,1050,5.488,1051,3.517,1052,5.488,1053,3.517,1054,5.488,1055,3.517,1056,5.488,1057,3.517,1058,5.488,1059,3.517,1060,3.517,1061,5.488,1062,2.999,1063,2.999,1064,4.814,1065,3.517,1066,2.999,1067,4.146,1068,3.517,1069,3.517,1070,3.517,1071,3.517,1072,3.517,1073,3.517,1074,3.517,1075,3.517,1076,3.517,1077,3.517]],["title/components/UpdatedPasswordComponent.html",[118,0.252,237,0.82]],["body/components/UpdatedPasswordComponent.html",[3,0.231,4,0.204,5,0.204,9,0.84,13,0.231,14,0.897,19,0.662,24,0.956,28,0.84,29,0.022,30,0.627,31,0.597,32,0.89,49,1.949,50,0.954,65,0.597,69,0.509,78,0.231,79,0.376,81,0.997,83,0.621,84,0.79,88,0.015,89,0.015,95,1.277,100,0.954,104,2.101,118,0.397,132,1.056,134,1.277,140,0.89,141,1.117,142,1.117,143,1.117,144,1.117,146,1.818,147,1.117,148,2.214,149,1.239,150,1.514,152,1.514,157,1.841,164,1.277,203,1.117,204,1.514,205,1.514,206,1.117,207,1.74,208,1.117,209,1.117,210,0.84,211,1.117,212,0.84,213,1.117,214,0.89,215,1.117,216,0.84,217,1.117,218,0.84,219,1.117,220,1.718,221,0.89,222,1.117,223,0.84,224,1.117,225,0.89,226,1.117,227,0.84,228,1.117,229,0.84,230,1.117,231,0.89,232,1.117,233,0.84,234,0.84,235,0.942,236,1.117,237,1.385,238,2.065,239,0.84,240,1.056,241,0.704,242,1.117,243,1.117,307,3.736,341,2.455,376,1.697,463,1.926,594,2.092,664,2.476,665,3.072,669,2.266,670,4.212,671,3.713,694,2.266,857,2.476,946,4.212,955,4.212,1078,5.096,1079,4.914,1080,3.625,1081,3.625]],["title/injectables/UrlService.html",[0,0.974,160,1.895]],["body/injectables/UrlService.html",[0,1.441,2,2.136,3,0.254,4,0.224,5,0.224,7,1.214,8,2.616,13,0.254,14,0.956,15,2.57,19,0.728,24,1.002,28,0.924,29,0.023,30,0.449,31,0.784,32,0.979,40,3.094,41,1.361,42,1.708,65,0.711,69,0.56,70,4.872,71,2.493,76,1.992,77,1.864,78,0.254,79,0.414,80,1.548,82,2.02,83,0.684,84,0.94,88,0.016,89,0.016,100,1.016,104,1.301,122,3.274,132,1.161,155,5.279,160,2.805,164,1.037,165,2.02,170,3.401,171,3.401,181,4.691,372,2.448,376,1.809,378,2.902,598,3.021,644,3.401,734,4.465,1082,3.401,1083,6.209,1084,5.237,1085,5.237,1086,3.988,1087,5.294,1088,5.848,1089,5.237,1090,3.988,1091,5.237,1092,5.237,1093,5.237,1094,3.988,1095,3.988]],["title/interfaces/UserForRegistrationDto.html",[413,1.03,480,1.654]],["body/interfaces/UserForRegistrationDto.html",[3,0.185,4,0.163,5,0.163,7,0.672,11,2.48,13,0.185,14,0.767,29,0.023,30,0.61,31,0.752,44,1.876,49,1.876,50,0.815,53,1.355,55,2.037,57,1.876,60,1.196,61,3.706,64,1.272,78,0.366,84,1.156,88,0.013,89,0.013,110,1.612,123,2.883,149,0.72,165,2.188,196,2.424,241,1.116,324,1.355,341,1.448,365,2.099,413,1.674,415,1.355,417,2.872,418,2.522,421,3.08,436,2.532,437,1.673,438,2.55,440,1.813,441,1.272,442,1.813,443,1.813,444,2.424,445,1.813,446,1.813,447,1.813,448,1.813,449,1.813,450,1.813,451,1.813,452,1.813,453,1.553,454,2.646,455,3.089,456,1.813,457,1.813,458,1.813,459,1.553,460,1.813,461,1.813,462,1.272,463,1.451,464,1.813,465,2.803,466,1.813,467,2.099,468,1.813,469,2.626,470,1.813,471,1.813,472,1.813,473,1.673,474,1.673,475,1.673,476,1.673,477,1.553,478,2.424,479,2.626,480,1.964,481,2.25,482,3.126,483,2.424,484,3.126,485,2.626,486,2.626,487,3.126,488,2.626,489,3.654,490,3.126,491,2.626,492,2.626,493,2.626,494,3.126,495,3.459,496,3.387,497,2.424,498,2.626,499,2.626,500,2.626,501,2.424,502,3.126]],["title/classes/Validation.html",[79,0.367,895,2.212]],["body/classes/Validation.html",[3,0.253,4,0.223,5,0.223,7,1.211,13,0.253,24,0.681,28,0.921,29,0.023,30,0.725,31,0.483,32,0.976,41,1.033,65,0.483,78,0.253,79,0.412,80,2.028,83,1.104,84,1.063,85,2.501,88,0.016,89,0.02,100,1.203,120,3.987,130,2.719,165,2.362,270,1.985,321,2.154,425,3.948,467,2.61,682,3.876,745,3.948,786,3.948,895,3.876,967,3.003,969,4.455,970,4.977,974,4.455,975,4.455,1096,3.388,1097,5.225,1098,5.225,1099,6.612,1100,3.974,1101,5.225,1102,5.225,1103,6.612,1104,5.225,1105,5.225,1106,5.837,1107,4.455,1108,5.225,1109,5.225,1110,3.974,1111,5.225,1112,3.974,1113,5.225,1114,3.974,1115,3.974,1116,3.974,1117,3.974,1118,3.974,1119,3.974]],["title/components/VerifyPhoneComponent.html",[118,0.252,239,0.82]],["body/components/VerifyPhoneComponent.html",[1,3.295,3,0.145,4,0.128,5,0.128,9,0.528,12,2.398,13,0.145,14,0.641,15,2.129,19,0.416,24,1.037,28,0.528,29,0.023,30,0.482,31,0.694,32,0.56,34,1.558,40,1.066,41,1.113,42,1.178,44,1.396,45,1.316,47,2.138,50,0.443,53,1.641,55,1.765,60,1.765,64,2.277,65,0.735,69,0.32,74,1.221,78,0.223,79,0.237,81,0.627,82,2.297,83,0.602,84,0.918,88,0.011,89,0.011,95,0.912,100,0.681,104,1.863,114,1.88,118,0.305,123,1.447,132,0.664,134,0.912,138,2.293,140,0.56,141,0.703,142,0.703,143,0.703,144,0.703,146,1.396,147,0.703,148,2.079,149,1.156,150,1.082,152,1.082,155,3.632,157,1.481,158,1.316,159,2.247,160,3.06,162,2.025,164,1.113,165,2.203,181,1.723,200,1.425,202,1.139,203,0.703,204,1.082,205,1.082,206,0.703,207,1.4,208,0.703,209,0.703,210,0.528,211,0.703,212,0.528,213,0.703,214,0.56,215,0.703,216,0.528,217,0.703,218,0.528,219,0.703,220,1.319,221,0.56,222,0.703,223,0.528,224,0.703,225,0.56,226,0.703,227,0.528,228,0.703,229,0.528,230,0.703,231,0.56,232,0.703,233,0.528,234,0.528,235,0.593,236,0.703,237,0.528,238,0.703,239,1.114,240,1.596,241,1.238,242,0.703,243,0.703,270,1.139,286,1.139,287,1.316,290,3.861,319,1.066,321,0.94,323,1.558,324,3.019,332,1,347,1.425,349,1.425,351,2.195,353,1.425,365,3.022,372,1.066,385,1.139,386,1.066,418,1,428,2.676,438,2.355,441,1.54,462,2.277,463,1.793,465,2.67,478,1.316,657,3.005,661,1.425,662,1.425,664,2.398,678,2.676,683,1.425,684,1.558,685,1.723,686,1.316,687,2.195,689,1.425,692,1.723,694,1.425,695,2.652,700,2.924,701,2.924,703,1.944,710,1.723,713,1.944,745,1.723,752,1.723,764,1.723,768,2.652,857,1.558,862,2.993,924,1.944,946,3.234,955,3.234,961,1.944,979,2.993,1087,1.944,1107,1.944,1120,4.667,1121,1.723,1122,4.281,1123,3.511,1124,4.281,1125,4.281,1126,4.281,1127,4.808,1128,3.511,1129,2.28,1130,2.28,1131,2.28,1132,2.28,1133,2.28,1134,2.28,1135,2.28,1136,2.28,1137,2.28,1138,2.28,1139,2.28,1140,2.28,1141,4.281,1142,2.28,1143,2.28,1144,2.28,1145,2.28,1146,2.28,1147,2.28,1148,2.28,1149,2.28,1150,2.28,1151,3.511,1152,3.511,1153,2.28,1154,2.28,1155,2.28,1156,2.28,1157,2.28,1158,2.28]],["title/coverage.html",[1159,4.122]],["body/coverage.html",[0,1.79,1,1.854,5,0.181,6,2.739,23,2.008,29,0.022,31,0.39,55,1.325,60,1.325,64,1.409,72,1.854,79,0.469,88,0.014,89,0.014,90,2.826,91,2.195,93,2.739,103,2.195,118,0.5,140,0.789,145,2.739,159,1.502,160,1.721,188,6.186,202,3.552,210,0.745,212,0.745,214,0.789,216,0.745,218,0.745,221,1.11,223,0.745,225,0.789,227,0.745,229,0.745,231,1.11,233,0.745,234,0.745,237,0.745,239,0.745,254,2.008,277,2.195,280,2.195,290,2.826,293,2.826,297,2.195,298,2.195,302,2.008,304,2.195,307,2.008,316,2.195,319,1.502,335,2.739,357,2.739,378,1.502,379,1.409,385,1.605,387,1.721,388,2.195,413,1.895,414,2.008,416,3.416,432,2.195,436,1.502,437,3.451,480,1.502,503,2.739,556,2.739,565,2.427,574,2.739,581,2.739,582,2.739,587,2.427,589,2.739,595,2.195,641,2.739,653,2.739,668,3.416,669,3.548,686,3.275,712,2.739,723,3.952,772,2.739,773,2.739,778,2.739,811,2.739,812,2.739,819,2.739,847,2.739,848,2.739,867,3.952,895,2.008,945,2.739,968,2.739,981,2.739,982,2.739,1016,2.427,1066,2.739,1067,2.427,1078,2.739,1082,2.739,1096,2.739,1120,3.416,1121,3.416,1159,2.739,1160,3.213,1161,3.213,1162,3.213,1163,3.213,1164,4.84,1165,6.508,1166,6.205,1167,3.213,1168,5.982,1169,4.521,1170,4.521,1171,5.982,1172,3.213,1173,4.521,1174,5.676,1175,4.521,1176,3.213,1177,3.213,1178,4.521,1179,4.521,1180,3.213,1181,6.374,1182,3.213,1183,3.213,1184,3.213]],["title/dependencies.html",[27,1.558,1185,2.518]],["body/dependencies.html",[27,1.829,29,0.022,69,0.702,71,3.124,88,0.018,89,0.018,132,1.455,264,4.562,265,4.562,270,2.496,286,3.016,287,2.883,427,2.883,546,3.414,827,3.776,1018,4.261,1062,4.261,1063,4.261,1186,4.998,1187,4.261,1188,4.998,1189,6.038,1190,7.092,1191,4.998,1192,6.038,1193,4.998,1194,4.998,1195,4.998,1196,4.998,1197,4.998,1198,4.998,1199,4.998,1200,4.998,1201,4.998,1202,4.998]],["title/miscellaneous/enumerations.html",[1203,1.704,1204,3.63]],["body/miscellaneous/enumerations.html",[13,0.347,29,0.022,42,1.907,88,0.019,89,0.019,99,4.802,110,2.073,566,4.802,1203,3.144,1204,4.646,1205,5.45,1206,5.45,1207,6.356,1208,6.356]],["title/miscellaneous/functions.html",[517,3.217,1203,1.704]],["body/miscellaneous/functions.html",[11,2.045,13,0.355,29,0.019,57,1.822,88,0.019,89,0.019,106,3.815,363,2.45,376,1.929,517,4.22,1016,4.22,1067,5.136,1203,3.223,1209,5.586]],["title/index.html",[13,0.188,1210,2.953,1211,2.953]],["body/index.html",[4,0.243,29,0.017,30,0.486,88,0.017,89,0.017,118,0.433,134,1.123,149,0.945,168,3.264,235,1.579,256,3.264,332,1.895,372,2.019,377,4.703,378,2.019,399,3.264,430,3.767,465,2.019,476,2.493,481,2.314,522,3.684,532,3.264,560,5.18,646,4.619,746,3.684,786,3.264,799,3.684,813,4.167,935,5.18,994,4.836,999,3.684,1185,3.684,1187,3.684,1212,4.32,1213,6.076,1214,5.516,1215,5.516,1216,4.32,1217,5.516,1218,4.32,1219,4.32,1220,4.32,1221,4.32,1222,4.32,1223,4.32,1224,6.401,1225,4.32,1226,6.613,1227,6.874,1228,4.32,1229,4.32,1230,4.32,1231,4.32,1232,4.32,1233,4.32,1234,6.076,1235,4.32,1236,6.401,1237,4.32,1238,4.32,1239,4.32,1240,5.516,1241,5.516,1242,6.401,1243,4.32,1244,5.516,1245,4.32,1246,4.32,1247,4.32,1248,4.32,1249,5.516,1250,4.32,1251,4.32,1252,4.32,1253,4.32,1254,4.32,1255,6.076,1256,4.32,1257,4.32,1258,3.264,1259,4.32]],["title/modules.html",[246,2.789]],["body/modules.html",[29,0.019,88,0.019,89,0.019,245,3.806,246,3.215,252,3.483,253,3.483,265,4.21,1260,5.572,1261,5.572,1262,6.791,1263,6.439,1264,6.439]],["title/overview.html",[1258,3.652]],["body/overview.html",[2,2.211,27,1.961,29,0.022,50,0.801,88,0.016,89,0.016,92,3.119,95,1.073,140,1.67,160,3.185,210,1.378,212,1.378,214,1.46,216,1.378,218,1.378,221,1.46,223,1.378,225,1.46,227,1.378,229,1.378,231,1.46,233,1.378,234,1.378,237,1.378,239,1.378,245,5.107,246,2.382,247,3.52,248,3.52,249,3.52,250,3.52,251,3.52,252,3.717,253,3.717,254,3.717,255,4.567,256,3.119,315,2.581,350,3.348,415,1.93,860,2.82,967,3.119,1258,3.119,1265,4.129,1266,5.357,1267,4.129]],["title/routes.html",[315,3.022]],["body/routes.html",[29,0.02,88,0.02,89,0.02,315,3.6]],["title/miscellaneous/variables.html",[1203,1.704,1268,3.63]],["body/miscellaneous/variables.html",[9,0.957,13,0.263,16,4.567,17,4.567,18,3.52,29,0.022,31,0.838,37,2.382,41,1.636,42,1.731,49,1.747,58,3.119,72,2.382,84,0.664,88,0.016,89,0.016,94,2.382,100,0.801,121,3.659,149,0.708,235,1.073,241,1.039,290,2.581,293,3.348,302,2.581,307,2.581,315,2.581,319,2.504,322,3.52,323,3.659,324,1.93,325,2.82,329,3.119,331,3.119,332,1.811,368,2.211,371,2.82,376,1.426,379,2.608,383,2.581,385,2.676,400,3.119,418,2.608,428,2.581,473,2.382,474,2.382,475,3.09,506,4.567,565,4.047,566,3.119,597,2.581,668,3.119,669,3.348,686,3.978,687,3.933,723,3.119,867,3.119,1120,3.119,1121,4.047,1164,3.52,1203,2.382,1268,5.365,1269,6.293,1270,4.129,1271,4.129,1272,4.129,1273,4.129,1274,4.129,1275,4.129,1276,4.129,1277,4.129,1278,4.129,1279,4.129,1280,4.129,1281,4.129,1282,4.129,1283,4.129,1284,5.946,1285,4.129,1286,4.129,1287,4.129,1288,4.129,1289,4.129,1290,4.129,1291,4.129,1292,4.129]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["0.11.4",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["0.9em",{"_index":801,"title":{},"body":{"components/NavComponent.html":{}}}],["0/1",{"_index":1174,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1180,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1177,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1175,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1171,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1178,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1179,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1163,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1176,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{}}}],["1/1",{"_index":1166,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":457,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["100",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["10px",{"_index":710,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["11/11",{"_index":1167,"title":{},"body":{"coverage.html":{}}}],["12.0.0",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["12.2.3",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":1267,"title":{},"body":{"overview.html":{}}}],["13.0.2",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["13.0.3",{"_index":1187,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["14.1.0",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":1265,"title":{},"body":{"overview.html":{}}}],["18px",{"_index":1158,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["2",{"_index":350,"title":{},"body":{"components/AuthComponent.html":{},"components/FooterComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1181,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":699,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["240px",{"_index":711,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["250px",{"_index":356,"title":{},"body":{"components/AuthComponent.html":{}}}],["255",{"_index":452,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["3",{"_index":860,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"overview.html":{}}}],["3/3",{"_index":1168,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":355,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["33",{"_index":942,"title":{},"body":{"components/RegisterComponent.html":{}}}],["4/4",{"_index":1169,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":619,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["401",{"_index":626,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["403",{"_index":628,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/RegisterComponent.html":{}}}],["404",{"_index":331,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"miscellaneous/variables.html":{}}}],["406",{"_index":630,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["409",{"_index":631,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["499px",{"_index":802,"title":{},"body":{"components/NavComponent.html":{}}}],["5",{"_index":499,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["5.0.2",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1170,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":944,"title":{},"body":{"components/RegisterComponent.html":{}}}],["500",{"_index":632,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["500px",{"_index":348,"title":{},"body":{"components/AuthComponent.html":{},"components/NavComponent.html":{}}}],["6",{"_index":862,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["6.6.0",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1172,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":1173,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1266,"title":{},"body":{"overview.html":{}}}],["8/8",{"_index":1182,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1153,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["above",{"_index":568,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["abstractcontrol",{"_index":1109,"title":{},"body":{"classes/Validation.html":{}}}],["accept",{"_index":713,"title":{},"body":{"interfaces/JwtTokenDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["access",{"_index":376,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/ForbiddenComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["accesses",{"_index":38,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{}}}],["accessing",{"_index":362,"title":{},"body":{"guards/AuthGuard.html":{}}}],["accesstoken",{"_index":383,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interfaces/JwtTokenDto.html":{},"miscellaneous/variables.html":{}}}],["account",{"_index":12,"title":{},"body":{"injectables/AccountService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["accountservice",{"_index":1,"title":{"injectables/AccountService.html":{}},"body":{"injectables/AccountService.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["acquire",{"_index":63,"title":{},"body":{"injectables/AccountService.html":{}}}],["activate",{"_index":117,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["activated",{"_index":731,"title":{},"body":{"components/LoginComponent.html":{}}}],["activatedroute",{"_index":657,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["activatedroutesnapshot",{"_index":113,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["actual_component",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["add",{"_index":1251,"title":{},"body":{"index.html":{}}}],["address",{"_index":489,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["address1",{"_index":490,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["address2",{"_index":494,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["adds",{"_index":126,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{}}}],["admin",{"_index":119,"title":{},"body":{"guards/AdminGuard.html":{}}}],["adminguard",{"_index":91,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["administrator",{"_index":99,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthorizationService.html":{},"miscellaneous/enumerations.html":{}}}],["against",{"_index":1105,"title":{},"body":{"classes/Validation.html":{}}}],["align",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["align:center",{"_index":768,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["allow",{"_index":96,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["alloweddomains",{"_index":1075,"title":{},"body":{"modules/SharedModule.html":{}}}],["allowing",{"_index":523,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/JwtTokenDto.html":{}}}],["allows",{"_index":370,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["along",{"_index":429,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["already",{"_index":934,"title":{},"body":{"components/RegisterComponent.html":{}}}],["angular",{"_index":994,"title":{},"body":{"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"index.html":{}}}],["angular/animations",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1018,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":68,"title":{},"body":{"injectables/AccountService.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["angular/compiler",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":69,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1062,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":1023,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/card",{"_index":1027,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/checkbox",{"_index":1031,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/core",{"_index":1046,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/datepicker",{"_index":1029,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/form",{"_index":1033,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/grid",{"_index":1035,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/icon",{"_index":1038,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/input",{"_index":1040,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/list",{"_index":1042,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/menu",{"_index":1044,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/progress",{"_index":1048,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/select",{"_index":1051,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/sidenav",{"_index":1053,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tabs",{"_index":1055,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/toolbar",{"_index":1057,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tooltip",{"_index":1059,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/platform",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":132,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{},"dependencies.html":{}}}],["apartment",{"_index":491,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["api",{"_index":37,"title":{},"body":{"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"classes/Routing.html":{},"miscellaneous/variables.html":{}}}],["api's",{"_index":978,"title":{},"body":{"classes/Routing.html":{}}}],["api/accounts/forgotpassword",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/accounts/login",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/accounts/phoneconfirmation",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/accounts/phoneverification",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/accounts/registration",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/accounts/resetpassword",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/accounts/resetpasswordtoken",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/tokens/refresh",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apipaths",{"_index":385,"title":{},"body":{"guards/AuthGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":583,"title":{},"body":{"injectables/EnvironmentUrlService.html":{}}}],["app",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["app.constants",{"_index":320,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["app.please",{"_index":866,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["appcomponent",{"_index":140,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":245,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":252,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":1237,"title":{},"body":{"index.html":{}}}],["asp.net",{"_index":473,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"miscellaneous/variables.html":{}}}],["aspects",{"_index":10,"title":{},"body":{"injectables/AccountService.html":{}}}],["assertaining",{"_index":783,"title":{},"body":{"components/NavComponent.html":{}}}],["assigned",{"_index":472,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["associated",{"_index":468,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["async",{"_index":359,"title":{},"body":{"guards/AuthGuard.html":{}}}],["attempt",{"_index":426,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["attempting",{"_index":435,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["attempts",{"_index":367,"title":{},"body":{"guards/AuthGuard.html":{}}}],["auth",{"_index":323,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["auth'},{'name",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["auth.component.html",{"_index":337,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":336,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth0/angular",{"_index":546,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["authchanged",{"_index":504,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authchangesubject",{"_index":505,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authcomponent",{"_index":210,"title":{"components/AuthComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authenticated",{"_index":358,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["authenticating",{"_index":534,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication",{"_index":363,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"modules/SharedModule.html":{},"miscellaneous/functions.html":{}}}],["authentication/authentication.service",{"_index":389,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavComponent.html":{}}}],["authenticationdto",{"_index":436,"title":{"interfaces/AuthenticationDto.html":{}},"body":{"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"coverage.html":{}}}],["authenticationservice",{"_index":159,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["authguard",{"_index":316,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authguard,adminguard",{"_index":330,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authorization",{"_index":107,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthorizationService.html":{}}}],["authorizationservice",{"_index":103,"title":{"injectables/AuthorizationService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["authresponsedto",{"_index":414,"title":{"interfaces/AuthResponseDto.html":{}},"body":{"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/RegistrationResponseDto.html":{},"coverage.html":{}}}],["authservice",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["authservice:authenticationservice",{"_index":790,"title":{},"body":{"components/NavComponent.html":{}}}],["auto",{"_index":351,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["automatically",{"_index":1230,"title":{},"body":{"index.html":{}}}],["available",{"_index":1264,"title":{},"body":{"modules.html":{}}}],["await",{"_index":392,"title":{},"body":{"guards/AuthGuard.html":{}}}],["back",{"_index":718,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["backend",{"_index":61,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["bar",{"_index":1049,"title":{},"body":{"modules/SharedModule.html":{}}}],["baskerville",{"_index":807,"title":{},"body":{"components/NavComponent.html":{}}}],["before",{"_index":1221,"title":{},"body":{"index.html":{}}}],["behaviorsubject",{"_index":1088,"title":{},"body":{"injectables/UrlService.html":{}}}],["behaviorsubject(null",{"_index":1089,"title":{},"body":{"injectables/UrlService.html":{}}}],["beta.34",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":648,"title":{},"body":{"components/FooterComponent.html":{},"components/NavComponent.html":{},"classes/Routing.html":{}}}],["blame",{"_index":996,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["block",{"_index":770,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["body",{"_index":52,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{},"injectables/NotificationService.html":{}}}],["boolean",{"_index":129,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{}}}],["bootstrap",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["bottom",{"_index":1071,"title":{},"body":{"modules/SharedModule.html":{}}}],["bottom:10px",{"_index":708,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["branch",{"_index":1144,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["break",{"_index":625,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["browse",{"_index":1262,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":1021,"title":{},"body":{"modules/SharedModule.html":{}}}],["browseranimationsmodule",{"_index":1020,"title":{},"body":{"modules/SharedModule.html":{}}}],["browsermodule",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1236,"title":{},"body":{"index.html":{}}}],["button",{"_index":938,"title":{},"body":{"components/RegisterComponent.html":{}}}],["calls",{"_index":36,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{}}}],["canactivate",{"_index":101,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":112,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["capabilities",{"_index":1253,"title":{},"body":{"index.html":{}}}],["capable",{"_index":460,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["card",{"_index":701,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["case",{"_index":618,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catch(ex",{"_index":412,"title":{},"body":{"guards/AuthGuard.html":{}}}],["catcherror",{"_index":613,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror(error",{"_index":615,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["caught",{"_index":1220,"title":{},"body":{"index.html":{}}}],["cdk",{"_index":1060,"title":{},"body":{"modules/SharedModule.html":{}}}],["center",{"_index":702,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["change",{"_index":799,"title":{},"body":{"components/NavComponent.html":{},"index.html":{}}}],["changed",{"_index":345,"title":{},"body":{"components/AuthComponent.html":{}}}],["changes",{"_index":528,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["characters",{"_index":453,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["check",{"_index":786,"title":{},"body":{"components/NavComponent.html":{},"classes/Validation.html":{},"index.html":{}}}],["checkcontrol",{"_index":1113,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol.errors",{"_index":1115,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol.errors.matching",{"_index":1116,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol.value",{"_index":1118,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrolname",{"_index":1099,"title":{},"body":{"classes/Validation.html":{}}}],["checks",{"_index":1101,"title":{},"body":{"classes/Validation.html":{}}}],["choice",{"_index":1248,"title":{},"body":{"index.html":{}}}],["chrome",{"_index":998,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["church's",{"_index":864,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["church\\'s",{"_index":865,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["city",{"_index":495,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["class",{"_index":79,"title":{"classes/Routing.html":{},"classes/Validation.html":{}},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["classes",{"_index":967,"title":{},"body":{"classes/Routing.html":{},"classes/Validation.html":{},"overview.html":{}}}],["cli",{"_index":1224,"title":{},"body":{"index.html":{}}}],["client",{"_index":1214,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":465,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["codelength",{"_index":1124,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["collect",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["color",{"_index":808,"title":{},"body":{"components/NavComponent.html":{}}}],["column",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["command",{"_index":1249,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":1017,"title":{},"body":{"modules/SharedModule.html":{}}}],["complete",{"_index":979,"title":{},"body":{"classes/Routing.html":{},"components/VerifyPhoneComponent.html":{}}}],["component",{"_index":118,"title":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["components",{"_index":95,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"overview.html":{}}}],["concatenates",{"_index":973,"title":{},"body":{"classes/Routing.html":{}}}],["config",{"_index":1074,"title":{},"body":{"modules/SharedModule.html":{}}}],["confirm",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthenticationService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["confirmation",{"_index":325,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/PhoneConfirmationComponent.html":{},"miscellaneous/variables.html":{}}}],["confirmation'},{'name",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["confirmation.component",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["confirmation.component.html",{"_index":850,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["confirmation.component.scss",{"_index":849,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["confirmation.component.ts",{"_index":848,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"coverage.html":{}}}],["confirmation.component.ts:10",{"_index":855,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["confirmation.component.ts:11",{"_index":853,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["confirmation.component.ts:15",{"_index":854,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["confirmation/phone",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PhoneConfirmationComponent.html":{},"coverage.html":{}}}],["confirmpassword",{"_index":908,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["confirmphone",{"_index":506,"title":{},"body":{"injectables/AuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["congratulations",{"_index":340,"title":{},"body":{"components/AuthComponent.html":{}}}],["console.log(error",{"_index":639,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["console.log(this.previousnavigationdata",{"_index":956,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["const",{"_index":321,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["constant",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructed",{"_index":728,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["constructor(accountservice",{"_index":675,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["constructor(authorizationservice",{"_index":102,"title":{},"body":{"guards/AdminGuard.html":{}}}],["constructor(authservice",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["constructor(http",{"_index":20,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{}}}],["constructor(jwthelper",{"_index":558,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(private",{"_index":81,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["constructor(router",{"_index":594,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{}}}],["constructor(toastr",{"_index":824,"title":{},"body":{"injectables/NotificationService.html":{}}}],["contact",{"_index":798,"title":{},"body":{"components/NavComponent.html":{}}}],["contain",{"_index":882,"title":{},"body":{"components/RegisterComponent.html":{}}}],["container",{"_index":346,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["content",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/NavComponent.html":{}}}],["context",{"_index":125,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["continually",{"_index":785,"title":{},"body":{"components/NavComponent.html":{}}}],["control",{"_index":1111,"title":{},"body":{"classes/Validation.html":{}}}],["control.value",{"_index":1117,"title":{},"body":{"classes/Validation.html":{}}}],["controller",{"_index":58,"title":{},"body":{"injectables/AccountService.html":{},"classes/Routing.html":{},"miscellaneous/variables.html":{}}}],["controlname",{"_index":1103,"title":{},"body":{"classes/Validation.html":{}}}],["controls",{"_index":1110,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(checkcontrolname",{"_index":1114,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(checkcontrolname)?.seterrors",{"_index":1119,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(controlname",{"_index":1112,"title":{},"body":{"classes/Validation.html":{}}}],["core",{"_index":474,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"miscellaneous/variables.html":{}}}],["core/authentication/authentication.service",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["core/footer/footer.component",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["core/guards",{"_index":1223,"title":{},"body":{"index.html":{}}}],["core/guards/admin.guard",{"_index":318,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/guards/auth.guard",{"_index":317,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/header/nav.component",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["core/interceptors/error.interceptor",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["core/interceptors/error.interceptor.ts",{"_index":1219,"title":{},"body":{"index.html":{}}}],["core/services/url.service",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["correct",{"_index":1005,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["coverage",{"_index":1159,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createcompleteroute",{"_index":971,"title":{},"body":{"classes/Routing.html":{}}}],["current",{"_index":127,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["currently",{"_index":750,"title":{},"body":{"components/LoginComponent.html":{}}}],["currenturl",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["custom",{"_index":969,"title":{},"body":{"classes/Routing.html":{},"classes/Validation.html":{}}}],["customizing",{"_index":828,"title":{},"body":{"injectables/NotificationService.html":{}}}],["dashboard",{"_index":575,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["dashboard.component.html",{"_index":577,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":576,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":212,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":44,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["declarations",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["decodedtoken",{"_index":569,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["decodedtoken[identity_roles",{"_index":571,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["decoration:none",{"_index":810,"title":{},"body":{"components/NavComponent.html":{}}}],["default",{"_index":41,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Routing.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":24,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["dependencies",{"_index":27,"title":{"dependencies.html":{}},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":7,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"interfaces/ResetPasswordDto.html":{},"classes/Routing.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{}}}],["dev",{"_index":999,"title":{},"body":{"components/ServerErrorComponent.html":{},"index.html":{}}}],["development",{"_index":1225,"title":{},"body":{"index.html":{}}}],["different",{"_index":666,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["digit",{"_index":458,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["digits",{"_index":500,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["diplays",{"_index":832,"title":{},"body":{"injectables/NotificationService.html":{}}}],["direction",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["directive",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["directives",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1235,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1239,"title":{},"body":{"index.html":{}}}],["disallowedroutes",{"_index":1077,"title":{},"body":{"modules/SharedModule.html":{}}}],["disappear",{"_index":990,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["display",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{}}}],["display:block",{"_index":1155,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["displayed",{"_index":737,"title":{},"body":{"components/LoginComponent.html":{}}}],["dist",{"_index":1238,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["driver",{"_index":1208,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dynamic",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1246,"title":{},"body":{"index.html":{}}}],["element",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["email",{"_index":487,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["encountered",{"_index":431,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["end",{"_index":646,"title":{},"body":{"components/FooterComponent.html":{},"components/NavComponent.html":{},"components/ServerErrorComponent.html":{},"index.html":{}}}],["ensure",{"_index":446,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["enter",{"_index":695,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["enumerations",{"_index":1204,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["envaddress",{"_index":976,"title":{},"body":{"classes/Routing.html":{}}}],["envaddress}/${route",{"_index":980,"title":{},"body":{"classes/Routing.html":{}}}],["environment",{"_index":39,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{},"injectables/EnvironmentUrlService.html":{}}}],["environment.apiurl",{"_index":585,"title":{},"body":{"injectables/EnvironmentUrlService.html":{}}}],["environment.ts",{"_index":977,"title":{},"body":{"classes/Routing.html":{}}}],["environmenturlservice",{"_index":23,"title":{"injectables/EnvironmentUrlService.html":{}},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{},"injectables/EnvironmentUrlService.html":{},"coverage.html":{}}}],["envurl",{"_index":22,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{}}}],["equal",{"_index":1102,"title":{},"body":{"classes/Validation.html":{}}}],["equals",{"_index":1108,"title":{},"body":{"classes/Validation.html":{}}}],["error",{"_index":332,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["error'},{'name",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["error.component",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["error.component.html",{"_index":984,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.component.scss",{"_index":983,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.component.ts",{"_index":982,"title":{},"body":{"components/ServerErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:10",{"_index":985,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.component.ts:17",{"_index":986,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.details",{"_index":1015,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.error",{"_index":633,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error.message",{"_index":991,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.status",{"_index":617,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/RegisterComponent.html":{}}}],["error.statustext",{"_index":624,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error/server",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ServerErrorComponent.html":{},"coverage.html":{}}}],["errorinterceptor",{"_index":254,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["errors",{"_index":430,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/RegistrationResponseDto.html":{},"index.html":{}}}],["errors.join",{"_index":622,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errorsasstring",{"_index":621,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["event",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"injectables/UrlService.html":{}}}],["event.url",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["events",{"_index":608,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["examine",{"_index":1004,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["execute",{"_index":1244,"title":{},"body":{"index.html":{}}}],["expired",{"_index":548,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/JwtTokenDto.html":{}}}],["export",{"_index":78,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["exports",{"_index":334,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["extends",{"_index":421,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["false",{"_index":131,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["family",{"_index":806,"title":{},"body":{"components/NavComponent.html":{}}}],["fb",{"_index":1126,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["fb.group",{"_index":1138,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["field",{"_index":769,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["files",{"_index":1232,"title":{},"body":{"index.html":{}}}],["filter",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["first",{"_index":481,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"index.html":{}}}],["firstname",{"_index":482,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["flag",{"_index":423,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"components/NavComponent.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["flex",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/NavComponent.html":{}}}],["flexlayoutmodule",{"_index":1061,"title":{},"body":{"modules/SharedModule.html":{}}}],["following",{"_index":1011,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["font",{"_index":704,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/NavComponent.html":{}}}],["footer",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["footer'},{'name",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["footer.component.html",{"_index":643,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":642,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":214,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forbidden",{"_index":121,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"components/ForbiddenComponent.html":{},"miscellaneous/variables.html":{}}}],["forbidden'},{'name",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["forbidden.component.html",{"_index":655,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["forbidden.component.scss",{"_index":654,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["forbiddencomponent",{"_index":216,"title":{"components/ForbiddenComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgot",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["forgotpassword",{"_index":16,"title":{},"body":{"injectables/AccountService.html":{},"miscellaneous/variables.html":{}}}],["forgotpasswordcomponent",{"_index":218,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgotpasswordform",{"_index":672,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotpasswordform.phone",{"_index":690,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["form",{"_index":742,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["form's",{"_index":1104,"title":{},"body":{"classes/Validation.html":{}}}],["formatted",{"_index":485,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["formattedphone",{"_index":851,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["formbuilder",{"_index":1127,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["formcontrol",{"_index":682,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Validation.html":{}}}],["formgroup",{"_index":678,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["forms",{"_index":1097,"title":{},"body":{"classes/Validation.html":{}}}],["formsmodule",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["formvalue",{"_index":960,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["formvalue.password",{"_index":962,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["formvalues",{"_index":911,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.address1.trim",{"_index":918,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.address2",{"_index":919,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.address2.trim",{"_index":920,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.city.trim",{"_index":921,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.email",{"_index":916,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.email.trim",{"_index":917,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.firstname.trim",{"_index":914,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.lastname.trim",{"_index":915,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.password",{"_index":912,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.phonenumber",{"_index":913,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formvalues.zipcode.trim",{"_index":922,"title":{},"body":{"components/RegisterComponent.html":{}}}],["forth",{"_index":719,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["found",{"_index":813,"title":{},"body":{"components/NotFoundComponent.html":{},"classes/Routing.html":{},"index.html":{}}}],["found'},{'name",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["found.component",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.html",{"_index":815,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":814,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":812,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":817,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":816,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["front",{"_index":1010,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["full",{"_index":328,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":1066,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{}}}],["functionality",{"_index":730,"title":{},"body":{"components/LoginComponent.html":{}}}],["functions",{"_index":517,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/AuthenticationService.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":1254,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1234,"title":{},"body":{"index.html":{}}}],["generated",{"_index":476,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"index.html":{}}}],["getemailerror",{"_index":876,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getfirstnameerror",{"_index":877,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getlastnameerror",{"_index":878,"title":{},"body":{"components/RegisterComponent.html":{}}}],["gets",{"_index":106,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"modules/SharedModule.html":{},"miscellaneous/functions.html":{}}}],["getting",{"_index":1210,"title":{"index.html":{}},"body":{}}],["give",{"_index":1092,"title":{},"body":{"injectables/UrlService.html":{}}}],["go",{"_index":1257,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1263,"title":{},"body":{"modules.html":{}}}],["group",{"_index":739,"title":{},"body":{"components/LoginComponent.html":{}}}],["grow",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["guard",{"_index":90,"title":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["guards",{"_index":92,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"overview.html":{}}}],["half",{"_index":943,"title":{},"body":{"components/RegisterComponent.html":{}}}],["handler",{"_index":607,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["handles",{"_index":605,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["handling",{"_index":560,"title":{},"body":{"injectables/AuthorizationService.html":{},"index.html":{}}}],["hashed",{"_index":443,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["hashing",{"_index":447,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["header",{"_index":703,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["height",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["height:auto",{"_index":652,"title":{},"body":{"components/FooterComponent.html":{}}}],["help",{"_index":1255,"title":{},"body":{"index.html":{}}}],["helper",{"_index":516,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["hide",{"_index":673,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["hide=true",{"_index":897,"title":{},"body":{"components/RegisterComponent.html":{}}}],["hideconfirm",{"_index":870,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["hideconfirm=true",{"_index":898,"title":{},"body":{"components/RegisterComponent.html":{}}}],["hides",{"_index":736,"title":{},"body":{"components/LoginComponent.html":{}}}],["him/her",{"_index":536,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["history.state.data",{"_index":857,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["home",{"_index":818,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["html",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["http",{"_index":33,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["http://localhost:4200",{"_index":1229,"title":{},"body":{"index.html":{}}}],["http://schemas.microsoft.com/ws/2008/06/identity/claims/role",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":21,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{}}}],["httpclientmodule",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":66,"title":{},"body":{"injectables/AccountService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httphandler",{"_index":603,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpinterceptor",{"_index":609,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httprequest",{"_index":602,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpresponse",{"_index":67,"title":{},"body":{"injectables/AccountService.html":{}}}],["iconfig",{"_index":684,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["identifier",{"_index":1161,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":475,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"miscellaneous/variables.html":{}}}],["identity_roles",{"_index":565,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["if(!accesstoken",{"_index":402,"title":{},"body":{"guards/AuthGuard.html":{}}}],["ignore",{"_index":644,"title":{},"body":{"components/FooterComponent.html":{},"injectables/UrlService.html":{}}}],["img",{"_index":650,"title":{},"body":{"components/FooterComponent.html":{}}}],["implements",{"_index":134,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["import",{"_index":65,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["imports",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["information",{"_index":478,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["informative",{"_index":836,"title":{},"body":{"injectables/NotificationService.html":{}}}],["initializes",{"_index":733,"title":{},"body":{"components/LoginComponent.html":{},"components/NavComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"injectables/NotificationService.html":{},"injectables/UrlService.html":{}},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"injectables/UrlService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"injectables/NotificationService.html":{},"injectables/UrlService.html":{},"overview.html":{}}}],["injects",{"_index":26,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{}}}],["inspet",{"_index":1001,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["instance",{"_index":54,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["instanceof",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["intercept",{"_index":593,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["intercept(request",{"_index":601,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptor",{"_index":587,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":588,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["intercepts",{"_index":590,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interface",{"_index":413,"title":{"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"coverage.html":{}}}],["interfaces",{"_index":415,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"overview.html":{}}}],["internal",{"_index":597,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ServerErrorComponent.html":{},"miscellaneous/variables.html":{}}}],["investigation",{"_index":1014,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["isauthenticated",{"_index":543,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isauthenticated:boolean",{"_index":554,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isauthsuccessful",{"_index":422,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["isrefreshsuccess",{"_index":391,"title":{},"body":{"guards/AuthGuard.html":{}}}],["issuccessfulregistration",{"_index":433,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["issue",{"_index":343,"title":{},"body":{"components/AuthComponent.html":{},"components/ServerErrorComponent.html":{}}}],["isuniqueemail",{"_index":871,"title":{},"body":{"components/RegisterComponent.html":{}}}],["isuniqueemail=true",{"_index":900,"title":{},"body":{"components/RegisterComponent.html":{}}}],["isuseradmin",{"_index":557,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["isuserauthenticated",{"_index":507,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/NavComponent.html":{}}}],["isuserauthenticated:boolean",{"_index":789,"title":{},"body":{"components/NavComponent.html":{}}}],["items",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["jacob",{"_index":795,"title":{},"body":{"components/NavComponent.html":{}}}],["javascript",{"_index":561,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["justify",{"_index":645,"title":{},"body":{"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/NavComponent.html":{}}}],["jwt",{"_index":427,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interfaces/RegistrationResponseDto.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["jwt's",{"_index":518,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["jwthelper",{"_index":513,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["jwthelperservice",{"_index":514,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["jwtmodule",{"_index":1065,"title":{},"body":{"modules/SharedModule.html":{}}}],["jwtmodule.forroot",{"_index":1073,"title":{},"body":{"modules/SharedModule.html":{}}}],["jwttoken",{"_index":403,"title":{},"body":{"guards/AuthGuard.html":{}}}],["jwttoken).topromise",{"_index":405,"title":{},"body":{"guards/AuthGuard.html":{}}}],["jwttokendto",{"_index":387,"title":{"interfaces/JwtTokenDto.html":{}},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/RegistrationResponseDto.html":{},"coverage.html":{}}}],["karma",{"_index":1245,"title":{},"body":{"index.html":{}}}],["large",{"_index":706,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["last",{"_index":483,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["lastname",{"_index":484,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["layout",{"_index":1063,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["leaving",{"_index":1222,"title":{},"body":{"index.html":{}}}],["legend",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["length",{"_index":451,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["letter",{"_index":1156,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["letters",{"_index":883,"title":{},"body":{"components/RegisterComponent.html":{}}}],["level",{"_index":108,"title":{},"body":{"guards/AdminGuard.html":{}}}],["list",{"_index":1036,"title":{},"body":{"modules/SharedModule.html":{}}}],["lived",{"_index":716,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["local",{"_index":381,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{}}}],["localhost:5001",{"_index":1076,"title":{},"body":{"modules/SharedModule.html":{}}}],["localstorage.getitem(tokens.access",{"_index":390,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"modules/SharedModule.html":{}}}],["localstorage.getitem(tokens.refresh",{"_index":401,"title":{},"body":{"guards/AuthGuard.html":{}}}],["localstorage.removeitem(tokens.access",{"_index":550,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.removeitem(tokens.refresh",{"_index":551,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem(tokens.access",{"_index":410,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["localstorage.setitem(tokens.refresh",{"_index":411,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["log",{"_index":665,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/UpdatedPasswordComponent.html":{}}}],["logging",{"_index":535,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logic",{"_index":1217,"title":{},"body":{"index.html":{}}}],["login",{"_index":371,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["login.component.html",{"_index":725,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":724,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.password",{"_index":758,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.username",{"_index":757,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":221,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":726,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginformvalue",{"_index":747,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginuser",{"_index":508,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{}}}],["logo",{"_index":805,"title":{},"body":{"components/NavComponent.html":{}}}],["logout",{"_index":509,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/NavComponent.html":{}}}],["long",{"_index":501,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["mail",{"_index":933,"title":{},"body":{"components/RegisterComponent.html":{}}}],["main",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["make",{"_index":696,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ServerErrorComponent.html":{}}}],["making",{"_index":740,"title":{},"body":{"components/LoginComponent.html":{}}}],["manage",{"_index":9,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["managetemplates",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["managetemplatescomponent",{"_index":223,"title":{"components/ManageTemplatesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["managing",{"_index":729,"title":{},"body":{"components/LoginComponent.html":{}}}],["margin",{"_index":349,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["margin:5",{"_index":1154,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["mask",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{},"dependencies.html":{}}}],["mat",{"_index":700,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["matbuttonmodule",{"_index":1022,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbuttontogglemodule",{"_index":1024,"title":{},"body":{"modules/SharedModule.html":{}}}],["matcardmodule",{"_index":1026,"title":{},"body":{"modules/SharedModule.html":{}}}],["match",{"_index":467,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{}}}],["match(controlname",{"_index":1098,"title":{},"body":{"classes/Validation.html":{}}}],["matcheckboxmodule",{"_index":1030,"title":{},"body":{"modules/SharedModule.html":{}}}],["matching",{"_index":89,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":1028,"title":{},"body":{"modules/SharedModule.html":{}}}],["material",{"_index":1019,"title":{},"body":{"modules/SharedModule.html":{}}}],["matformfieldmodule",{"_index":1032,"title":{},"body":{"modules/SharedModule.html":{}}}],["matgridlistmodule",{"_index":1034,"title":{},"body":{"modules/SharedModule.html":{}}}],["maticonmodule",{"_index":1037,"title":{},"body":{"modules/SharedModule.html":{}}}],["matinputmodule",{"_index":1039,"title":{},"body":{"modules/SharedModule.html":{}}}],["matlistmodule",{"_index":1041,"title":{},"body":{"modules/SharedModule.html":{}}}],["matmenumodule",{"_index":1043,"title":{},"body":{"modules/SharedModule.html":{}}}],["matnativedatemodule",{"_index":1045,"title":{},"body":{"modules/SharedModule.html":{}}}],["matprogressbarmodule",{"_index":1047,"title":{},"body":{"modules/SharedModule.html":{}}}],["matselectmodule",{"_index":1050,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsidenavmodule",{"_index":1052,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattabsmodule",{"_index":1054,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattoolbarmodule",{"_index":1056,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattooltipmodule",{"_index":1058,"title":{},"body":{"modules/SharedModule.html":{}}}],["max",{"_index":353,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["maximum",{"_index":450,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["media",{"_index":352,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{}}}],["menu",{"_index":800,"title":{},"body":{"components/NavComponent.html":{}}}],["message",{"_index":837,"title":{},"body":{"injectables/NotificationService.html":{}}}],["messages",{"_index":599,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/NotificationService.html":{}}}],["metadata",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["method",{"_index":46,"title":{},"body":{"injectables/AccountService.html":{},"classes/Routing.html":{}}}],["methods",{"_index":100,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["min",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["miscellaneous",{"_index":1203,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":244,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}},"body":{}}],["modules",{"_index":246,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/account/auth/auth.component",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/account/auth/login/login.component",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/account/auth/register/register.component",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/account/password/forgot",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/account/password/reset",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/account/password/updated",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/account/phone/phone",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/account/phone/verify",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/church",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/dashboard/pages/dashboard/dashboard.component",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/errors/pages/forbidden/forbidden.component",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/errors/pages/not",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modules/errors/pages/server",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["more",{"_index":1256,"title":{},"body":{"index.html":{}}}],["multi",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":30,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["nav",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["nav'},{'name",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["nav.component.html",{"_index":781,"title":{},"body":{"components/NavComponent.html":{}}}],["nav.component.scss",{"_index":780,"title":{},"body":{"components/NavComponent.html":{}}}],["navbar",{"_index":779,"title":{},"body":{"components/NavComponent.html":{}}}],["navcomponent",{"_index":225,"title":{"components/NavComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":746,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["navigates",{"_index":109,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["navigatetologin",{"_index":656,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["navigating",{"_index":1083,"title":{},"body":{"injectables/UrlService.html":{}}}],["navigation",{"_index":598,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{}}}],["navigation?.extras?.state?.error",{"_index":989,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["navigationend",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"injectables/UrlService.html":{}}}],["navigationextras",{"_index":612,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["necessary",{"_index":111,"title":{},"body":{"guards/AdminGuard.html":{}}}],["need",{"_index":1250,"title":{},"body":{"index.html":{}}}],["network",{"_index":1002,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["new",{"_index":378,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UrlService.html":{},"coverage.html":{},"index.html":{}}}],["newrefreshtoken",{"_index":408,"title":{},"body":{"guards/AuthGuard.html":{}}}],["newtoken",{"_index":406,"title":{},"body":{"guards/AuthGuard.html":{}}}],["next",{"_index":122,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{}}}],["next.handle(request).pipe",{"_index":614,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":1227,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["ngoninit",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["ngx",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/VerifyPhoneComponent.html":{},"dependencies.html":{}}}],["ngxmaskmodule",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxmaskmodule.forroot",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["non",{"_index":442,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["none",{"_index":804,"title":{},"body":{"components/NavComponent.html":{}}}],["note",{"_index":992,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["notfound",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notfoundcomponent",{"_index":227,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notification",{"_index":833,"title":{},"body":{"injectables/NotificationService.html":{}}}],["notifications",{"_index":600,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/NotificationService.html":{},"modules/SharedModule.html":{}}}],["notificationservice",{"_index":595,"title":{"injectables/NotificationService.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/NotificationService.html":{},"coverage.html":{}}}],["null",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthorizationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["number",{"_index":438,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["numbers",{"_index":530,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["obervable",{"_index":521,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["object",{"_index":418,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["object.values(error.error",{"_index":620,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["observable",{"_index":70,"title":{},"body":{"injectables/AccountService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/UrlService.html":{}}}],["observed",{"_index":524,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["ocurred",{"_index":932,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["once",{"_index":751,"title":{},"body":{"components/LoginComponent.html":{}}}],["one",{"_index":940,"title":{},"body":{"components/RegisterComponent.html":{}}}],["oninit",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["open",{"_index":997,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["operation",{"_index":384,"title":{},"body":{"guards/AuthGuard.html":{}}}],["optional",{"_index":32,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["options",{"_index":686,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":469,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["otherwise",{"_index":120,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthorizationService.html":{},"classes/Validation.html":{}}}],["out",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1258,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owner",{"_index":698,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["package",{"_index":1185,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":649,"title":{},"body":{"components/FooterComponent.html":{},"components/NavComponent.html":{}}}],["page",{"_index":372,"title":{},"body":{"guards/AuthGuard.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["pair",{"_index":466,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["param",{"_index":80,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"classes/Routing.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{}}}],["parameter",{"_index":124,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["partial",{"_index":687,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["pass",{"_index":419,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["passed",{"_index":717,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["password",{"_index":49,"title":{},"body":{"injectables/AccountService.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthenticationDto.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/UpdatedPasswordComponent.html":{},"interfaces/UserForRegistrationDto.html":{},"miscellaneous/variables.html":{}}}],["password'},{'name",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["password.component",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["password.component.html",{"_index":671,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatedPasswordComponent.html":{}}}],["password.component.scss",{"_index":670,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatedPasswordComponent.html":{}}}],["password.component.ts",{"_index":669,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatedPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["password.component.ts:10",{"_index":1079,"title":{},"body":{"components/UpdatedPasswordComponent.html":{}}}],["password.component.ts:14",{"_index":1080,"title":{},"body":{"components/UpdatedPasswordComponent.html":{}}}],["password.component.ts:15",{"_index":952,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:16",{"_index":951,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":679,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:18",{"_index":680,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:19",{"_index":676,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:20",{"_index":950,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:21",{"_index":953,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:22",{"_index":948,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":677,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:28",{"_index":949,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:33",{"_index":681,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:47",{"_index":954,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/forgot",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["password/reset",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["password/updated",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/UpdatedPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordminlength",{"_index":872,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwords",{"_index":936,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["path",{"_index":322,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":327,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["paths",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payload",{"_index":59,"title":{},"body":{"injectables/AccountService.html":{}}}],["persisting",{"_index":721,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["phone",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["phone.component",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["phone.component.html",{"_index":1123,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.scss",{"_index":1122,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts",{"_index":1121,"title":{},"body":{"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["phone.component.ts:19",{"_index":1135,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:20",{"_index":1131,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:21",{"_index":1132,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:22",{"_index":1133,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:23",{"_index":1134,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:24",{"_index":1128,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:38",{"_index":1129,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone.component.ts:52",{"_index":1130,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["phone/verify",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["phoneconfirmationcomponent",{"_index":229,"title":{"components/PhoneConfirmationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["phonenuberdto",{"_index":553,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["phonenumber",{"_index":462,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["phonenumberdto",{"_index":55,"title":{"interfaces/PhoneNumberDto.html":{}},"body":{"injectables/AccountService.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["phoneverification",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phoneverificationdto",{"_index":64,"title":{"interfaces/PhoneVerificationDto.html":{}},"body":{"injectables/AccountService.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["place",{"_index":449,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["placed",{"_index":380,"title":{},"body":{"guards/AuthGuard.html":{}}}],["plain",{"_index":440,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["platform",{"_index":1247,"title":{},"body":{"index.html":{}}}],["please",{"_index":664,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["portion",{"_index":496,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["positionclass",{"_index":1069,"title":{},"body":{"modules/SharedModule.html":{}}}],["postman",{"_index":1007,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["present",{"_index":547,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["previous",{"_index":1087,"title":{},"body":{"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["previousnavigationdata",{"_index":946,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["previousurl",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["private",{"_index":82,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["probably",{"_index":995,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["project",{"_index":1213,"title":{},"body":{"index.html":{}}}],["promise",{"_index":373,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properties",{"_index":14,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["property",{"_index":1107,"title":{},"body":{"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["provide",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":76,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"injectables/NotificationService.html":{},"injectables/UrlService.html":{}}}],["providedin:'root",{"_index":753,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["providers",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":15,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["query",{"_index":128,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["queryparams",{"_index":137,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/ForbiddenComponent.html":{}}}],["reactiveformsmodule",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["receive",{"_index":455,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["received",{"_index":591,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["receives",{"_index":35,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{}}}],["receiving",{"_index":471,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["recording",{"_index":424,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["records",{"_index":434,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["redirected",{"_index":749,"title":{},"body":{"components/LoginComponent.html":{}}}],["redirectto",{"_index":326,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1259,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":368,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"miscellaneous/variables.html":{}}}],["refreshauthentication",{"_index":510,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["refreshing",{"_index":398,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ServerErrorComponent.html":{}}}],["refreshtoken",{"_index":400,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/JwtTokenDto.html":{},"miscellaneous/variables.html":{}}}],["refreshtokens",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["register",{"_index":797,"title":{},"body":{"components/NavComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["register.component.html",{"_index":869,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":868,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":231,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":342,"title":{},"body":{"components/AuthComponent.html":{},"components/PhoneConfirmationComponent.html":{}}}],["registerform",{"_index":873,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerformvalue",{"_index":910,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registering",{"_index":479,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["registeruser",{"_index":511,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registration",{"_index":428,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/RegistrationResponseDto.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["registrationresponsedto",{"_index":432,"title":{"interfaces/RegistrationResponseDto.html":{}},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{},"coverage.html":{}}}],["reload",{"_index":1231,"title":{},"body":{"index.html":{}}}],["remove",{"_index":788,"title":{},"body":{"components/NavComponent.html":{}}}],["removes",{"_index":538,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["renewed",{"_index":722,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["represent",{"_index":87,"title":{},"body":{"injectables/AccountService.html":{}}}],["representing",{"_index":444,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/NavComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["represents",{"_index":714,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["reproduce",{"_index":1006,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["request",{"_index":439,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interceptors/ErrorInterceptor.html":{},"components/ServerErrorComponent.html":{}}}],["requested",{"_index":667,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["requests",{"_index":592,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{}}}],["required",{"_index":123,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/AuthenticationDto.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["reset",{"_index":50,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthenticationDto.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"overview.html":{}}}],["reset.please",{"_index":1081,"title":{},"body":{"components/UpdatedPasswordComponent.html":{}}}],["resetpassword",{"_index":17,"title":{},"body":{"injectables/AccountService.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordcomponent",{"_index":233,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetpassworddto",{"_index":60,"title":{"interfaces/ResetPasswordDto.html":{}},"body":{"injectables/AccountService.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{}}}],["resetpassworddto.phonenumber",{"_index":966,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordform",{"_index":947,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordformvalue",{"_index":959,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordtoken",{"_index":18,"title":{},"body":{"injectables/AccountService.html":{},"miscellaneous/variables.html":{}}}],["resetting",{"_index":344,"title":{},"body":{"components/AuthComponent.html":{}}}],["resource",{"_index":748,"title":{},"body":{"components/LoginComponent.html":{}}}],["response",{"_index":45,"title":{},"body":{"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/RegisterComponent.html":{},"components/ServerErrorComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["response.accesstoken",{"_index":407,"title":{},"body":{"guards/AuthGuard.html":{}}}],["response.refreshtoken",{"_index":409,"title":{},"body":{"guards/AuthGuard.html":{}}}],["result",{"_index":793,"title":{},"body":{"components/NavComponent.html":{}}}],["result.accesstoken",{"_index":761,"title":{},"body":{"components/LoginComponent.html":{}}}],["result.refreshtoken",{"_index":762,"title":{},"body":{"components/LoginComponent.html":{}}}],["results",{"_index":88,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":564,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["return",{"_index":85,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"classes/Routing.html":{},"modules/SharedModule.html":{},"classes/Validation.html":{}}}],["returned",{"_index":1218,"title":{},"body":{"index.html":{}}}],["returns",{"_index":83,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["returnurl",{"_index":138,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["right",{"_index":1072,"title":{},"body":{"modules/SharedModule.html":{}}}],["rock",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/PhoneConfirmationComponent.html":{}}}],["rock's",{"_index":1216,"title":{},"body":{"index.html":{}}}],["role",{"_index":98,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthorizationService.html":{}}}],["roles",{"_index":566,"title":{},"body":{"injectables/AuthorizationService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["roles.administrator",{"_index":572,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["roles.superadmin",{"_index":573,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["root",{"_index":77,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"injectables/NotificationService.html":{},"injectables/UrlService.html":{}}}],["root'},{'name",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["route",{"_index":47,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Routing.html":{},"components/VerifyPhoneComponent.html":{}}}],["router",{"_index":104,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["routermodule",{"_index":314,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":333,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerpaths",{"_index":319,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routerstatesnapshot",{"_index":115,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["routes",{"_index":315,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["routing",{"_index":72,"title":{"classes/Routing.html":{}},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{},"classes/Routing.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing.module",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":313,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1226,"title":{},"body":{"index.html":{}}}],["running",{"_index":1240,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":71,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/UrlService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["same",{"_index":1009,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scaffolding",{"_index":1233,"title":{},"body":{"index.html":{}}}],["secondary",{"_index":493,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["security",{"_index":445,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["see",{"_index":1008,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["seeing",{"_index":993,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["selector",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["send",{"_index":454,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["sendauthstatechangenotification",{"_index":512,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sending",{"_index":470,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["sends",{"_index":34,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/VerifyPhoneComponent.html":{}}}],["sent",{"_index":53,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["serve",{"_index":1228,"title":{},"body":{"index.html":{}}}],["server",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["servererror",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["servererrorcomponent",{"_index":234,"title":{"components/ServerErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["service",{"_index":8,"title":{},"body":{"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"injectables/UrlService.html":{}}}],["services/authorization.service",{"_index":133,"title":{},"body":{"guards/AdminGuard.html":{}}}],["services/environment",{"_index":545,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["services/manage",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ManageTemplatesComponent.html":{},"coverage.html":{}}}],["services/notification.service",{"_index":611,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["session",{"_index":51,"title":{},"body":{"injectables/AccountService.html":{}}}],["set",{"_index":745,"title":{},"body":{"components/LoginComponent.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{}}}],["setpreviousurl",{"_index":1084,"title":{},"body":{"injectables/UrlService.html":{}}}],["setpreviousurl(previousurl",{"_index":1085,"title":{},"body":{"injectables/UrlService.html":{}}}],["sets",{"_index":734,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UrlService.html":{}}}],["shared/shared.module",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":253,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["short",{"_index":715,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["show",{"_index":803,"title":{},"body":{"components/NavComponent.html":{}}}],["showerror",{"_index":820,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showerror(messages",{"_index":830,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showinfo",{"_index":821,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showinfo(message",{"_index":834,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showsuccess",{"_index":822,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showsuccess(message",{"_index":838,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showwarning",{"_index":823,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showwarning(message",{"_index":840,"title":{},"body":{"injectables/NotificationService.html":{}}}],["shrink",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["side",{"_index":1215,"title":{},"body":{"index.html":{}}}],["size",{"_index":705,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/NavComponent.html":{}}}],["sms",{"_index":461,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["sometext@moretext.tld",{"_index":486,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/DashboardComponent.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"modules/SharedModule.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"index.html":{}}}],["space",{"_index":647,"title":{},"body":{"components/FooterComponent.html":{},"components/NavComponent.html":{}}}],["spacing",{"_index":1157,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["src/.../app.constants.ts",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../forgot",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../login.component.ts",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../register.component.ts",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.ts",{"_index":1205,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../shared.module.ts",{"_index":1209,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../verify",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":312,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.constants",{"_index":386,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["src/app/app.constants.ts",{"_index":1164,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.module.ts",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/authentication/authentication.service",{"_index":752,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["src/app/core/authentication/authentication.service.ts",{"_index":503,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/core/authentication/authentication.service.ts:102",{"_index":542,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:18",{"_index":515,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:33",{"_index":526,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:37",{"_index":520,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:45",{"_index":529,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:53",{"_index":531,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:65",{"_index":533,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:72",{"_index":537,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:84",{"_index":540,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:94",{"_index":541,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/footer/footer.component.ts",{"_index":641,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/core/guards/admin.guard.ts",{"_index":93,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/admin.guard.ts:11",{"_index":105,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/admin.guard.ts:26",{"_index":116,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":357,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/auth.guard.ts:13",{"_index":361,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:29",{"_index":366,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:53",{"_index":375,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/header/nav.component.ts",{"_index":778,"title":{},"body":{"components/NavComponent.html":{},"coverage.html":{}}}],["src/app/core/header/nav.component.ts:17",{"_index":782,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/core/header/nav.component.ts:34",{"_index":784,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/core/header/nav.component.ts:44",{"_index":787,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/core/interceptors/error.interceptor.ts",{"_index":589,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/core/interceptors/error.interceptor.ts:13",{"_index":596,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/core/interceptors/error.interceptor.ts:29",{"_index":604,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/core/services/account.service",{"_index":685,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["src/app/core/services/account.service.ts",{"_index":6,"title":{},"body":{"injectables/AccountService.html":{},"coverage.html":{}}}],["src/app/core/services/account.service.ts:14",{"_index":25,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:31",{"_index":62,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:41",{"_index":43,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:51",{"_index":56,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/authorization.service.ts",{"_index":556,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["src/app/core/services/authorization.service.ts:12",{"_index":559,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/core/services/authorization.service.ts:24",{"_index":563,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/core/services/environment",{"_index":581,"title":{},"body":{"injectables/EnvironmentUrlService.html":{},"coverage.html":{}}}],["src/app/core/services/notification.service.ts",{"_index":819,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/core/services/notification.service.ts:10",{"_index":826,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:23",{"_index":839,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:32",{"_index":831,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:42",{"_index":835,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification.service.ts:51",{"_index":841,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/url.service",{"_index":1136,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["src/app/core/services/url.service.ts",{"_index":1082,"title":{},"body":{"injectables/UrlService.html":{},"coverage.html":{}}}],["src/app/core/services/url.service.ts:15",{"_index":1090,"title":{},"body":{"injectables/UrlService.html":{}}}],["src/app/core/services/url.service.ts:19",{"_index":1094,"title":{},"body":{"injectables/UrlService.html":{}}}],["src/app/core/services/url.service.ts:30",{"_index":1086,"title":{},"body":{"injectables/UrlService.html":{}}}],["src/app/modules/account/auth/auth.component.ts",{"_index":335,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/modules/account/auth/auth.component.ts:12",{"_index":339,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/modules/account/auth/auth.component.ts:8",{"_index":338,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts",{"_index":723,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:26",{"_index":738,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:30",{"_index":735,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:36",{"_index":727,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:51",{"_index":732,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/login/login.component.ts:67",{"_index":743,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts",{"_index":867,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:101",{"_index":881,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:108",{"_index":884,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:24",{"_index":892,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:25",{"_index":894,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:26",{"_index":889,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:27",{"_index":886,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:28",{"_index":887,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:29",{"_index":893,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:30",{"_index":888,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:31",{"_index":890,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:32",{"_index":879,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:37",{"_index":885,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:68",{"_index":891,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/auth/register/register.component.ts:94",{"_index":880,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/account/password/forgot",{"_index":668,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/account/password/reset",{"_index":945,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/modules/account/password/updated",{"_index":1078,"title":{},"body":{"components/UpdatedPasswordComponent.html":{},"coverage.html":{}}}],["src/app/modules/account/phone/phone",{"_index":847,"title":{},"body":{"components/PhoneConfirmationComponent.html":{},"coverage.html":{}}}],["src/app/modules/account/phone/verify",{"_index":1120,"title":{},"body":{"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/church",{"_index":772,"title":{},"body":{"components/ManageTemplatesComponent.html":{},"coverage.html":{}}}],["src/app/modules/dashboard/pages/dashboard/dashboard.component.ts",{"_index":574,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/modules/dashboard/pages/dashboard/dashboard.component.ts:12",{"_index":579,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/modules/dashboard/pages/dashboard/dashboard.component.ts:8",{"_index":578,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/modules/errors/pages/forbidden/forbidden.component.ts",{"_index":653,"title":{},"body":{"components/ForbiddenComponent.html":{},"coverage.html":{}}}],["src/app/modules/errors/pages/forbidden/forbidden.component.ts:11",{"_index":658,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["src/app/modules/errors/pages/forbidden/forbidden.component.ts:15",{"_index":659,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["src/app/modules/errors/pages/forbidden/forbidden.component.ts:19",{"_index":660,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["src/app/modules/errors/pages/not",{"_index":811,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/modules/errors/pages/server",{"_index":981,"title":{},"body":{"components/ServerErrorComponent.html":{},"coverage.html":{}}}],["src/app/shared/directives/routing",{"_index":73,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{}}}],["src/app/shared/directives/routing.ts",{"_index":968,"title":{},"body":{"classes/Routing.html":{},"coverage.html":{}}}],["src/app/shared/directives/routing.ts:11",{"_index":972,"title":{},"body":{"classes/Routing.html":{}}}],["src/app/shared/directives/validation",{"_index":896,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["src/app/shared/directives/validation.ts",{"_index":1096,"title":{},"body":{"classes/Validation.html":{},"coverage.html":{}}}],["src/app/shared/directives/validation.ts:14",{"_index":1100,"title":{},"body":{"classes/Validation.html":{}}}],["src/app/shared/models/account",{"_index":74,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["src/app/shared/models/account.ts",{"_index":437,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"coverage.html":{}}}],["src/app/shared/models/jwt",{"_index":388,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/JwtTokenDto.html":{},"coverage.html":{}}}],["src/app/shared/models/response",{"_index":544,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/shared/models/response.ts",{"_index":416,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{},"coverage.html":{}}}],["src/app/shared/models/roles",{"_index":567,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/shared/models/roles.ts",{"_index":1206,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1016,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/environments/environment",{"_index":586,"title":{},"body":{"injectables/EnvironmentUrlService.html":{}}}],["stack",{"_index":1012,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["start",{"_index":48,"title":{},"body":{"injectables/AccountService.html":{},"components/ServerErrorComponent.html":{}}}],["started",{"_index":1211,"title":{"index.html":{}},"body":{}}],["state",{"_index":114,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["state.url",{"_index":139,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["statements",{"_index":1162,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":970,"title":{},"body":{"classes/Routing.html":{},"classes/Validation.html":{}}}],["status",{"_index":364,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{}}}],["storage",{"_index":382,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{}}}],["stored",{"_index":532,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/SharedModule.html":{},"index.html":{}}}],["street",{"_index":488,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["stretch",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["strictly",{"_index":456,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["string",{"_index":84,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"classes/Routing.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":975,"title":{},"body":{"classes/Routing.html":{},"classes/Validation.html":{}}}],["styles",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["styleurls",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["styling",{"_index":829,"title":{},"body":{"injectables/NotificationService.html":{}}}],["subject",{"_index":525,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["submission",{"_index":744,"title":{},"body":{"components/LoginComponent.html":{}}}],["submit",{"_index":674,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["submitted",{"_index":874,"title":{},"body":{"components/RegisterComponent.html":{}}}],["submitted=false",{"_index":899,"title":{},"body":{"components/RegisterComponent.html":{}}}],["subscribe",{"_index":692,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["subscribe((event:event",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(response",{"_index":924,"title":{},"body":{"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["subscribe(result",{"_index":760,"title":{},"body":{"components/LoginComponent.html":{},"components/NavComponent.html":{}}}],["subscribed",{"_index":1091,"title":{},"body":{"injectables/UrlService.html":{}}}],["subtitle",{"_index":709,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["successful",{"_index":369,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["successfully",{"_index":341,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthenticationDto.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"components/UpdatedPasswordComponent.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["suite",{"_index":492,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["superadmin",{"_index":1207,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["support",{"_index":1260,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":697,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ServerErrorComponent.html":{}}}],["svg",{"_index":1261,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":616,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["tab",{"_index":1003,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["table",{"_index":1184,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1183,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":448,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["template",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["templates",{"_index":329,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ManageTemplatesComponent.html":{},"miscellaneous/variables.html":{}}}],["templates'},{'name",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["templates.component",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["templates.component.html",{"_index":775,"title":{},"body":{"components/ManageTemplatesComponent.html":{}}}],["templates.component.scss",{"_index":774,"title":{},"body":{"components/ManageTemplatesComponent.html":{}}}],["templates.component.ts",{"_index":773,"title":{},"body":{"components/ManageTemplatesComponent.html":{},"coverage.html":{}}}],["templates.component.ts:12",{"_index":777,"title":{},"body":{"components/ManageTemplatesComponent.html":{}}}],["templates.component.ts:8",{"_index":776,"title":{},"body":{"components/ManageTemplatesComponent.html":{}}}],["templates/manage",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ManageTemplatesComponent.html":{},"coverage.html":{}}}],["templateurl",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["test",{"_index":1243,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1252,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1242,"title":{},"body":{"index.html":{}}}],["text",{"_index":441,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["thereby",{"_index":720,"title":{},"body":{"interfaces/JwtTokenDto.html":{}}}],["third",{"_index":941,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.accountservice.forgotpassword(apipaths.forgotpassword",{"_index":691,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.accountservice.resetpassword(apipaths.resetpassword",{"_index":964,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.accountservice.resetpasswordtoken(apipaths.resetpasswordtoken",{"_index":1149,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.authchangesubject.asobservable",{"_index":519,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authchangesubject.next(isauthenticated",{"_index":555,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authorizationservice.isuseradmin",{"_index":135,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.authservice.authchanged",{"_index":791,"title":{},"body":{"components/NavComponent.html":{}}}],["this.authservice.confirmphone(apipaths.confirmphone",{"_index":1146,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.authservice.isuserauthenticated",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{}}}],["this.authservice.loginuser(apipaths.login",{"_index":759,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":794,"title":{},"body":{"components/NavComponent.html":{}}}],["this.authservice.refreshauthentication(apipaths.refreshtokens",{"_index":404,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.registeruser(apipaths.registration",{"_index":923,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.sendauthstatechangenotification(false",{"_index":394,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.sendauthstatechangenotification(isrefreshsuccess",{"_index":396,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.sendauthstatechangenotification(result.isauthsuccessful",{"_index":763,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.sendauthstatechangenotification(true",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currenturl",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["this.error",{"_index":988,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["this.forgotpasswordform",{"_index":688,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.formattedphone",{"_index":858,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["this.http.post(routing.createcompleteroute(this.envurl.apiurl",{"_index":86,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{}}}],["this.isuserauthenticated",{"_index":792,"title":{},"body":{"components/NavComponent.html":{}}}],["this.jwthelper.decodetoken(accesstoken",{"_index":570,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.jwthelper.istokenexpired(accesstoken",{"_index":549,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.loginform",{"_index":754,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.notificationservice.showerror(\"something",{"_index":635,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.notificationservice.showerror(error.error",{"_index":627,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.notificationservice.showerror(errorsasstring",{"_index":623,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.phonenumber",{"_index":1141,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.previousnavigationdata",{"_index":955,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.previousnavigationdata?.phonenumber",{"_index":961,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.previousnavigationdata?.token",{"_index":963,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.previousurl",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.previousurl.asobservable",{"_index":1093,"title":{},"body":{"injectables/UrlService.html":{}}}],["this.previousurl.next(previousurl",{"_index":1095,"title":{},"body":{"injectables/UrlService.html":{}}}],["this.previousurl?.includes(routerpaths.auth",{"_index":1145,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.previousurl?.includes(routerpaths.forgotpassword",{"_index":1148,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.registerform",{"_index":901,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['email'].haserror('email",{"_index":927,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['email'].haserror('required",{"_index":926,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['firstname'].haserror('pattern",{"_index":929,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['firstname'].haserror('required",{"_index":928,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['lastname'].haserror('pattern",{"_index":931,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['lastname'].haserror('required",{"_index":930,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.resetpasswordform",{"_index":957,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.returnurl",{"_index":661,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":662,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.router.events",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.getcurrentnavigation",{"_index":987,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["this.router.navigate",{"_index":694,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.router.navigate(['/auth",{"_index":663,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/NavComponent.html":{}}}],["this.router.navigate(['/forbidden",{"_index":136,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.router.navigate([routerpaths.auth",{"_index":395,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate([routerpaths.confirmphone",{"_index":1147,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.router.navigate([routerpaths.resetpassword",{"_index":1150,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.router.navigate([routerpaths.updatedpassword",{"_index":965,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.router.navigate([routerpaths.verifyphone",{"_index":693,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate([this.returnurl",{"_index":764,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["this.router.navigatebyurl(routerpaths.notfound",{"_index":629,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.router.navigatebyurl(routerpaths.servererror",{"_index":634,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.sendauthstatechangenotification(false",{"_index":552,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.toastr.error(messages",{"_index":844,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.toastr.info(message",{"_index":845,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.toastr.success(message",{"_index":843,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.toastr.warning(message",{"_index":846,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.tryrefreshingtokens(accesstoken",{"_index":393,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.urlservice.previousurl$.subscribe((previousurl",{"_index":1142,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.urlservice.setpreviousurl(this.previousurl",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userphone",{"_index":856,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["this.userphone.substring(0",{"_index":859,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["this.userphone.substring(3",{"_index":861,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["this.userphone.substring(6",{"_index":863,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["this.validationerrors",{"_index":925,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.verifyphoneform",{"_index":1137,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["this.verifyphoneform.value.verifycode",{"_index":1143,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["throwerror",{"_index":610,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(error",{"_index":640,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["title",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"injectables/NotificationService.html":{}}}],["toast",{"_index":1070,"title":{},"body":{"modules/SharedModule.html":{}}}],["toastr",{"_index":827,"title":{},"body":{"injectables/NotificationService.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["toastrmodule",{"_index":1064,"title":{},"body":{"modules/SharedModule.html":{}}}],["toastrmodule.forroot",{"_index":1068,"title":{},"body":{"modules/SharedModule.html":{}}}],["toastrservice",{"_index":825,"title":{},"body":{"injectables/NotificationService.html":{}}}],["toggle",{"_index":1025,"title":{},"body":{"modules/SharedModule.html":{}}}],["token",{"_index":57,"title":{},"body":{"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"modules/SharedModule.html":{},"interfaces/UserForRegistrationDto.html":{},"miscellaneous/functions.html":{}}}],["token.ts",{"_index":712,"title":{},"body":{"interfaces/JwtTokenDto.html":{},"coverage.html":{}}}],["tokengetter",{"_index":1067,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tokens",{"_index":379,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tools",{"_index":1000,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["top:5px",{"_index":707,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["trace",{"_index":1013,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["tracks",{"_index":527,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["transfer",{"_index":417,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/RegistrationResponseDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["transmit",{"_index":464,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["transportation",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/PhoneConfirmationComponent.html":{},"index.html":{}}}],["transportationclient",{"_index":1212,"title":{},"body":{"index.html":{}}}],["tree",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["true",{"_index":130,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Validation.html":{}}}],["try",{"_index":397,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tryrefreshingtokens",{"_index":360,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tryrefreshingtokens(accesstoken",{"_index":374,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tslib",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":974,"title":{},"body":{"classes/Routing.html":{},"classes/Validation.html":{}}}],["type",{"_index":31,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseDto.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegistrationResponseDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"interfaces/UserForRegistrationDto.html":{},"classes/Validation.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typically",{"_index":498,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["undefined",{"_index":463,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"injectables/AuthorizationService.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PhoneConfirmationComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"components/UpdatedPasswordComponent.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["unexpected",{"_index":636,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["unit",{"_index":1241,"title":{},"body":{"index.html":{}}}],["until",{"_index":1151,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["up",{"_index":741,"title":{},"body":{"components/LoginComponent.html":{}}}],["update",{"_index":477,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["updated",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["updatedpassword",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatedpasswordcomponent",{"_index":237,"title":{"components/UpdatedPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["updates",{"_index":539,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["upon",{"_index":420,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{}}}],["url",{"_index":40,"title":{},"body":{"injectables/AccountService.html":{},"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"classes/Routing.html":{},"components/ServerErrorComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["url.service",{"_index":75,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthenticationService.html":{}}}],["url.service.ts",{"_index":582,"title":{},"body":{"injectables/EnvironmentUrlService.html":{},"coverage.html":{}}}],["url.service.ts:9",{"_index":584,"title":{},"body":{"injectables/EnvironmentUrlService.html":{}}}],["urlservice",{"_index":160,"title":{"injectables/UrlService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["use",{"_index":935,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["useclass",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":94,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":110,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"miscellaneous/enumerations.html":{}}}],["user's",{"_index":11,"title":{},"body":{"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"interfaces/AuthenticationDto.html":{},"injectables/AuthorizationService.html":{},"interfaces/JwtTokenDto.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"modules/SharedModule.html":{},"interfaces/UserForRegistrationDto.html":{},"miscellaneous/functions.html":{}}}],["userforauthdto",{"_index":756,"title":{},"body":{"components/LoginComponent.html":{}}}],["userforregistrationdto",{"_index":480,"title":{"interfaces/UserForRegistrationDto.html":{}},"body":{"interfaces/AuthenticationDto.html":{},"injectables/AuthenticationService.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"coverage.html":{}}}],["username",{"_index":755,"title":{},"body":{"components/LoginComponent.html":{}}}],["userphone",{"_index":852,"title":{},"body":{"components/PhoneConfirmationComponent.html":{}}}],["users",{"_index":97,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{}}}],["using",{"_index":399,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthenticationDto.html":{},"index.html":{}}}],["valid",{"_index":459,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["validation",{"_index":895,"title":{"classes/Validation.html":{}},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Validation.html":{},"coverage.html":{}}}],["validation.match('password",{"_index":909,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validationerrors",{"_index":875,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validatorfn",{"_index":1106,"title":{},"body":{"classes/Validation.html":{}}}],["validators",{"_index":683,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["validators.compose([validators.maxlength(this.codelength",{"_index":1140,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["validators.email",{"_index":906,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.maxlength(20",{"_index":902,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(3",{"_index":907,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(this.passwordminlength",{"_index":958,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["validators.pattern('[a",{"_index":903,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":689,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["value",{"_index":42,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/EnvironmentUrlService.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Routing.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["variable",{"_index":1165,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1268,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":606,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["verification",{"_index":365,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthenticationDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{}}}],["verified",{"_index":1152,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["verify",{"_index":324,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AuthenticationDto.html":{},"interfaces/JwtTokenDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{},"components/VerifyPhoneComponent.html":{},"miscellaneous/variables.html":{}}}],["verifycode",{"_index":1139,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["verifyphone",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["verifyphonecomponent",{"_index":239,"title":{"components/VerifyPhoneComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"components/VerifyPhoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["verifyphoneform",{"_index":1125,"title":{},"body":{"components/VerifyPhoneComponent.html":{}}}],["version",{"_index":522,"title":{},"body":{"injectables/AuthenticationService.html":{},"index.html":{}}}],["via",{"_index":377,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["visibility",{"_index":766,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["visibility_off",{"_index":765,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["void",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthenticationService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ManageTemplatesComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/PhoneConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ServerErrorComponent.html":{},"components/UpdatedPasswordComponent.html":{},"injectables/UrlService.html":{},"components/VerifyPhoneComponent.html":{}}}],["w",{"_index":939,"title":{},"body":{"components/RegisterComponent.html":{}}}],["warning",{"_index":842,"title":{},"body":{"injectables/NotificationService.html":{}}}],["web",{"_index":562,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["webb",{"_index":796,"title":{},"body":{"components/NavComponent.html":{}}}],["went",{"_index":637,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["whether",{"_index":425,"title":{},"body":{"interfaces/AuthResponseDto.html":{},"interfaces/RegistrationResponseDto.html":{},"classes/Validation.html":{}}}],["white",{"_index":809,"title":{},"body":{"components/NavComponent.html":{}}}],["width",{"_index":347,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyPhoneComponent.html":{}}}],["width:100",{"_index":771,"title":{},"body":{"components/LoginComponent.html":{}}}],["width:50",{"_index":651,"title":{},"body":{"components/FooterComponent.html":{}}}],["width:500px",{"_index":354,"title":{},"body":{"components/AuthComponent.html":{},"components/LoginComponent.html":{}}}],["width:75",{"_index":767,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["width:90",{"_index":937,"title":{},"body":{"components/RegisterComponent.html":{}}}],["works",{"_index":580,"title":{},"body":{"components/DashboardComponent.html":{},"components/ManageTemplatesComponent.html":{}}}],["wrong",{"_index":638,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["z",{"_index":905,"title":{},"body":{"components/RegisterComponent.html":{}}}],["za",{"_index":904,"title":{},"body":{"components/RegisterComponent.html":{}}}],["zip",{"_index":497,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["zipcode",{"_index":502,"title":{},"body":{"interfaces/AuthenticationDto.html":{},"interfaces/PhoneNumberDto.html":{},"interfaces/PhoneVerificationDto.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/UserForRegistrationDto.html":{}}}],["zone.js",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AccountService.html":{"url":"injectables/AccountService.html","title":"injectable - AccountService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/account.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A service to manage aspects of a user's account.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forgotPassword\n                            \n                            \n                                    Public\n                                resetPassword\n                            \n                            \n                                    Public\n                                resetPasswordToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, envUrl: EnvironmentUrlService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/account.service.ts:14\n                            \n                        \n\n                \n                    \n                            Injects dependencies into the service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Sends and receives Http calls to the API.\n\n                                                        \n                                                \n                                                \n                                                        envUrl\n                                                  \n                                                        \n                                                                        EnvironmentUrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Accesses the environment url.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        forgotPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/account.service.ts:41\n                        \n                    \n\n            \n                \n                    Sends data to the API and receives the response to the forgotPassword method.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    route\n                                                    \n                                                            The API route to start a password reset session.\n\n                                                    \n                                            \n                                            \n                                                    body\n                                                    \n                                                            Data sent to the API. An instance of the PhoneNumberDto.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resetPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/account.service.ts:51\n                        \n                    \n\n            \n                \n                    Sends data to the API and receives a password reset token.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    route\n                                                    \n                                                            The route to the api controller.\n\n                                                    \n                                            \n                                            \n                                                    body\n                                                    \n                                                            Payload of type ResetPasswordDto sent to the api controller on the backend.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resetPasswordToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/account.service.ts:31\n                        \n                    \n\n            \n                \n                    Sends data to the API and receives response to acquire a reset password token.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    route\n                                                    \n                                                            The API route to acquire a reset password token\n\n                                                    \n                                            \n                                            \n                                                    body\n                                                    \n                                                            Data sent to the API. An instance of the PhoneVerificationDto.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpEvent, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport Routing from 'src/app/shared/directives/routing';\nimport { PhoneVerificationDto, ResetPasswordDto, PhoneNumberDto } from 'src/app/shared/models/account';\nimport { EnvironmentUrlService } from './environment-url.service';\n\n/**\n * A service to manage aspects of a user's account. \n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  /**\n   * Injects dependencies into the service.\n   * @param http Sends and receives Http calls to the API.\n   * @param envUrl Accesses the environment url.\n   */\n  constructor(private http: HttpClient, \n    private envUrl: EnvironmentUrlService\n    ) {}\n\n  /**\n   * Sends data to the API and receives response to acquire a reset password token.\n   * @param route The API route to acquire a reset password token\n   * @param body Data sent to the API. An instance of the PhoneVerificationDto.\n   * @returns An instance of HttpClient with type ResetPasswordDto. \n   */\n  public resetPasswordToken = (route: string, body: PhoneVerificationDto) : Observable => {\n    return this.http.post(Routing.createCompleteRoute(this.envUrl.apiUrl, route), body);\n  }\n\n  /**\n   * Sends data to the API and receives the response to the forgotPassword method.\n   * @param route The API route to start a password reset session.\n   * @param body Data sent to the API. An instance of the PhoneNumberDto.\n   * @returns An instance of HttpClient.\n   */\n  public forgotPassword = (route: string, body: PhoneNumberDto) : Observable => {\n    return this.http.post(Routing.createCompleteRoute(this.envUrl.apiUrl, route), body);\n  }\n  \n  /**\n   * Sends data to the API and receives a password reset token.\n   * @param route The route to the api controller.\n   * @param body Payload of type ResetPasswordDto sent to the api controller on the backend.\n   * @returns Observable of type string. This string should represent a password reset token.\n   */\n  public resetPassword = (route: string, body: ResetPasswordDto) : Observable => {\n    return this.http.post(Routing.createCompleteRoute(this.envUrl.apiUrl, route), body);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/admin.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    AdminGuard is used for components to only allow users who have the role of Administrator.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authorizationService: AuthorizationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/admin.guard.ts:11\n                            \n                        \n\n                \n                    \n                            Injects dependencies into the guard.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Gets the users' authorization level.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Navigates the user if necessary.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/admin.guard.ts:26\n                \n            \n\n\n            \n                \n                    A user can activate a component if their authorization level is Admin, otherwise navigates to /forbidden.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A required parameter for canActivate. Not used in this context.\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Adds the current url as a query parameter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the user has the administrator role, false otherwise.\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { AuthorizationService } from '../services/authorization.service';\n\n/**\n * AdminGuard is used for components to only allow users who have the role of Administrator.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n  /**\n   * Injects dependencies into the guard.\n   * @param authorizationService Gets the users' authorization level. \n   * @param router Navigates the user if necessary. \n   */\n  constructor(private authorizationService: AuthorizationService, private router: Router) {}\n\n  /**\n   * A user can activate a component if their authorization level is Admin, otherwise navigates to `/forbidden`.\n   * @param next A required parameter for canActivate. Not used in this context.\n   * @param state Adds the current url as a query parameter.\n   * @returns {boolean} `true` if the user has the administrator role, `false` otherwise.\n   */\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.authorizationService.isUserAdmin())\n      return true;\n\n    this.router.navigate(['/forbidden']), { queryParams: { returnUrl: state.url }};\n      return false;\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUrl\n                            \n                            \n                                previousUrl\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, urlService: UrlService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        urlService\n                                                  \n                                                        \n                                                                        UrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Rock Transportation'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { AuthenticationService } from './core/authentication/authentication.service';\nimport { UrlService } from './core/services/url.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'Rock Transportation';\n  previousUrl: string | null = null;\n  currentUrl: string | null = null;\n\n  constructor(private authService: AuthenticationService,\n    private urlService: UrlService,\n    private router: Router) {}\n\n  ngOnInit(): void {\n    if (this.authService.isUserAuthenticated()) {\n      this.authService.sendAuthStateChangeNotification(true);\n    }\n\n    this.router.events \n      .subscribe((event:Event) => {\n        if (event instanceof NavigationEnd) {\n          this.previousUrl = this.currentUrl;\n          this.currentUrl = event.url;\n          this.urlService.setPreviousUrl(this.previousUrl);\n        }\n      })\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n    \n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                content {\n    min-height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n}\n\nmain {\n    flex-grow: 1;\n}\n\napp-nav, main, app-footer {\n    flex-shrink: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAppModule -->\n\nAuthComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nForbiddenComponent\n\nForbiddenComponent\n\nAppModule -->\n\nForbiddenComponent->AppModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAppModule -->\n\nForgotPasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nManageTemplatesComponent\n\nManageTemplatesComponent\n\nAppModule -->\n\nManageTemplatesComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nPhoneConfirmationComponent\n\nPhoneConfirmationComponent\n\nAppModule -->\n\nPhoneConfirmationComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nServerErrorComponent\n\nServerErrorComponent\n\nAppModule -->\n\nServerErrorComponent->AppModule\n\n\n\n\n\nUpdatedPasswordComponent\n\nUpdatedPasswordComponent\n\nAppModule -->\n\nUpdatedPasswordComponent->AppModule\n\n\n\n\n\nVerifyPhoneComponent\n\nVerifyPhoneComponent\n\nAppModule -->\n\nVerifyPhoneComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nUrlService\n\nUrlService\n\nAppModule -->\n\nUrlService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AuthComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            ForbiddenComponent\n                        \n                        \n                            ForgotPasswordComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            ManageTemplatesComponent\n                        \n                        \n                            NavComponent\n                        \n                        \n                            NotFoundComponent\n                        \n                        \n                            PhoneConfirmationComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            ResetPasswordComponent\n                        \n                        \n                            ServerErrorComponent\n                        \n                        \n                            UpdatedPasswordComponent\n                        \n                        \n                            VerifyPhoneComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ErrorInterceptor\n                        \n                        \n                            UrlService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { NavComponent } from './core/header/nav.component';\n\nimport { SharedModule } from './shared/shared.module';\nimport { FooterComponent } from './core/footer/footer.component';\nimport { NotFoundComponent } from './modules/errors/pages/not-found/not-found.component';\nimport { ServerErrorComponent } from './modules/errors/pages/server-error/server-error.component';\nimport { AuthComponent } from './modules/account/auth/auth.component';\nimport { RegisterComponent } from './modules/account/auth/register/register.component';\nimport { LoginComponent } from './modules/account/auth/login/login.component';\n\nimport { NgxMaskModule } from 'ngx-mask';\nimport { ErrorInterceptor } from './core/interceptors/error.interceptor';\nimport { VerifyPhoneComponent } from './modules/account/phone/verify-phone/verify-phone.component';\nimport { ForgotPasswordComponent } from './modules/account/password/forgot-password/forgot-password.component';\nimport { DashboardComponent } from './modules/dashboard/pages/dashboard/dashboard.component';\nimport { ManageTemplatesComponent } from './modules/church-services/manage-templates/manage-templates.component';\nimport { ForbiddenComponent } from './modules/errors/pages/forbidden/forbidden.component';\nimport { ResetPasswordComponent } from './modules/account/password/reset-password/reset-password.component';\nimport { PhoneConfirmationComponent } from './modules/account/phone/phone-confirmation/phone-confirmation.component';\n\nimport { UrlService } from './core/services/url.service';\nimport { UpdatedPasswordComponent } from './modules/account/password/updated-password/updated-password.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    FooterComponent,\n    NotFoundComponent,\n    ServerErrorComponent,\n    AuthComponent,\n    RegisterComponent,\n    LoginComponent,\n    VerifyPhoneComponent,\n    ForgotPasswordComponent,\n    DashboardComponent,\n    ManageTemplatesComponent,\n    ForbiddenComponent,\n    ResetPasswordComponent,\n    PhoneConfirmationComponent,\n    UpdatedPasswordComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgxMaskModule.forRoot()\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true\n    },  \n    UrlService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NotFoundComponent } from './modules/errors/pages/not-found/not-found.component';\nimport { AuthComponent } from './modules/account/auth/auth.component';\nimport { ServerErrorComponent } from './modules/errors/pages/server-error/server-error.component';\nimport { VerifyPhoneComponent } from './modules/account/phone/verify-phone/verify-phone.component';\nimport { PhoneConfirmationComponent } from './modules/account/phone/phone-confirmation/phone-confirmation.component';\nimport { ForgotPasswordComponent } from './modules/account/password/forgot-password/forgot-password.component';\nimport { DashboardComponent } from './modules/dashboard/pages/dashboard/dashboard.component';\nimport { AuthGuard } from './core/guards/auth.guard';\nimport { ManageTemplatesComponent } from './modules/church-services/manage-templates/manage-templates.component';\nimport { ForbiddenComponent } from './modules/errors/pages/forbidden/forbidden.component';\nimport { AdminGuard } from './core/guards/admin.guard';\nimport { ResetPasswordComponent } from './modules/account/password/reset-password/reset-password.component';\nimport { UpdatedPasswordComponent } from './modules/account/password/updated-password/updated-password.component';\nimport { routerPaths } from './app.constants';\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'auth', component: AuthComponent },\n  { path: 'forbidden', component: ForbiddenComponent },\n  { path: 'verify-phone', component: VerifyPhoneComponent },\n  { path: 'phone-confirmation', component: PhoneConfirmationComponent },\n  { path: 'password', redirectTo: '/', pathMatch: 'full' },\n  { path: 'password/forgot-password', component: ForgotPasswordComponent },\n  { path: 'password/reset-password', component: ResetPasswordComponent },\n  { path: 'password/updated', component: UpdatedPasswordComponent },\n  { path: 'manage-templates', component: ManageTemplatesComponent, canActivate: [AuthGuard,AdminGuard] },\n  { path: '404', component: NotFoundComponent },\n  { path: 'server-error', component: ServerErrorComponent },\n  { path: '**', redirectTo: '/404', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/auth/auth.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                styleUrls\n                ./auth.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/auth/auth.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/auth/auth.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n  Congratulations! You were successfully registered!\n  There was an issue resetting your password\n  You have successfully changed your password\n  -->\n\n  \n    \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./auth.component.scss\n                \n                .auth-container\n{\n  width: 500px;\n  margin: 2% auto;\n}\n@media( max-width:500px )\n{\n  .auth-container\n  {\n    width: 300px;\n  }\n}\n@media ( max-width: 300px )\n{\n  .auth-container\n  {\n    width: 250px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Congratulations! You were successfully registered!  There was an issue resetting your password  You have successfully changed your password  -->                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    AuthGuard is used for components to only allow users who have been authenticated.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                    Async\n                                tryRefreshingTokens\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            Injects dependencies into the guard.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A service for accessing a user's authentication status.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Navigates the user after authentication status verification.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/auth.guard.ts:29\n                \n            \n\n\n            \n                \n                    Attempts to refresh the user's authentication. If successful allows user to activate component. Otherwise, navigates user to login page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A required parameter for canActivate. Not used in this context.\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Adds the current url as a query parameter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        true if user is authenticated, false otherwise.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        tryRefreshingTokens\n                        \n                    \n                \n            \n            \n                \n                    \n                    tryRefreshingTokens(accessToken: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/auth.guard.ts:53\n                \n            \n\n\n            \n                \n                    Attempts to refresh the access token via the API.\nIf successful, new refresh and access tokens are placed in local storage.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    accessToken\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A users access token.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        true on successful operation, false otherwise.\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { apiPaths, routerPaths, tokens} from 'src/app/app.constants';\nimport { JwtTokenDto } from 'src/app/shared/models/jwt-token';\nimport { AuthenticationService } from '../authentication/authentication.service';\n\n/**\n * AuthGuard is used for components to only allow users who have been authenticated.  \n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  /**\n   * Injects dependencies into the guard.\n   * @param authService A service for accessing a user's authentication status. \n   * @param router Navigates the user after authentication status verification.\n   */\n  constructor(private authService: AuthenticationService, \n    private router: Router){}\n\n  /**\n   * Attempts to refresh the user's authentication. If successful allows user to activate component. Otherwise, navigates user to login page.\n   * @param next A required parameter for canActivate. Not used in this context.\n   * @param state Adds the current url as a query parameter.\n   * @returns {boolean} `true` if user is authenticated, `false` otherwise. \n   */\n  async canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) : Promise{\n    if (this.authService.isUserAuthenticated()) {\n      return true;\n    }\n\n    const accessToken = localStorage.getItem(tokens.access);\n\n    const isRefreshSuccess = await this.tryRefreshingTokens(accessToken);\n\n    if (!isRefreshSuccess) {\n      this.authService.sendAuthStateChangeNotification(false);\n      this.router.navigate([routerPaths.auth], { queryParams: { returnUrl: state.url }});\n    }\n\n    this.authService.sendAuthStateChangeNotification(isRefreshSuccess);\n    return isRefreshSuccess;\n  }\n\n  /**\n   * Attempts to refresh the access token via the API. \n   * If successful, new refresh and access tokens are placed in local storage.\n   * @param accessToken A users access token. \n   * @returns `true` on successful operation, `false` otherwise. \n   */\n  private async tryRefreshingTokens(accessToken: string | null): Promise {\n    // Try refreshing tokens using refresh token\n    const refreshToken: string | null = localStorage.getItem(tokens.refresh);\n\n    if(!accessToken || !refreshToken) return false;\n\n    var jwtToken: JwtTokenDto = {accessToken: accessToken, refreshToken: refreshToken}; \n\n    let isRefreshSuccess: boolean;\n\n    try {\n      const response = await this.authService.refreshAuthentication(apiPaths.refreshTokens, jwtToken).toPromise();\n\n      const newToken = response.accessToken;\n      const newRefreshToken = response.refreshToken;\n\n      localStorage.setItem(tokens.access, newToken);\n      localStorage.setItem(tokens.refresh, newRefreshToken);\n      isRefreshSuccess = true;\n    } catch(ex) {\n      isRefreshSuccess = false;\n    }\n\n    return isRefreshSuccess;\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthResponseDto.html":{"url":"interfaces/AuthResponseDto.html","title":"interface - AuthResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/response.ts\n        \n\n\n            \n                Description\n            \n            \n                A Data Transfer Object to pass access and refresh tokens upon successful authentication.\n\n            \n\n            \n                Extends\n            \n            \n                        JwtTokenDto\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isAuthSuccessful\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isAuthSuccessful\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isAuthSuccessful:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A flag recording whether an authentication attempt was successful.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { JwtTokenDto } from \"./jwt-token\";\n\n/**\n * A Data Transfer Object to flag a successful registration attempt along \n * with any errors that were encountered. \n * \n */\nexport interface RegistrationResponseDto {\n    /**\n     * A flag recording whether a registration attempt was successful. \n     */\n    isSuccessfulRegistration: boolean;\n\n    /**\n     * Records any and all errors encountered when attempting a registration. \n     */\n    errors: string[];\n}\n\n/**\n * A Data Transfer Object to pass access and refresh tokens upon successful authentication. \n */\nexport interface AuthResponseDto extends JwtTokenDto {\n  /**\n   * A flag recording whether an authentication attempt was successful. \n   */\n  isAuthSuccessful: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthenticationDto.html":{"url":"interfaces/AuthenticationDto.html","title":"interface - AuthenticationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthenticationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/account.ts\n        \n\n\n            \n                Description\n            \n            \n                Data Transfer Object using a phone number and password request authentication.\n\n            \n\n            \n                Extends\n            \n            \n                        PhoneNumberDto\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A plain-text, non-hashed string representing a password.\nFor security, ensure hashing takes place on the backend.\nMaximum length: 255 characters. Required by the backend.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AuthenticationDto extends PhoneNumberDto {\n  /**\n   * A plain-text, non-hashed string representing a password. \n   * For security, ensure hashing takes place on the backend.\n   * Maximum length: 255 characters. Required by the backend.\n   */\n  password: string;\n}\n\n/**\n * Data Transfer Object to send and receive phone number.\n */\n export interface PhoneNumberDto {\n  /**\n   * A strictly 10-digit string representing a valid phone number capable of SMS.\n   */\n  phoneNumber: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to transmit a phone number - verification code pair.\n */\n export interface PhoneVerificationDto extends PhoneNumberDto {\n  /**\n   * A verification code that must match the code sent to the associated phone number\n   * in order to be verify the phone number.\n   */\n  code: string;\n}\n\n/**\n * Data Transfer Object sending and receiving a password reset token.\n */\n export interface ResetPasswordDto extends AuthenticationDto {\n  /**\n   * A password reset token assigned to a user from asp.net core Identity.\n   * The token is required and must match the generated token in order to successfully \n   * update a user's password. \n   */\n  token: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to send and receive all user information required for registering with the app.\n */\nexport interface UserForRegistrationDto extends AuthenticationDto {\n  /**\n   * A user's first name. Required by the backend. \n   */\n  firstName: string;\n  /**\n   * A user's last name. Required by the backend.\n   */\n  lastName: string;\n  /**\n   * Must be formatted as `sometext@moretext.TLD`. \n   * Not required by backend.\n   */\n  email: string | null;\n  /**\n   * A user's main street address. Required by the backend.\n   */\n  address1: string;\n  /**\n   * A user's apartment number, suite, or any other 'secondary' address. \n   * Not required by the backend. \n   */\n  address2: string | null;\n  /**\n   * The city portion of the user's address.\n   * Required by the backend.\n   */\n  city: string;\n  /**\n   * The zip code portion of the user's address. Typically 5 digits long.\n   * Required by the backend.\n   */\n  zipCode: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/authentication/authentication.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A service to manage users' authentication in the app.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authChanged\n                            \n                            \n                                    Private\n                                authChangeSubject\n                            \n                            \n                                    Public\n                                confirmPhone\n                            \n                            \n                                    Public\n                                isUserAuthenticated\n                            \n                            \n                                    Public\n                                loginUser\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                refreshAuthentication\n                            \n                            \n                                    Public\n                                registerUser\n                            \n                            \n                                    Public\n                                sendAuthStateChangeNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, envUrl: EnvironmentUrlService, jwtHelper: JwtHelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/authentication.service.ts:18\n                            \n                        \n\n                \n                    \n                            Injects dependencies into the service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Sends and receives Http calls to the API.\n\n                                                        \n                                                \n                                                \n                                                        envUrl\n                                                  \n                                                        \n                                                                        EnvironmentUrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Accesses the environment url.\n\n                                                        \n                                                \n                                                \n                                                        jwtHelper\n                                                  \n                                                        \n                                                                    JwtHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Accesses helper functions for JWT's.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authChanged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.authChangeSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:37\n                        \n                    \n\n            \n                \n                    The Obervable version of authChangeSubject, allowing authentication status to be observed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authChangeSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:33\n                        \n                    \n\n            \n                \n                    Tracks the changes to users' authentication status.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        confirmPhone\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:45\n                        \n                    \n\n            \n                \n                    Sends data to the API and receives response to confirm users' phone numbers.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    route\n                                                    \n                                                            The API route to phone confirmation.\n\n                                                    \n                                            \n                                            \n                                                    body\n                                                    \n                                                            Data sent to the API. An instance of the PhoneVerificationDto.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isUserAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:53\n                        \n                    \n\n            \n                \n                    Gets users' authentication status from tokens stored in local storage.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loginUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:65\n                        \n                    \n\n            \n                \n                    Sends data to the API and receives response for authenticating user, logging him/her in if successful.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    route\n                                                    \n                                                            The API route to authentication.\n\n                                                    \n                                            \n                                            \n                                                    body\n                                                    \n                                                            Data sent to the API. An instance of AuthenticationDto.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:72\n                        \n                    \n\n            \n                \n                    Removes access and refresh tokens from local storage and updates authChangeSubject to false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        refreshAuthentication\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:84\n                        \n                    \n\n            \n                \n                    Sends data to the API and receives response for refreshing authentication.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    route\n                                                    \n                                                            The API route to authentication refreshing.\n\n                                                    \n                                            \n                                            \n                                                    body\n                                                    \n                                                            Data sent to the API. An instance of JwtTokenDto.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        registerUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:94\n                        \n                    \n\n            \n                \n                    Sends data to the API and receives response for user registration.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    route\n                                                    \n                                                            The API route to registration.\n\n                                                    \n                                            \n                                            \n                                                    body\n                                                    \n                                                            Data sent to the API. An instance of the UserForRegistrationDto.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendAuthStateChangeNotification\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/authentication.service.ts:102\n                        \n                    \n\n            \n                \n                    Updates the users' authentication status.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    isAuthenticated\n                                                    \n                                                            A users' authentication status.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n\n\n    \n\n\n    \n        import { AuthenticationDto, PhoneNumberDto, PhoneVerificationDto, ResetPasswordDto, UserForRegistrationDto } from 'src/app/shared/models/account';\nimport { AuthResponseDto } from 'src/app/shared/models/response';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { EnvironmentUrlService } from '../services/environment-url.service';\nimport { Subject } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { tokens } from 'src/app/app.constants';\nimport { JwtTokenDto } from 'src/app/shared/models/jwt-token';\nimport Routing from 'src/app/shared/directives/routing';\n\n/**\n * A service to manage users' authentication in the app.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  /**\n   * Injects dependencies into the service. \n   * @param http Sends and receives Http calls to the API.\n   * @param envUrl Accesses the environment url.\n   * @param jwtHelper Accesses helper functions for JWT's.\n   */\n  constructor(private http: HttpClient,\n    private envUrl: EnvironmentUrlService, \n    private jwtHelper: JwtHelperService) { }\n\n  /**\n   * Tracks the changes to users' authentication status.\n   */\n  private authChangeSubject = new Subject();\n  /**\n   * The Obervable version of authChangeSubject, allowing authentication status to be observed.\n   */\n  public authChanged = this.authChangeSubject.asObservable();\n\n  /**\n   * Sends data to the API and receives response to confirm users' phone numbers. \n   * @param route The API route to phone confirmation.\n   * @param body Data sent to the API. An instance of the PhoneVerificationDto.\n   * @returns An instance of HttpClient. \n   */\n  public confirmPhone = (route: string, body: PhoneVerificationDto) => {\n    return this.http.post(Routing.createCompleteRoute(this.envUrl.apiUrl, route), body);\n  }\n\n  /**\n   * Gets users' authentication status from tokens stored in local storage. \n   * @returns {boolean} `true` if an access token is present and not expired.\n   */\n  public isUserAuthenticated = () => {\n    const accessToken = localStorage.getItem(tokens.access);\n\n    return accessToken && !this.jwtHelper.isTokenExpired(accessToken);\n  }\n\n  /**\n   * Sends data to the API and receives response for authenticating user, logging him/her in if successful.\n   * @param route The API route to authentication.\n   * @param body Data sent to the API. An instance of AuthenticationDto.\n   * @returns An instance of HttpClient with type AuthResponseDto.\n   */\n  public loginUser = (route: string, body: AuthenticationDto) => {\n    return this.http.post(Routing.createCompleteRoute(this.envUrl.apiUrl, route), body);\n  }\n\n  /**\n   * Removes access and refresh tokens from local storage and updates `authChangeSubject` to `false`.\n   */\n  public logout = () : void => {\n    localStorage.removeItem(tokens.access);\n    localStorage.removeItem(tokens.refresh);\n    this.sendAuthStateChangeNotification(false);\n  }\n\n  /**\n   * Sends data to the API and receives response for refreshing authentication. \n   * @param route The API route to authentication refreshing. \n   * @param body Data sent to the API. An instance of JwtTokenDto.\n   * @returns An instance of HttpClient of type AuthResponseDto.\n   */\n  public refreshAuthentication = (route: string, body: JwtTokenDto) => {\n    return this.http.post(Routing.createCompleteRoute(this.envUrl.apiUrl, route), body);\n  }\n\n  /**\n   * Sends data to the API and receives response for user registration. \n   * @param route The API route to registration.\n   * @param body Data sent to the API. An instance of the UserForRegistrationDto.\n   * @returns An instance of HttpClient of type PhoneNuberDto. \n   */\n     public registerUser = (route: string, body: UserForRegistrationDto) => {\n      return this.http.post(Routing.createCompleteRoute(this.envUrl.apiUrl, route), body);\n    }\n \n  /**\n   * Updates the users' authentication status. \n   * @param isAuthenticated A users' authentication status.\n   */\n  public sendAuthStateChangeNotification = (isAuthenticated:boolean) : void => {\n    this.authChangeSubject.next(isAuthenticated);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/authorization.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A service to manage a user's authorization for the app.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isUserAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtHelper: JwtHelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/authorization.service.ts:12\n                            \n                        \n\n                \n                    \n                            Injects dependencies into the service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jwtHelper\n                                                  \n                                                        \n                                                                    JwtHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Helper methods for handling Javascript Web Tokens.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isUserAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/authorization.service.ts:24\n                        \n                    \n\n            \n                \n                    Retrieve a user's role from the access token.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { tokens, IDENTITY_ROLES } from 'src/app/app.constants';\nimport { Roles } from 'src/app/shared/models/roles';\n\n/**\n * A service to manage a user's authorization for the app.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizationService {\n\n  /**\n   * Injects dependencies into the service. \n   * @param jwtHelper Helper methods for handling Javascript Web Tokens.\n   */\n  constructor(private jwtHelper: JwtHelperService) { }\n\n  /**\n   * Retrieve a user's role from the access token. \n   * @returns `true` if a user's role is administrator or above, `false` otherwise.\n   */\n  public isUserAdmin = () => {\n    const accessToken = localStorage.getItem(tokens.access);\n    const decodedToken = accessToken !== null ? this.jwtHelper.decodeToken(accessToken) : undefined;\n    const role = decodedToken[IDENTITY_ROLES];\n    return role === Roles.administrator || Roles.superAdmin;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/dashboard/pages/dashboard/dashboard.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/dashboard/pages/dashboard/dashboard.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/dashboard/pages/dashboard/dashboard.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        dashboard works!\n\n    \n\n    \n                \n                    ./dashboard.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'dashboard works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EnvironmentUrlService.html":{"url":"injectables/EnvironmentUrlService.html","title":"injectable - EnvironmentUrlService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EnvironmentUrlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/environment-url.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/environment-url.service.ts:9\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.apiUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/environment-url.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnvironmentUrlService {\n\n    public apiUrl: string = environment.apiUrl;\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptors/error.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Intercepts errors received from Http requests.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/interceptors/error.interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            Injects dependencies into interceptor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used for internal navigation.\n\n                                                        \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Sends messages as notifications to the user.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/interceptors/error.interceptor.ts:29\n                \n            \n\n\n            \n                \n                    Intercepts and handles various errors.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Http request to intercept\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Adds the request to the Http handler.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        An error instance of Http Events.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { NotificationService } from '../services/notification.service';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { catchError } from 'rxjs/operators';\nimport { routerPaths } from 'src/app/app.constants';\n\n/**\n * Intercepts errors received from Http requests.\n */\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  /**\n   * Injects dependencies into interceptor.\n   * @param router Used for internal navigation. \n   * @param notificationService Sends messages as notifications to the user. \n   */\n  constructor(private router: Router,\n    private notificationService: NotificationService) {}\n\n  /**\n   * Intercepts and handles various errors.\n   * @param request The Http request to intercept\n   * @param next Adds the request to the Http handler.\n   * @returns An error instance of Http Events. \n   */\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(request).pipe(\n      catchError(error => {\n        if (error) {\n          switch (error.status) {\n            case 400:\n              let errors: string[] = Object.values(error.error);\n              let errorsAsString = errors.join(\"\")\n              this.notificationService.showError(errorsAsString, error.statusText);\n              break;\n            case 401:\n              this.notificationService.showError(error.error, error.statusText);\n              break;\n            case 403: \n              this.notificationService.showError(error.error);\n              break;\n            case 404:\n              this.router.navigateByUrl(routerPaths.notFound);\n              break;\n            case 406: \n              this.notificationService.showError(error.error);\n              break;\n            case 409:\n              this.notificationService.showError(error.error);\n              break;\n            case 500:\n              const navigationExtras: NavigationExtras = {state: {error: error.error}};\n              this.router.navigateByUrl(routerPaths.serverError, navigationExtras);\n              break;\n            default:\n              //this.notificationService.showError(\"Something unexpected went wrong\");\n              console.log(error);\n              break;\n          }\n        }\n        return throwError(error);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/footer/footer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Footer component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Footer component\n */\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n      \n    \n    \n \n    \n    \n  \n    \n\n    \n                \n                    ./footer.component.scss\n                \n                app-footer\n{\n    justify-content: flex-end;\n    justify-content: space-between;\n    padding: 0 2% 0 2%;\n}\nimg\n{\n    width:50%;\n    height:auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForbiddenComponent.html":{"url":"components/ForbiddenComponent.html","title":"component - ForbiddenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForbiddenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/errors/pages/forbidden/forbidden.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forbidden\n            \n\n            \n                styleUrls\n                ./forbidden.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forbidden.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                navigateToLogin\n                            \n                            \n                                    Private\n                                returnUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/errors/pages/forbidden/forbidden.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/errors/pages/forbidden/forbidden.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        navigateToLogin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/errors/pages/forbidden/forbidden.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/errors/pages/forbidden/forbidden.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forbidden',\n  templateUrl: './forbidden.component.html',\n  styleUrls: ['./forbidden.component.scss']\n})\nexport class ForbiddenComponent implements OnInit {\n\n  private returnUrl: string | undefined;\n\n  constructor(private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl']||'';\n  }\n\n  public navigateToLogin = () => {\n    this.router.navigate(['/auth'], { queryParams: { returnUrl: this.returnUrl }});\n  }\n\n}\n\n    \n\n    \n        Forbidden\n\n    This page is forbidden for you. Please log in with a different user\n    to access the requested page.\n\n\n    \n\n    \n                \n                    ./forbidden.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Forbidden    This page is forbidden for you. Please log in with a different user    to access the requested page.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForbiddenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/password/forgot-password/forgot-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                styleUrls\n                ./forgot-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forgotPasswordForm\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Private\n                                returnUrl\n                            \n                            \n                                    Public\n                                submit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/password/forgot-password/forgot-password.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/password/forgot-password/forgot-password.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        forgotPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/forgot-password/forgot-password.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/forgot-password/forgot-password.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/forgot-password/forgot-password.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        submit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/forgot-password/forgot-password.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IConfig } from 'ngx-mask';\nimport { apiPaths, routerPaths } from 'src/app/app.constants';\nimport { AccountService } from 'src/app/core/services/account.service';\nimport { PhoneNumberDto } from 'src/app/shared/models/account';\n\nexport let options: Partial | (() => Partial);\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  public forgotPasswordForm!: FormGroup;\n  public hide: boolean = true;\n  private returnUrl: string | undefined = undefined;\n\n  constructor(private accountService: AccountService,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.forgotPasswordForm = new FormGroup({\n      phone: new FormControl(\"\", [Validators.required])\n    })\n\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '';\n  }\n\n  public submit = (forgotPasswordForm: any) => {\n    var phoneNumberDto: PhoneNumberDto = { phoneNumber: forgotPasswordForm.phone}\n\n    this.accountService.forgotPassword(apiPaths.forgotPassword, phoneNumberDto)\n    .subscribe(() => {\n      this.router.navigate([routerPaths.verifyPhone], {state: {data: phoneNumberDto}});\n    }, error => {\n      this.router.navigate(['/']);\n    })\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Enter your phone number\n      \n      \n        A verification code will be sent to your \n        phone to make sure you are the owner of this account. \n      \n      \n        \n          \n            Phone Number:\n            \n            phone\n            Required\n          \n\n          \n            Submit\n          \n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./forgot-password.component.scss\n                \n                .container {\n  margin: 20px auto 0;\n}\nmat-card {\n  text-align: center;\n  margin: 0 auto;\n}\nmat-card-header {\n  font-size: large;\n  justify-content: center;\n  margin-top:5px;\n  margin-bottom:10px;\n}\nmat-card-subtitle {\n  margin: 10px auto 10px;\n}\n\n@media ( max-width: 300px )\n{\n  .container\n  {\n    width: 240px;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Enter your phone number                    A verification code will be sent to your         phone to make sure you are the owner of this account.                                           Phone Number:                        phone            Required                                Submit                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtTokenDto.html":{"url":"interfaces/JwtTokenDto.html","title":"interface - JwtTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/jwt-token.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object to accept and pass tokens to the backend\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The access token represents the short-lived token passed back and forth\nto the backend to verify a user's authentication, thereby allowing access.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The refresh token represents the long-lived token persisting in the user's\naccount allowing for renewed access tokens as long as it is valid and not expired.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface JwtTokenDto {\n  /**\n   * The access token represents the short-lived token passed back and forth \n   * to the backend to verify a user's authentication, thereby allowing access. \n   */\n  accessToken: string;\n\n  /**\n   * The refresh token represents the long-lived token persisting in the user's \n   * account allowing for renewed access tokens as long as it is valid and not expired.\n   */\n  refreshToken: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/auth/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        The component for user authentication.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                    Public\n                                loginForm\n                            \n                            \n                                    Public\n                                loginUser\n                            \n                            \n                                    Private\n                                returnUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/auth/login/login.component.ts:36\n                            \n                        \n\n                \n                    \n                            Injects dependencies to the component when constructed.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A service for managing authentication.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used for internal navigation.\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Functionality for the activated route.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/auth/login/login.component.ts:51\n                \n            \n\n\n            \n                \n                    Initializes the loginForm and sets the return url.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:30\n                        \n                    \n\n            \n                \n                    true value hides the password, false value allows the password to be displayed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:26\n                        \n                    \n\n            \n                \n                    The group of data making up the login form.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loginUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:67\n                        \n                    \n\n            \n                \n                    On submission of the login form:\nPass the log in data to the API.\nIf successful, set the access and refresh tokens in local storage, update the user's authentication status,\nand navigate to the return url.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                        \n                                    \n                                    \n                                            \n                                                    loginFormValue\n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/login/login.component.ts:36\n                        \n                    \n\n            \n                \n                    When a user requests a resource and is not authenticated, user is redirected to the login page.\nreturnUrl is set to the page they were currently on. Once the user is authenticated, the user\nwill be redirected to the resource as defined in returnUrl.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Injectable, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { IConfig } from 'ngx-mask';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core/authentication/authentication.service';\nimport { AuthenticationDto } from 'src/app/shared/models/account';\nimport { apiPaths, tokens } from 'src/app/app.constants';\n\nexport let options: Partial | (() => Partial);\n\n/**\n * The component for user authentication.\n */\n@Injectable({\n  providedIn:'root'\n})\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  /**\n   * The group of data making up the login form.\n   */\n  public loginForm!: FormGroup;\n  /**\n   * `true` value hides the password, `false` value allows the password to be displayed\n   */\n  hide: boolean = true;\n  /**\n   * When a user requests a resource and is not authenticated, user is redirected to the login page.\n   * returnUrl is set to the page they were currently on. Once the user is authenticated, the user \n   * will be redirected to the resource as defined in returnUrl. \n   */\n  private returnUrl: string | undefined;\n\n  /**\n   * Injects dependencies to the component when constructed. \n   * @param authService A service for managing authentication. \n   * @param router Used for internal navigation.\n   * @param route Functionality for the activated route.\n   */\n  constructor(private authService: AuthenticationService,\n    private router: Router, \n    private route: ActivatedRoute) {}\n\n  /**\n   * Initializes the loginForm and sets the return url.\n   */\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      username: new FormControl(\"\", [Validators.required]),\n      password: new FormControl(\"\", [Validators.required])\n    })\n\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '';\n  }\n\n  /**\n   * On submission of the login form: \n   * Pass the log in data to the API.\n   * If successful, set the access and refresh tokens in local storage, update the user's authentication status,\n   * and navigate to the return url.\n   * @param loginFormValue \n   */\n  public loginUser = (loginFormValue: any) => {\n    const login = {...loginFormValue};\n    const userForAuthDto: AuthenticationDto = {\n      phoneNumber: login.username,\n      password: login.password\n    }\n\n    this.authService.loginUser(apiPaths.login, userForAuthDto)\n    .subscribe(result => {\n      localStorage.setItem(tokens.access, result.accessToken);\n      localStorage.setItem(tokens.refresh, result.refreshToken);\n      this.authService.sendAuthStateChangeNotification(result.isAuthSuccessful);\n      this.router.navigate([this.returnUrl]);\n    })\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            Phone Number:\n            \n            phone\n            Required\n          \n\n          \n            Password\n            \n            {{hide ? 'visibility_off' : 'visibility'}}\n            Required\n          \n          \n            Log In\n          \n        \n        \n        \n          \n            Forgot Password?\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .login-form\n{\n  width:75%;\n  margin: 0 auto;\n}\n.center\n{\n  text-align:center;\n}\nmat-form-field\n{\n  display: block;\n  width:100%;\n}\nmat-card-footer\n{\n  margin: 10px auto 0;\n  text-align:center;\n}\n@media (max-width:500px)\n{\n  .container\n  {\n    width:100%;\n    margin: 10px auto;\n  }\n  .login-form\n  {\n    width:100%;\n    margin: 0 auto;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Phone Number:                        phone            Required                                Password                        {{hide ? \\'visibility_off\\' : \\'visibility\\'}}            Required                                Log In                                                        Forgot Password?                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageTemplatesComponent.html":{"url":"components/ManageTemplatesComponent.html","title":"component - ManageTemplatesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ManageTemplatesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/church-services/manage-templates/manage-templates.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manage-templates\n            \n\n            \n                styleUrls\n                ./manage-templates.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./manage-templates.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/church-services/manage-templates/manage-templates.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/church-services/manage-templates/manage-templates.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manage-templates',\n  templateUrl: './manage-templates.component.html',\n  styleUrls: ['./manage-templates.component.scss']\n})\nexport class ManageTemplatesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        manage-templates works!\n\n    \n\n    \n                \n                    ./manage-templates.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'manage-templates works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManageTemplatesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavComponent.html":{"url":"components/NavComponent.html","title":"component - NavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/header/nav.component.ts\n\n\n\n    \n        Description\n    \n    \n        Navbar component for the app.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav\n            \n\n            \n                styleUrls\n                ./nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isUserAuthenticated\n                            \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/header/nav.component.ts:17\n                            \n                        \n\n                \n                    \n                            Injects dependencies into component and initializes isUserAuthenticated.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for assertaining a user's authentication status.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used for internal navigation.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/header/nav.component.ts:34\n                \n            \n\n\n            \n                \n                    Continually check a user's authentication status.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isUserAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/header/nav.component.ts:17\n                        \n                    \n\n            \n                \n                    Flag representing a user's authentication status.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/header/nav.component.ts:44\n                        \n                    \n\n            \n                \n                    On logout, remove a user's authentication status and send the user to the login page.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../authentication/authentication.service';\n\n/**\n * Navbar component for the app.\n */\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent {\n  /**\n   * Flag representing a user's authentication status. \n   */\n  public isUserAuthenticated:boolean | undefined;\n\n  /**\n   * Injects dependencies into component and initializes `isUserAuthenticated`.\n   * @param authService Service for assertaining a user's authentication status. \n   * @param router Used for internal navigation.\n   */\n  constructor(private authService:AuthenticationService, private router: Router){\n    this.authService.authChanged\n    .subscribe(result => {\n      this.isUserAuthenticated = result;\n    })\n  }\n  \n  /**\n   * Continually check a user's authentication status. \n   */\n  ngOnInit(): void {\n    this.authService.authChanged\n    .subscribe(result =>{\n      this.isUserAuthenticated = result;\n    })\n  }\n\n  /**\n   * On logout, remove a user's authentication status and send the user to the login page. \n   */\n  public logout = () => {\n    this.authService.logout();\n    this.router.navigate(['/auth']);\n  }\n}\n\n    \n\n    \n        \n    \n      Jacob Webb -->\n      \n        Log In / Register\n        Logout\n        \n          \n          \n            Update Contact Info\n            Change Password\n            Logout\n          \n        \n      \n      \n        menu\n        \n          \n          Log in / Register\n          \n        \n      \n     \n  \n  \n\n    \n\n    \n                \n                    ./nav.component.scss\n                \n                .navbar\n{\n  justify-content: flex-end;\n  // justify-content: space-between;\n  padding: 0 2% 0 1%;\n}\n\n.navbar a\n{\n  font-size: 0.9em;\n}\n\n@media (max-width: 499px){\n  .nav-menu-show\n  {\n    display: none;\n  }\n}\n@media (min-width: 500px){\n  .nav-menu-hide\n  {\n    display: none;\n  }\n}\n.logo\n{\n  font-family: 'Baskerville';\n  color: white;\n  text-decoration:none;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Jacob Webb -->              Log In / Register        Logout                                        Update Contact Info            Change Password            Logout                                      menu                            Log in / Register                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/errors/pages/not-found/not-found.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                styleUrls\n                ./not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/errors/pages/not-found/not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/errors/pages/not-found/not-found.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    Not Found\n    Return to home page\n\n    \n\n    \n                \n                    ./not-found.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Not Found    Return to home page'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/notification.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A service to send notifications to the user.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showError\n                            \n                            \n                                showInfo\n                            \n                            \n                                showSuccess\n                            \n                            \n                                showWarning\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/notification.service.ts:10\n                            \n                        \n\n                \n                    \n                            Injects dependencies to the service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A service for customizing and styling notifications.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(messages: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/notification.service.ts:32\n                \n            \n\n\n            \n                \n                    Diplays an error notification.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    messages\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                    \n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"\"\n                                    \n\n                                    \n                                        The title of the notification.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInfo\n                        \n                    \n                \n            \n            \n                \nshowInfo(message: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/notification.service.ts:42\n                \n            \n\n\n            \n                \n                    Diplays an informative notification.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The body of the notification.\n\n                                    \n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The title of the notification.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(message: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/notification.service.ts:23\n                \n            \n\n\n            \n                \n                    Diplays a successful notification.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The body of the notification.\n\n                                    \n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The title of the notification.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showWarning\n                        \n                    \n                \n            \n            \n                \nshowWarning(message: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/notification.service.ts:51\n                \n            \n\n\n            \n                \n                    Diplays a warning notification.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The body of the notification.\n\n                                    \n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The title of the notification.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n/**\n * A service to send notifications to the user.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  /**\n   * Injects dependencies to the service.\n   * @param toastr A service for customizing and styling notifications.\n   */\n  constructor(private toastr: ToastrService) { }\n\n  /**\n   * Diplays a successful notification.\n   * @param message The body of the notification.\n   * @param title The title of the notification. \n   */\n  showSuccess(message: string, title: string) {\n    this.toastr.success(message, title);\n  }\n\n    /**\n   * Diplays an error notification.\n   * @param message The body of the notification.\n   * @param title The title of the notification. \n   */\n  showError(messages: string, title: string = \"\") {\n    this.toastr.error(messages, title);\n    \n  }\n\n  /**\n   * Diplays an informative notification.\n   * @param message The body of the notification.\n   * @param title The title of the notification. \n   */\n  showInfo(message: string, title: string) {\n    this.toastr.info(message, title);\n  }\n\n  /**\n   * Diplays a warning notification.\n   * @param message The body of the notification.\n   * @param title The title of the notification. \n   */\n  showWarning(message: string, title: string) {\n    this.toastr.warning(message, title);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhoneConfirmationComponent.html":{"url":"components/PhoneConfirmationComponent.html","title":"component - PhoneConfirmationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PhoneConfirmationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/phone/phone-confirmation/phone-confirmation.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirmation\n            \n\n            \n                styleUrls\n                ./phone-confirmation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./phone-confirmation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formattedPhone\n                            \n                            \n                                userPhone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/phone/phone-confirmation/phone-confirmation.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/phone/phone-confirmation/phone-confirmation.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formattedPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/phone-confirmation/phone-confirmation.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/phone-confirmation/phone-confirmation.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-confirmation',\n  templateUrl: './phone-confirmation.component.html',\n  styleUrls: ['./phone-confirmation.component.scss']\n})\nexport class PhoneConfirmationComponent implements OnInit {\n  userPhone: string = '';\n  formattedPhone: string | null = null;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.userPhone = history.state.data;\n    if (this.userPhone == '' || this.userPhone == undefined) \n      this.router.navigate(['/']);\n\n      this.formattedPhone = \"(\" + this.userPhone.substring(0, 3) + \")\" + this.userPhone.substring(3, 6) + \"-\" + this.userPhone.substring(6);\n  }\n\n}\n\n    \n\n    \n        The phone number {{formattedPhone}} was successfully registered for The Rock Church's Transportation app.\nPlease Log In to access the app.\n\n\n    \n\n    \n                \n                    ./phone-confirmation.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'The phone number {{formattedPhone}} was successfully registered for The Rock Church\\'s Transportation app.Please Log In to access the app.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhoneConfirmationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PhoneNumberDto.html":{"url":"interfaces/PhoneNumberDto.html","title":"interface - PhoneNumberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PhoneNumberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/account.ts\n        \n\n\n            \n                Description\n            \n            \n                Data Transfer Object to send and receive phone number.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:     string | null | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null | undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A strictly 10-digit string representing a valid phone number capable of SMS.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AuthenticationDto extends PhoneNumberDto {\n  /**\n   * A plain-text, non-hashed string representing a password. \n   * For security, ensure hashing takes place on the backend.\n   * Maximum length: 255 characters. Required by the backend.\n   */\n  password: string;\n}\n\n/**\n * Data Transfer Object to send and receive phone number.\n */\n export interface PhoneNumberDto {\n  /**\n   * A strictly 10-digit string representing a valid phone number capable of SMS.\n   */\n  phoneNumber: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to transmit a phone number - verification code pair.\n */\n export interface PhoneVerificationDto extends PhoneNumberDto {\n  /**\n   * A verification code that must match the code sent to the associated phone number\n   * in order to be verify the phone number.\n   */\n  code: string;\n}\n\n/**\n * Data Transfer Object sending and receiving a password reset token.\n */\n export interface ResetPasswordDto extends AuthenticationDto {\n  /**\n   * A password reset token assigned to a user from asp.net core Identity.\n   * The token is required and must match the generated token in order to successfully \n   * update a user's password. \n   */\n  token: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to send and receive all user information required for registering with the app.\n */\nexport interface UserForRegistrationDto extends AuthenticationDto {\n  /**\n   * A user's first name. Required by the backend. \n   */\n  firstName: string;\n  /**\n   * A user's last name. Required by the backend.\n   */\n  lastName: string;\n  /**\n   * Must be formatted as `sometext@moretext.TLD`. \n   * Not required by backend.\n   */\n  email: string | null;\n  /**\n   * A user's main street address. Required by the backend.\n   */\n  address1: string;\n  /**\n   * A user's apartment number, suite, or any other 'secondary' address. \n   * Not required by the backend. \n   */\n  address2: string | null;\n  /**\n   * The city portion of the user's address.\n   * Required by the backend.\n   */\n  city: string;\n  /**\n   * The zip code portion of the user's address. Typically 5 digits long.\n   * Required by the backend.\n   */\n  zipCode: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PhoneVerificationDto.html":{"url":"interfaces/PhoneVerificationDto.html","title":"interface - PhoneVerificationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PhoneVerificationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/account.ts\n        \n\n\n            \n                Description\n            \n            \n                Data Transfer Object to transmit a phone number - verification code pair.\n\n            \n\n            \n                Extends\n            \n            \n                        PhoneNumberDto\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A verification code that must match the code sent to the associated phone number\nin order to be verify the phone number.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AuthenticationDto extends PhoneNumberDto {\n  /**\n   * A plain-text, non-hashed string representing a password. \n   * For security, ensure hashing takes place on the backend.\n   * Maximum length: 255 characters. Required by the backend.\n   */\n  password: string;\n}\n\n/**\n * Data Transfer Object to send and receive phone number.\n */\n export interface PhoneNumberDto {\n  /**\n   * A strictly 10-digit string representing a valid phone number capable of SMS.\n   */\n  phoneNumber: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to transmit a phone number - verification code pair.\n */\n export interface PhoneVerificationDto extends PhoneNumberDto {\n  /**\n   * A verification code that must match the code sent to the associated phone number\n   * in order to be verify the phone number.\n   */\n  code: string;\n}\n\n/**\n * Data Transfer Object sending and receiving a password reset token.\n */\n export interface ResetPasswordDto extends AuthenticationDto {\n  /**\n   * A password reset token assigned to a user from asp.net core Identity.\n   * The token is required and must match the generated token in order to successfully \n   * update a user's password. \n   */\n  token: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to send and receive all user information required for registering with the app.\n */\nexport interface UserForRegistrationDto extends AuthenticationDto {\n  /**\n   * A user's first name. Required by the backend. \n   */\n  firstName: string;\n  /**\n   * A user's last name. Required by the backend.\n   */\n  lastName: string;\n  /**\n   * Must be formatted as `sometext@moretext.TLD`. \n   * Not required by backend.\n   */\n  email: string | null;\n  /**\n   * A user's main street address. Required by the backend.\n   */\n  address1: string;\n  /**\n   * A user's apartment number, suite, or any other 'secondary' address. \n   * Not required by the backend. \n   */\n  address2: string | null;\n  /**\n   * The city portion of the user's address.\n   * Required by the backend.\n   */\n  city: string;\n  /**\n   * The zip code portion of the user's address. Typically 5 digits long.\n   * Required by the backend.\n   */\n  zipCode: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/auth/register/register.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                hide\n                            \n                            \n                                hideConfirm\n                            \n                            \n                                isUniqueEmail\n                            \n                            \n                                passwordMinLength\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                registerForm\n                            \n                            \n                                submitted\n                            \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEmailError\n                            \n                            \n                                getFirstNameError\n                            \n                            \n                                getLastNameError\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/auth/register/register.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getEmailError\n                        \n                    \n                \n            \n            \n                \ngetEmailError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/auth/register/register.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     \"You must enter a value\" | \"Not a valid email\" | \"\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFirstNameError\n                        \n                    \n                \n            \n            \n                \ngetFirstNameError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/auth/register/register.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     \"\" | \"First name is required\" | \"Name can only contain letters\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLastNameError\n                        \n                    \n                \n            \n            \n                \ngetLastNameError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/auth/register/register.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     \"\" | \"Name can only contain letters\" | \"Last name is required\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/auth/register/register.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideConfirm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUniqueEmail\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMinLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        register\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/auth/register/register.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Injectable, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { IConfig } from 'ngx-mask';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core/authentication/authentication.service';\nimport { UserForRegistrationDto } from 'src/app/shared/models/account';\nimport Validation from 'src/app/shared/directives/validation';\nimport { apiPaths, routerPaths } from 'src/app/app.constants';\n\nexport let options: Partial | (() => Partial);\n\n/**\n * \n */\n@Injectable({\n  providedIn:'root'\n})\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n    public registerForm!: FormGroup;\n    validationErrors: string[] = [];\n    passwordMinLength = 3;\n    hide=true;\n    hideConfirm=true;\n    submitted=false;\n    isUniqueEmail=true;\n    phoneNumber = '';\n    error: boolean = false;\n\n  constructor(private authService: AuthenticationService,\n    private router: Router) {}\n\n  ngOnInit(): void {\n    this.registerForm = new FormGroup({\n      firstName: new FormControl(\"\", [\n        Validators.required, \n        Validators.maxLength(20), \n        Validators.pattern('[a-zA-Z]*')\n      ]),\n      lastName: new FormControl(\"\", [\n        Validators.required,\n        Validators.maxLength(20),\n        Validators.pattern('[a-zA-Z]*')\n      ]), \n      email: new FormControl(\"\", [Validators.email]),\n      phoneNumber: new FormControl(\"\"),\n      address1: new FormControl(\"\", [Validators.required]),\n      address2: new FormControl(\"\"),\n      city: new FormControl(\"\", [Validators.required]),\n      zipCode: new FormControl(\"\", [Validators.required]),\n      password: new FormControl(\"\", [\n        Validators.required,\n        Validators.minLength(3)\n      ]),\n      confirmPassword: new FormControl(\"\", [\n        Validators.required,\n        Validators.minLength(3)\n      ])\n    }, {\n      validators: [Validation.match('password', 'confirmPassword')]\n    });\n  }\n\n  public register = (registerFormValue: any) => {\n\n    const formValues = { ...registerFormValue };\n    const user: UserForRegistrationDto = {\n      password: formValues.password,\n      phoneNumber: formValues.phoneNumber,\n      firstName: formValues.firstName.trim(),\n      lastName: formValues.lastName.trim(),\n      email: formValues.email !== '' ? formValues.email.trim() : null,\n      address1: formValues.address1.trim(),\n      address2: formValues.address2 !== null ? formValues.address2.trim() : null,\n      city: formValues.city.trim(),\n      zipCode: formValues.zipCode.trim()\n    }\n\n    this.authService.registerUser(apiPaths.registration, user)\n      .subscribe(response => {\n        this.router.navigate([routerPaths.verifyPhone], {state: {data: response}});\n      }, error => {\n        if (error.status == 403) {\n          this.router.navigate([routerPaths.verifyPhone], {state: {data: user}});\n        }\n        this.validationErrors = error;\n      })\n  }\n\n  getEmailError() {\n      if (this.registerForm.controls['email'].hasError('required')) {\n          return 'You must enter a value';\n      }\n      return this.registerForm.controls['email'].hasError('email') ? 'Not a valid email' : '';\n  }\n\n  getFirstNameError() {\n    if (this.registerForm.controls['firstName'].hasError('required')) {\n      return 'First name is required';\n    }\n    return this.registerForm.controls['firstName'].hasError('pattern') ? 'Name can only contain letters' : '';\n  }\n\n  getLastNameError() {\n    if (this.registerForm.controls['lastName'].hasError('required')) {\n      return 'Last name is required';\n    }\n    return this.registerForm.controls['lastName'].hasError('pattern') ? 'Name can only contain letters' : '';\n  }\n\n}\n\n    \n\n    \n        \n    An unexpected error ocurred.\n    \n      \n        \n          \n  \n            \n              \n                First Name:\n                \n                {{getFirstNameError()}}\n              \n              \n                Last Name:\n                \n                {{getLastNameError()}}\n              \n            \n  \n            \n              \n                Email:\n                \n                mail\n                {{getEmailError()}}\n                This email is already in use\n              \n              \n                Phone:\n                \n                phone\n              \n            \n\n            \n\n              \n                Address 1:\n                \n              \n\n              \n                Address 2:\n                \n              \n\n              \n              \n                City:\n                \n              \n              \n                Zip Code:\n                \n              \n              \n              \n            \n  \n            \n              \n                Password:\n                \n                {{hide ? 'visibility_off' : 'visibility'}}\n                Password must be at least {{passwordMinLength}} characters\n              \n  \n              \n                Confirm Password:\n                \n                {{hideConfirm ? 'visibility_off' : 'visibility'}}\n                Passwords must match\n              \n            \n\n            \n              Register\n            \n\n          \n        \n      \n    \n  \n    \n\n    \n                \n                    ./register.component.scss\n                \n                .register-form\n{\n  width:90%;\n  margin: 0 auto;\n}\nbutton\n{\n  width:75%;\n}\n.w-one-third\n{\n  width: 33%;\n}\n.w-half\n{\n  width: 50%;\n}\nmat-form-field\n{\n  display: block;\n}\nmat-card-footer\n{\n  text-align:center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    An unexpected error ocurred.                                                                        First Name:                                {{getFirstNameError()}}                                            Last Name:                                {{getLastNameError()}}                                                                      Email:                                mail                {{getEmailError()}}                This email is already in use                                            Phone:                                phone                                                                    Address 1:                                                            Address 2:                                                                          City:                                                            Zip Code:                                                                                                                  Password:                                {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                Password must be at least {{passwordMinLength}} characters                                              Confirm Password:                                {{hideConfirm ? \\'visibility_off\\' : \\'visibility\\'}}                Passwords must match                                                    Register                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegistrationResponseDto.html":{"url":"interfaces/RegistrationResponseDto.html","title":"interface - RegistrationResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegistrationResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/response.ts\n        \n\n\n            \n                Description\n            \n            \n                A Data Transfer Object to flag a successful registration attempt along\nwith any errors that were encountered.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errors\n                                        \n                                \n                                \n                                        \n                                            isSuccessfulRegistration\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Records any and all errors encountered when attempting a registration.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSuccessfulRegistration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isSuccessfulRegistration:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A flag recording whether a registration attempt was successful.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { JwtTokenDto } from \"./jwt-token\";\n\n/**\n * A Data Transfer Object to flag a successful registration attempt along \n * with any errors that were encountered. \n * \n */\nexport interface RegistrationResponseDto {\n    /**\n     * A flag recording whether a registration attempt was successful. \n     */\n    isSuccessfulRegistration: boolean;\n\n    /**\n     * Records any and all errors encountered when attempting a registration. \n     */\n    errors: string[];\n}\n\n/**\n * A Data Transfer Object to pass access and refresh tokens upon successful authentication. \n */\nexport interface AuthResponseDto extends JwtTokenDto {\n  /**\n   * A flag recording whether an authentication attempt was successful. \n   */\n  isAuthSuccessful: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/password/reset-password/reset-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                styleUrls\n                ./reset-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Public\n                                hideConfirm\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                passwordMinLength\n                            \n                            \n                                    Private\n                                previousNavigationData\n                            \n                            \n                                    Public\n                                resetPasswordForm\n                            \n                            \n                                    Private\n                                returnUrl\n                            \n                            \n                                    Public\n                                submit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute, accountService: AccountService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hideConfirm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        passwordMinLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        previousNavigationData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResetPasswordDto | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resetPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        submit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/reset-password/reset-password.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { apiPaths, routerPaths } from 'src/app/app.constants';\nimport { AccountService } from 'src/app/core/services/account.service';\nimport Validation from 'src/app/shared/directives/validation';\nimport { ResetPasswordDto } from 'src/app/shared/models/account';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n  public resetPasswordForm!: FormGroup;\n  public password: string | null = null;\n  public passwordMinLength = 3;\n  public hide: boolean = true;\n  public hideConfirm: boolean = true;\n  public error: boolean = false;\n  private returnUrl: string | undefined;\n  private previousNavigationData: ResetPasswordDto | null = null;\n\n  constructor(private router: Router,\n    private route: ActivatedRoute,\n    private accountService: AccountService,) { }\n\n  ngOnInit(): void {\n    this.previousNavigationData = history.state.data;\n    if (this.previousNavigationData == null || this.previousNavigationData == undefined) \n      this.router.navigate(['/']); \n    console.log(this.previousNavigationData);\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '';\n\n    this.resetPasswordForm = new FormGroup({\n      password: new FormControl(\"\", [\n        Validators.required, \n        Validators.minLength(this.passwordMinLength)\n      ]),\n      confirmPassword: new FormControl(\"\", [Validators.required])\n    },\n    {\n      validators: [Validation.match('password', 'confirmPassword')]\n    });\n  }\n\n  public submit = (resetPasswordFormValue: any) => {\n    const formValue = { ...resetPasswordFormValue };\n    const resetPasswordDto: ResetPasswordDto = {\n      phoneNumber: this.previousNavigationData?.phoneNumber,\n      password: formValue.password,\n      token: this.previousNavigationData?.token\n    }\n\n    this.accountService.resetPassword(apiPaths.resetPassword, resetPasswordDto)\n      .subscribe(() => {\n        this.router.navigate([routerPaths.updatedPassword], {state: {data: resetPasswordDto.phoneNumber}});\n      }, error => {\n        this.router.navigate([this.returnUrl])\n      })\n  }\n\n}\n\n    \n\n    \n        \n  An unexpected error ocurred.\n  \n    \n      \n        \n\n          \n            \n              Password:\n              \n              {{hide ? 'visibility_off' : 'visibility'}}\n              Password must be at least {{passwordMinLength}} characters\n            \n\n            \n              Confirm Password:\n              \n              {{hideConfirm ? 'visibility_off' : 'visibility'}}\n              Passwords must match\n            \n          \n\n          \n            Submit\n          \n\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./reset-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  An unexpected error ocurred.                                                        Password:                            {{hide ? \\'visibility_off\\' : \\'visibility\\'}}              Password must be at least {{passwordMinLength}} characters                                      Confirm Password:                            {{hideConfirm ? \\'visibility_off\\' : \\'visibility\\'}}              Passwords must match                                            Submit                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResetPasswordDto.html":{"url":"interfaces/ResetPasswordDto.html","title":"interface - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/account.ts\n        \n\n\n            \n                Description\n            \n            \n                Data Transfer Object sending and receiving a password reset token.\n\n            \n\n            \n                Extends\n            \n            \n                        AuthenticationDto\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:     string | null | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null | undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A password reset token assigned to a user from asp.net core Identity.\nThe token is required and must match the generated token in order to successfully\nupdate a user's password.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AuthenticationDto extends PhoneNumberDto {\n  /**\n   * A plain-text, non-hashed string representing a password. \n   * For security, ensure hashing takes place on the backend.\n   * Maximum length: 255 characters. Required by the backend.\n   */\n  password: string;\n}\n\n/**\n * Data Transfer Object to send and receive phone number.\n */\n export interface PhoneNumberDto {\n  /**\n   * A strictly 10-digit string representing a valid phone number capable of SMS.\n   */\n  phoneNumber: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to transmit a phone number - verification code pair.\n */\n export interface PhoneVerificationDto extends PhoneNumberDto {\n  /**\n   * A verification code that must match the code sent to the associated phone number\n   * in order to be verify the phone number.\n   */\n  code: string;\n}\n\n/**\n * Data Transfer Object sending and receiving a password reset token.\n */\n export interface ResetPasswordDto extends AuthenticationDto {\n  /**\n   * A password reset token assigned to a user from asp.net core Identity.\n   * The token is required and must match the generated token in order to successfully \n   * update a user's password. \n   */\n  token: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to send and receive all user information required for registering with the app.\n */\nexport interface UserForRegistrationDto extends AuthenticationDto {\n  /**\n   * A user's first name. Required by the backend. \n   */\n  firstName: string;\n  /**\n   * A user's last name. Required by the backend.\n   */\n  lastName: string;\n  /**\n   * Must be formatted as `sometext@moretext.TLD`. \n   * Not required by backend.\n   */\n  email: string | null;\n  /**\n   * A user's main street address. Required by the backend.\n   */\n  address1: string;\n  /**\n   * A user's apartment number, suite, or any other 'secondary' address. \n   * Not required by the backend. \n   */\n  address2: string | null;\n  /**\n   * The city portion of the user's address.\n   * Required by the backend.\n   */\n  city: string;\n  /**\n   * The zip code portion of the user's address. Typically 5 digits long.\n   * Required by the backend.\n   */\n  zipCode: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Routing.html":{"url":"classes/Routing.html","title":"class - Routing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Routing\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/routing.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom routing methods for navigation.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createCompleteRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        createCompleteRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/directives/routing.ts:11\n                        \n                    \n\n            \n                \n                    Concatenates two strings with a / between them.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    envAddress\n                                                    \n                                                            The API url found in environment.ts.\n\n                                                    \n                                            \n                                            \n                                                    route\n                                                    \n                                                            The route of the API's controller.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export default class Routing {\n  /**\n   * Concatenates two strings with a `/` between them.\n   * @param envAddress The API url found in `environment.ts`.\n   * @param route The route of the API's controller.\n   * @returns A complete route from API url to the API's controller method. \n   */\n  static createCompleteRoute = (envAddress: string, route: string) : string => {\n    return `${envAddress}/${route}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerErrorComponent.html":{"url":"components/ServerErrorComponent.html","title":"component - ServerErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ServerErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/errors/pages/server-error/server-error.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-server-error\n            \n\n            \n                styleUrls\n                ./server-error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./server-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/errors/pages/server-error/server-error.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/errors/pages/server-error/server-error.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/errors/pages/server-error/server-error.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.scss']\n})\nexport class ServerErrorComponent implements OnInit {\n  error: any;\n\n  constructor(private router: Router) { \n    const navigation = this.router.getCurrentNavigation();\n    this.error = navigation?.extras?.state?.error;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Internal server error - refreshing the page will make the error disappear!\n\n  Error: {{error.message}}\n  Note: If you are seeing this then Angular is probably not to blame\n  What to do next?\n  \n    Open the Chrome dev tools\n    Inspet the network tab\n    Examine the request URL - make sure it is correct\n    Reproduce the error in Postman - if we see the same response, then the issue is not with the Front End\n  \n  Following is the stack trace - this is where your investigation should start!\n  {{error.details}}\n\n\n    \n\n    \n                \n                    ./server-error.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Internal server error - refreshing the page will make the error disappear!  Error: {{error.message}}  Note: If you are seeing this then Angular is probably not to blame  What to do next?      Open the Chrome dev tools    Inspet the network tab    Examine the request URL - make sure it is correct    Reproduce the error in Postman - if we see the same response, then the issue is not with the Front End    Following is the stack trace - this is where your investigation should start!  {{error.details}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ServerErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Angular Material imports\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule } from '@angular/material/core'\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n// Angular CDK imports\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n// Toastr Notifications\nimport { ToastrModule } from 'ngx-toastr';\n\n// JWT \nimport { JwtModule } from '@auth0/angular-jwt';\nimport { tokens } from '../app.constants';\n\n/**\n * Gets the user's access token for authentication. \n * @returns The access token stored in local storage.\n */\nexport function tokenGetter() {\n  return localStorage.getItem(tokens.access);\n}\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatProgressBarModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    FlexLayoutModule,\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right'\n    }),\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        allowedDomains: [\"localhost:5001\"],\n        disallowedRoutes: []\n      }\n    })\n  ],\n  exports: [\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatProgressBarModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    FlexLayoutModule,\n    ToastrModule\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdatedPasswordComponent.html":{"url":"components/UpdatedPasswordComponent.html","title":"component - UpdatedPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdatedPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/password/updated-password/updated-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-updated-password\n            \n\n            \n                styleUrls\n                ./updated-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./updated-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                previousNavigationData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/password/updated-password/updated-password.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/password/updated-password/updated-password.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        previousNavigationData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/password/updated-password/updated-password.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-updated-password',\n  templateUrl: './updated-password.component.html',\n  styleUrls: ['./updated-password.component.scss']\n})\nexport class UpdatedPasswordComponent implements OnInit {\n   previousNavigationData: string | undefined;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.previousNavigationData = history.state.data;\n    if (this.previousNavigationData == '' || this.previousNavigationData == undefined) {\n      this.router.navigate(['/']); \n    }\n  }\n\n}\n\n    \n\n    \n        The password was successfully reset.\nPlease Log In to access the app.\n\n    \n\n    \n                \n                    ./updated-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'The password was successfully reset.Please Log In to access the app.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdatedPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UrlService.html":{"url":"injectables/UrlService.html","title":"injectable - UrlService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UrlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/url.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A service to access the url while navigating.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                previousUrl\n                            \n                            \n                                    Public\n                                previousUrl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setPreviousUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setPreviousUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPreviousUrl(previousUrl: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/url.service.ts:30\n                \n            \n\n\n            \n                \n                    Sets the next value to this.previousUrl\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    previousUrl\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The previous url after navigating to a new page.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        previousUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/url.service.ts:15\n                        \n                    \n\n            \n                \n                    When subscribed to, previousUrl will give the previous url after navigation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        previousUrl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.previousUrl.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/url.service.ts:19\n                        \n                    \n\n            \n                \n                    An Observable type of this.previousUrl.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * A service to access the url while navigating.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UrlService {\n  /**\n   * When subscribed to, previousUrl will give the previous url after navigation.\n   */\n  private previousUrl: BehaviorSubject = new BehaviorSubject(null);\n  /**\n   * An Observable type of this.previousUrl.\n   */\n  public previousUrl$: Observable = this.previousUrl.asObservable();\n\n  /**\n   * @ignore\n   */\n  constructor() {}\n\n  /**\n   * Sets the `next` value to this.previousUrl\n   * @param previousUrl The previous url after navigating to a new page.\n   */\n  public setPreviousUrl(previousUrl: string | null) {\n    this.previousUrl.next(previousUrl);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserForRegistrationDto.html":{"url":"interfaces/UserForRegistrationDto.html","title":"interface - UserForRegistrationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserForRegistrationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/account.ts\n        \n\n\n            \n                Description\n            \n            \n                Data Transfer Object to send and receive all user information required for registering with the app.\n\n            \n\n            \n                Extends\n            \n            \n                        AuthenticationDto\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address1\n                                        \n                                \n                                \n                                        \n                                            address2\n                                        \n                                \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            zipCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A user's main street address. Required by the backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address2:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A user's apartment number, suite, or any other 'secondary' address.\nNot required by the backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The city portion of the user's address.\nRequired by the backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Must be formatted as sometext@moretext.TLD.\nNot required by backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A user's first name. Required by the backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A user's last name. Required by the backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zipCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The zip code portion of the user's address. Typically 5 digits long.\nRequired by the backend.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AuthenticationDto extends PhoneNumberDto {\n  /**\n   * A plain-text, non-hashed string representing a password. \n   * For security, ensure hashing takes place on the backend.\n   * Maximum length: 255 characters. Required by the backend.\n   */\n  password: string;\n}\n\n/**\n * Data Transfer Object to send and receive phone number.\n */\n export interface PhoneNumberDto {\n  /**\n   * A strictly 10-digit string representing a valid phone number capable of SMS.\n   */\n  phoneNumber: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to transmit a phone number - verification code pair.\n */\n export interface PhoneVerificationDto extends PhoneNumberDto {\n  /**\n   * A verification code that must match the code sent to the associated phone number\n   * in order to be verify the phone number.\n   */\n  code: string;\n}\n\n/**\n * Data Transfer Object sending and receiving a password reset token.\n */\n export interface ResetPasswordDto extends AuthenticationDto {\n  /**\n   * A password reset token assigned to a user from asp.net core Identity.\n   * The token is required and must match the generated token in order to successfully \n   * update a user's password. \n   */\n  token: string | null | undefined;\n}\n\n/**\n * Data Transfer Object to send and receive all user information required for registering with the app.\n */\nexport interface UserForRegistrationDto extends AuthenticationDto {\n  /**\n   * A user's first name. Required by the backend. \n   */\n  firstName: string;\n  /**\n   * A user's last name. Required by the backend.\n   */\n  lastName: string;\n  /**\n   * Must be formatted as `sometext@moretext.TLD`. \n   * Not required by backend.\n   */\n  email: string | null;\n  /**\n   * A user's main street address. Required by the backend.\n   */\n  address1: string;\n  /**\n   * A user's apartment number, suite, or any other 'secondary' address. \n   * Not required by the backend. \n   */\n  address2: string | null;\n  /**\n   * The city portion of the user's address.\n   * Required by the backend.\n   */\n  city: string;\n  /**\n   * The zip code portion of the user's address. Typically 5 digits long.\n   * Required by the backend.\n   */\n  zipCode: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Validation.html":{"url":"classes/Validation.html","title":"class - Validation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Validation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/validation.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom validation methods for forms.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                match\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        match\n                        \n                    \n                \n            \n            \n                \n                    \n                    match(controlName: string, checkControlName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/validation.ts:14\n                \n            \n\n\n            \n                \n                    Checks whether or not two strings are equal.\nReturns null otherwise.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    controlName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of a form's FormControl.\n\n                                    \n                                \n                                \n                                    checkControlName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the FormControl to check against controlName.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        The matching property is set to true if checkControlName equals controlName. \nReturns null otherwise.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl, ValidatorFn } from \"@angular/forms\";\n\n/**\n * Custom validation methods for forms.\n */\nexport default class Validation {\n  /**\n   * Checks whether or not two strings are equal.\n   * @param controlName The name of a form's FormControl.\n   * @param checkControlName The name of the FormControl to check against `controlName`.\n   * @returns The `matching` property is set to `true` if `checkControlName` equals `controlName`. \n   * Returns `null` otherwise.\n   */\n  static match(controlName: string, checkControlName: string): ValidatorFn {\n    return (controls: AbstractControl) => {\n      const control = controls.get(controlName);\n      const checkControl = controls.get(checkControlName);\n\n      if (control == null || checkControl == null) {\n        return null; \n      }\n\n      if (checkControl.errors && !checkControl.errors.matching) {\n        return null;\n      }\n\n      if (control.value !== checkControl.value) {\n        controls.get(checkControlName)?.setErrors({ matching: true });\n        return { matching: true };\n      } else {\n        return null;\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VerifyPhoneComponent.html":{"url":"components/VerifyPhoneComponent.html","title":"component - VerifyPhoneComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VerifyPhoneComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/account/phone/verify-phone/verify-phone.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-phone\n            \n\n            \n                styleUrls\n                ./verify-phone.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./verify-phone.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                codeLength\n                            \n                            \n                                    Private\n                                phoneNumber\n                            \n                            \n                                    Private\n                                previousNavigationData\n                            \n                            \n                                    Private\n                                previousUrl\n                            \n                            \n                                    Private\n                                returnUrl\n                            \n                            \n                                    Public\n                                verifyPhoneForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, accountService: AccountService, router: Router, route: ActivatedRoute, urlService: UrlService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        urlService\n                                                  \n                                                        \n                                                                        UrlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        verify\n                        \n                    \n                \n            \n            \n                \n                    \n                    verify()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        codeLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        previousNavigationData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PhoneNumberDto | ResetPasswordDto | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        previousUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        verifyPhoneForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/account/phone/verify-phone/verify-phone.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IConfig } from 'ngx-mask';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthenticationService } from 'src/app/core/authentication/authentication.service';\nimport { UrlService } from 'src/app/core/services/url.service';\nimport { PhoneNumberDto, PhoneVerificationDto, ResetPasswordDto } from 'src/app/shared/models/account';\nimport { AccountService } from 'src/app/core/services/account.service';\nimport { apiPaths, routerPaths } from 'src/app/app.constants';\n\nexport let options: Partial | (() => Partial);\n\n@Component({\n  selector: 'app-confirm-phone',\n  templateUrl: './verify-phone.component.html',\n  styleUrls: ['./verify-phone.component.scss']\n})\nexport class VerifyPhoneComponent implements OnInit {\n  public verifyPhoneForm: FormGroup;\n  codeLength: number = 6;\n  private phoneNumber: string | null | undefined;\n  private previousNavigationData: PhoneNumberDto | ResetPasswordDto | null = null;\n  private previousUrl: string | null = null;\n  private returnUrl: string| undefined;\n\n  constructor(private authService: AuthenticationService,\n    private accountService: AccountService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private urlService: UrlService,\n    fb: FormBuilder) { \n      this.verifyPhoneForm = fb.group ({\n        'verifyCode':['', Validators.compose([Validators.maxLength(this.codeLength), Validators.required])]\n      })\n    }\n\n    // Should accept an object with a phoneNumber property\n  ngOnInit(): void {\n    this.previousNavigationData = history.state.data;\n    if (this.previousNavigationData == null || this.previousNavigationData == undefined) \n      this.router.navigate(['/']); \n\n    this.phoneNumber = this.previousNavigationData?.phoneNumber;\n\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '';\n\n    this.urlService.previousUrl$.subscribe((previousUrl: string | null) => {\n      this.previousUrl = previousUrl;\n    })\n  }\n\n  public verify() {\n    const phoneVerificationDto: PhoneVerificationDto = {\n      code: this.verifyPhoneForm.value.verifyCode,\n      phoneNumber: this.phoneNumber\n    }\n\n    // Set the information to branch where verify phone sends its data\n    if (this.previousUrl?.includes(routerPaths.auth)) {\n      // If the previous url was the auth (registration) page, verify and confirm phone number\n      this.authService.confirmPhone(apiPaths.confirmPhone, phoneVerificationDto)\n      .subscribe(() => {\n        this.router.navigate([routerPaths.confirmPhone], {state: {data: this.phoneNumber}});\n      }, error => {\n        this.router.navigate([this.returnUrl])\n      })\n    } else if (this.previousUrl?.includes(routerPaths.forgotPassword)){\n      this.accountService.resetPasswordToken(apiPaths.resetPasswordToken, phoneVerificationDto)\n      .subscribe(response => {\n        this.router.navigate([routerPaths.resetPassword], {state: {data: response}});\n      })\n    }\n  }  \n}\n\n    \n\n    \n        \n \n    \n      \n\n        \n          Phone Verification\n        \n        Please enter the verification code that was sent to you to confirm your phone number.\n        Your account registration will not be complete until your phone number has been verified.\n        \n          Verification Code:\n          \n          Your verification code is required\n        \n\n        \n          Verify\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./verify-phone.component.scss\n                \n                mat-card {\n  text-align:center;\n  max-width: 80%;\n  margin:5% auto;\n}\nmat-card-header {\n  display:block;\n}\n\nmat-card-footer {\n  margin: 0 auto 10px;\n}\n#phone-verification {\n  text-align:center;\n  letter-spacing: 18px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                             Phone Verification                Please enter the verification code that was sent to you to confirm your phone number.        Your account registration will not be complete until your phone number has been verified.                  Verification Code:                    Your verification code is required                          Verify                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageTemplatesComponent', 'selector': 'app-manage-templates'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PhoneConfirmationComponent', 'selector': 'app-confirmation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'UpdatedPasswordComponent', 'selector': 'app-updated-password'},{'name': 'VerifyPhoneComponent', 'selector': 'app-confirm-phone'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VerifyPhoneComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            apiPaths\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            IDENTITY_ROLES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            routerPaths\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            tokens\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/core/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/header/nav.component.ts\n            \n            component\n            NavComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/services/account.service.ts\n            \n            injectable\n            AccountService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/services/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/services/environment-url.service.ts\n            \n            injectable\n            EnvironmentUrlService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/core/services/url.service.ts\n            \n            injectable\n            UrlService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/login/login.component.ts\n            \n            injectable\n            LoginComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/login/login.component.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/register/register.component.ts\n            \n            injectable\n            RegisterComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/modules/account/auth/register/register.component.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/account/password/forgot-password/forgot-password.component.ts\n            \n            component\n            ForgotPasswordComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/account/password/forgot-password/forgot-password.component.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/account/password/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/modules/account/password/updated-password/updated-password.component.ts\n            \n            component\n            UpdatedPasswordComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/account/phone/phone-confirmation/phone-confirmation.component.ts\n            \n            component\n            PhoneConfirmationComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/account/phone/verify-phone/verify-phone.component.ts\n            \n            component\n            VerifyPhoneComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/modules/account/phone/verify-phone/verify-phone.component.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/church-services/manage-templates/manage-templates.component.ts\n            \n            component\n            ManageTemplatesComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/dashboard/pages/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/errors/pages/forbidden/forbidden.component.ts\n            \n            component\n            ForbiddenComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/errors/pages/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/errors/pages/server-error/server-error.component.ts\n            \n            component\n            ServerErrorComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/directives/routing.ts\n            \n            class\n            Routing\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/directives/validation.ts\n            \n            class\n            Validation\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/account.ts\n            \n            interface\n            AuthenticationDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/account.ts\n            \n            interface\n            PhoneNumberDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/account.ts\n            \n            interface\n            PhoneVerificationDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/account.ts\n            \n            interface\n            ResetPasswordDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/account.ts\n            \n            interface\n            UserForRegistrationDto\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/shared/models/jwt-token.ts\n            \n            interface\n            JwtTokenDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/response.ts\n            \n            interface\n            AuthResponseDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/response.ts\n            \n            interface\n            RegistrationResponseDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/shared.module.ts\n            \n            function\n            tokenGetter\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.0.3\n        \n            @angular/cdk : ^12.2.3\n        \n            @angular/common : ~13.0.2\n        \n            @angular/compiler : ~13.0.2\n        \n            @angular/core : ~13.0.2\n        \n            @angular/flex-layout : ^12.0.0-beta.34\n        \n            @angular/forms : ~13.0.2\n        \n            @angular/material : ^12.2.3\n        \n            @angular/platform-browser : ~13.0.2\n        \n            @angular/platform-browser-dynamic : ~13.0.2\n        \n            @angular/router : ~13.0.2\n        \n            @auth0/angular-jwt : ^5.0.2\n        \n            ngx-mask : ^12.0.0\n        \n            ngx-toastr : ^14.1.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Roles   (src/.../roles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/models/roles.ts\n    \n        \n            \n                \n                    \n                        \n                        Roles\n                    \n                \n                        \n                            \n                                 superAdmin\n                            \n                        \n                        \n                            \n                                Value : SuperAdmin\n                            \n                        \n                        \n                            \n                                 administrator\n                            \n                        \n                        \n                            \n                                Value : Administrator\n                            \n                        \n                        \n                            \n                                 driver\n                            \n                        \n                        \n                            \n                                Value : Driver\n                            \n                        \n                        \n                            \n                                 user\n                            \n                        \n                        \n                            \n                                Value : User\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            tokenGetter   (src/.../shared.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/shared.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tokenGetter\n                        \n                    \n                \n            \n            \n                \ntokenGetter()\n                \n            \n\n\n\n\n            \n                \n                    Gets the user's access token for authentication.\n\n\n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTransportationClient\nThis project is the client side for The Rock's Transportation app. \nError Handling\nLogic for handling errors returned from the server can be found at core/interceptors/error.interceptor.ts.\nLogic for handling errors caught before leaving the client side can be found at core/guards/\nUsing Angular CLI\nThis project was generated with Angular CLI version 13.0.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAppModule -->\n\nAuthComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nForbiddenComponent\n\nForbiddenComponent\n\nAppModule -->\n\nForbiddenComponent->AppModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAppModule -->\n\nForgotPasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nManageTemplatesComponent\n\nManageTemplatesComponent\n\nAppModule -->\n\nManageTemplatesComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nPhoneConfirmationComponent\n\nPhoneConfirmationComponent\n\nAppModule -->\n\nPhoneConfirmationComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nServerErrorComponent\n\nServerErrorComponent\n\nAppModule -->\n\nServerErrorComponent->AppModule\n\n\n\n\n\nUpdatedPasswordComponent\n\nUpdatedPasswordComponent\n\nAppModule -->\n\nUpdatedPasswordComponent->AppModule\n\n\n\n\n\nVerifyPhoneComponent\n\nVerifyPhoneComponent\n\nAppModule -->\n\nVerifyPhoneComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nUrlService\n\nUrlService\n\nAppModule -->\n\nUrlService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        13 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apiPaths   (src/.../app.constants.ts)\n                        \n                        \n                            IDENTITY_ROLES   (src/.../app.constants.ts)\n                        \n                        \n                            options   (src/.../register.component.ts)\n                        \n                        \n                            options   (src/.../forgot-password.component.ts)\n                        \n                        \n                            options   (src/.../verify-phone.component.ts)\n                        \n                        \n                            options   (src/.../login.component.ts)\n                        \n                        \n                            routerPaths   (src/.../app.constants.ts)\n                        \n                        \n                            tokens   (src/.../app.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiPaths\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  registration: \"api/Accounts/Registration\",\n  login: \"api/Accounts/Login\",\n  phoneVerification: \"api/Accounts/PhoneVerification\",\n  forgotPassword: \"api/Accounts/ForgotPassword\",\n  confirmPhone: \"api/Accounts/PhoneConfirmation\",\n  resetPassword: \"api/Accounts/ResetPassword\",\n  resetPasswordToken: \"api/Accounts/ResetPasswordToken\",\n  refreshTokens: \"api/Tokens/refresh\"\n}\n                    \n                \n\n            \n                \n                    Constant variables for routes to API controller methods.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IDENTITY_ROLES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"\n                    \n                \n\n            \n                \n                    Path to collect identity roles for asp.net core Identity.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routerPaths\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  auth: 'auth',\n  confirmPhone: 'phone-confirmation',\n  forbidden: 'forbidden',\n  forgotPassword: 'password/forgot-password',\n  manageTemplates: 'manage-templates',\n  notFound: '404',\n  resetPassword: 'password/reset-password',\n  updatedPassword: 'password/updated',\n  verifyPhone: 'verify-phone',\n  serverError: 'server-error'\n}\n                    \n                \n\n            \n                \n                    Constant variables for internal routing paths.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tokens\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  access: \"accessToken\",\n  refresh: \"refreshToken\"\n}\n                    \n                \n\n            \n                \n                    Constant variables for the tokens used by the app.\n\n                \n            \n\n        \n    \n\n    src/app/modules/account/auth/register/register.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial | \n\n                    \n                \n\n\n        \n    \n\n    src/app/modules/account/password/forgot-password/forgot-password.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial | \n\n                    \n                \n\n\n        \n    \n\n    src/app/modules/account/phone/verify-phone/verify-phone.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial | \n\n                    \n                \n\n\n        \n    \n\n    src/app/modules/account/auth/login/login.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial | \n\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
